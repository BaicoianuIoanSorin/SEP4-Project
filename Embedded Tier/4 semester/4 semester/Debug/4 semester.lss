
4 semester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000005da  00800200  00005af6  00005b8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005af6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000fb6  008007da  008007da  00006164  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006164  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000061c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000a70  00000000  00000000  00006200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000ce60  00000000  00000000  00006c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003375  00000000  00000000  00013ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000065b9  00000000  00000000  00016e45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000024f0  00000000  00000000  0001d400  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003fa3  00000000  00000000  0001f8f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000b9bd  00000000  00000000  00023893  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009d0  00000000  00000000  0002f250  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e5 c0       	rjmp	.+458    	; 0x1cc <__ctors_end>
       2:	00 00       	nop
       4:	04 c1       	rjmp	.+520    	; 0x20e <__bad_interrupt>
       6:	00 00       	nop
       8:	02 c1       	rjmp	.+516    	; 0x20e <__bad_interrupt>
       a:	00 00       	nop
       c:	00 c1       	rjmp	.+512    	; 0x20e <__bad_interrupt>
       e:	00 00       	nop
      10:	fe c0       	rjmp	.+508    	; 0x20e <__bad_interrupt>
      12:	00 00       	nop
      14:	fc c0       	rjmp	.+504    	; 0x20e <__bad_interrupt>
      16:	00 00       	nop
      18:	fa c0       	rjmp	.+500    	; 0x20e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f8 c0       	rjmp	.+496    	; 0x20e <__bad_interrupt>
      1e:	00 00       	nop
      20:	f6 c0       	rjmp	.+492    	; 0x20e <__bad_interrupt>
      22:	00 00       	nop
      24:	f4 c0       	rjmp	.+488    	; 0x20e <__bad_interrupt>
      26:	00 00       	nop
      28:	f2 c0       	rjmp	.+484    	; 0x20e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f0 c0       	rjmp	.+480    	; 0x20e <__bad_interrupt>
      2e:	00 00       	nop
      30:	c9 c7       	rjmp	.+3986   	; 0xfc4 <__vector_12>
      32:	00 00       	nop
      34:	ec c0       	rjmp	.+472    	; 0x20e <__bad_interrupt>
      36:	00 00       	nop
      38:	ea c0       	rjmp	.+468    	; 0x20e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e8 c0       	rjmp	.+464    	; 0x20e <__bad_interrupt>
      3e:	00 00       	nop
      40:	e6 c0       	rjmp	.+460    	; 0x20e <__bad_interrupt>
      42:	00 00       	nop
      44:	e4 c0       	rjmp	.+456    	; 0x20e <__bad_interrupt>
      46:	00 00       	nop
      48:	e2 c0       	rjmp	.+452    	; 0x20e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e0 c0       	rjmp	.+448    	; 0x20e <__bad_interrupt>
      4e:	00 00       	nop
      50:	de c0       	rjmp	.+444    	; 0x20e <__bad_interrupt>
      52:	00 00       	nop
      54:	dc c0       	rjmp	.+440    	; 0x20e <__bad_interrupt>
      56:	00 00       	nop
      58:	da c0       	rjmp	.+436    	; 0x20e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d8 c0       	rjmp	.+432    	; 0x20e <__bad_interrupt>
      5e:	00 00       	nop
      60:	d6 c0       	rjmp	.+428    	; 0x20e <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 b2 20 	jmp	0x4164	; 0x4164 <__vector_25>
      68:	0c 94 04 21 	jmp	0x4208	; 0x4208 <__vector_26>
      6c:	d0 c0       	rjmp	.+416    	; 0x20e <__bad_interrupt>
      6e:	00 00       	nop
      70:	ce c0       	rjmp	.+412    	; 0x20e <__bad_interrupt>
      72:	00 00       	nop
      74:	cc c0       	rjmp	.+408    	; 0x20e <__bad_interrupt>
      76:	00 00       	nop
      78:	ca c0       	rjmp	.+404    	; 0x20e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c8 c0       	rjmp	.+400    	; 0x20e <__bad_interrupt>
      7e:	00 00       	nop
      80:	c6 c0       	rjmp	.+396    	; 0x20e <__bad_interrupt>
      82:	00 00       	nop
      84:	c4 c0       	rjmp	.+392    	; 0x20e <__bad_interrupt>
      86:	00 00       	nop
      88:	c2 c0       	rjmp	.+388    	; 0x20e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c0 c0       	rjmp	.+384    	; 0x20e <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 48 21 	jmp	0x4290	; 0x4290 <__vector_36>
      94:	0c 94 9a 21 	jmp	0x4334	; 0x4334 <__vector_37>
      98:	ba c0       	rjmp	.+372    	; 0x20e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 e5 25 	jmp	0x4bca	; 0x4bca <__vector_39>
      a0:	b6 c0       	rjmp	.+364    	; 0x20e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	b4 c0       	rjmp	.+360    	; 0x20e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	b2 c0       	rjmp	.+356    	; 0x20e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b0 c0       	rjmp	.+352    	; 0x20e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ae c0       	rjmp	.+348    	; 0x20e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	ac c0       	rjmp	.+344    	; 0x20e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	aa c0       	rjmp	.+340    	; 0x20e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	a8 c0       	rjmp	.+336    	; 0x20e <__bad_interrupt>
      be:	00 00       	nop
      c0:	a6 c0       	rjmp	.+332    	; 0x20e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	a4 c0       	rjmp	.+328    	; 0x20e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	a2 c0       	rjmp	.+324    	; 0x20e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 de 21 	jmp	0x43bc	; 0x43bc <__vector_51>
      d0:	0c 94 30 22 	jmp	0x4460	; 0x4460 <__vector_52>
      d4:	9c c0       	rjmp	.+312    	; 0x20e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 74 22 	jmp	0x44e8	; 0x44e8 <__vector_54>
      dc:	0c 94 c6 22 	jmp	0x458c	; 0x458c <__vector_55>
      e0:	96 c0       	rjmp	.+300    	; 0x20e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	16 1a       	sub	r1, r22
      e6:	16 1a       	sub	r1, r22
      e8:	16 1a       	sub	r1, r22
      ea:	4d 1a       	sub	r4, r29
      ec:	55 1a       	sub	r5, r21
      ee:	6a 1a       	sub	r6, r26
      f0:	16 1a       	sub	r1, r22
      f2:	16 1a       	sub	r1, r22
      f4:	4d 1a       	sub	r4, r29
      f6:	55 1a       	sub	r5, r21
      f8:	07 26       	eor	r0, r23
      fa:	77 26       	eor	r7, r23
      fc:	77 26       	eor	r7, r23
      fe:	77 26       	eor	r7, r23
     100:	77 26       	eor	r7, r23
     102:	77 26       	eor	r7, r23
     104:	77 26       	eor	r7, r23
     106:	77 26       	eor	r7, r23
     108:	07 26       	eor	r0, r23
     10a:	77 26       	eor	r7, r23
     10c:	77 26       	eor	r7, r23
     10e:	77 26       	eor	r7, r23
     110:	77 26       	eor	r7, r23
     112:	77 26       	eor	r7, r23
     114:	77 26       	eor	r7, r23
     116:	77 26       	eor	r7, r23
     118:	09 26       	eor	r0, r25
     11a:	77 26       	eor	r7, r23
     11c:	77 26       	eor	r7, r23
     11e:	77 26       	eor	r7, r23
     120:	77 26       	eor	r7, r23
     122:	77 26       	eor	r7, r23
     124:	77 26       	eor	r7, r23
     126:	77 26       	eor	r7, r23
     128:	77 26       	eor	r7, r23
     12a:	77 26       	eor	r7, r23
     12c:	77 26       	eor	r7, r23
     12e:	77 26       	eor	r7, r23
     130:	77 26       	eor	r7, r23
     132:	77 26       	eor	r7, r23
     134:	77 26       	eor	r7, r23
     136:	77 26       	eor	r7, r23
     138:	09 26       	eor	r0, r25
     13a:	77 26       	eor	r7, r23
     13c:	77 26       	eor	r7, r23
     13e:	77 26       	eor	r7, r23
     140:	77 26       	eor	r7, r23
     142:	77 26       	eor	r7, r23
     144:	77 26       	eor	r7, r23
     146:	77 26       	eor	r7, r23
     148:	77 26       	eor	r7, r23
     14a:	77 26       	eor	r7, r23
     14c:	77 26       	eor	r7, r23
     14e:	77 26       	eor	r7, r23
     150:	77 26       	eor	r7, r23
     152:	77 26       	eor	r7, r23
     154:	77 26       	eor	r7, r23
     156:	77 26       	eor	r7, r23
     158:	73 26       	eor	r7, r19
     15a:	77 26       	eor	r7, r23
     15c:	77 26       	eor	r7, r23
     15e:	77 26       	eor	r7, r23
     160:	77 26       	eor	r7, r23
     162:	77 26       	eor	r7, r23
     164:	77 26       	eor	r7, r23
     166:	77 26       	eor	r7, r23
     168:	3e 26       	eor	r3, r30
     16a:	77 26       	eor	r7, r23
     16c:	77 26       	eor	r7, r23
     16e:	77 26       	eor	r7, r23
     170:	77 26       	eor	r7, r23
     172:	77 26       	eor	r7, r23
     174:	77 26       	eor	r7, r23
     176:	77 26       	eor	r7, r23
     178:	77 26       	eor	r7, r23
     17a:	77 26       	eor	r7, r23
     17c:	77 26       	eor	r7, r23
     17e:	77 26       	eor	r7, r23
     180:	77 26       	eor	r7, r23
     182:	77 26       	eor	r7, r23
     184:	77 26       	eor	r7, r23
     186:	77 26       	eor	r7, r23
     188:	32 26       	eor	r3, r18
     18a:	77 26       	eor	r7, r23
     18c:	77 26       	eor	r7, r23
     18e:	77 26       	eor	r7, r23
     190:	77 26       	eor	r7, r23
     192:	77 26       	eor	r7, r23
     194:	77 26       	eor	r7, r23
     196:	77 26       	eor	r7, r23
     198:	56 26       	eor	r5, r22

0000019a <prvIdleTask>:
     19a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <prvCheckTasksWaitingTermination>
     19e:	80 91 e0 15 	lds	r24, 0x15E0	; 0x8015e0 <pxReadyTasksLists>
     1a2:	82 30       	cpi	r24, 0x02	; 2
     1a4:	08 f0       	brcs	.+2      	; 0x1a8 <prvIdleTask+0xe>
     1a6:	48 d6       	rcall	.+3216   	; 0xe38 <vPortYield>
     1a8:	0e 94 93 1a 	call	0x3526	; 0x3526 <vApplicationIdleHook>
     1ac:	f6 cf       	rjmp	.-20     	; 0x19a <prvIdleTask>

000001ae <prvTimerTask>:
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	1f 92       	push	r1
     1b4:	cd b7       	in	r28, 0x3d	; 61
     1b6:	de b7       	in	r29, 0x3e	; 62
     1b8:	ce 01       	movw	r24, r28
     1ba:	01 96       	adiw	r24, 0x01	; 1
     1bc:	0e 94 93 17 	call	0x2f26	; 0x2f26 <prvGetNextExpireTime>
     1c0:	49 81       	ldd	r20, Y+1	; 0x01
     1c2:	0e 94 88 19 	call	0x3310	; 0x3310 <prvProcessTimerOrBlockTask>
     1c6:	0e 94 df 19 	call	0x33be	; 0x33be <prvProcessReceivedCommands>
     1ca:	f6 cf       	rjmp	.-20     	; 0x1b8 <prvTimerTask+0xa>

000001cc <__ctors_end>:
     1cc:	11 24       	eor	r1, r1
     1ce:	1f be       	out	0x3f, r1	; 63
     1d0:	cf ef       	ldi	r28, 0xFF	; 255
     1d2:	d1 e2       	ldi	r29, 0x21	; 33
     1d4:	de bf       	out	0x3e, r29	; 62
     1d6:	cd bf       	out	0x3d, r28	; 61
     1d8:	00 e0       	ldi	r16, 0x00	; 0
     1da:	0c bf       	out	0x3c, r16	; 60

000001dc <__do_copy_data>:
     1dc:	17 e0       	ldi	r17, 0x07	; 7
     1de:	a0 e0       	ldi	r26, 0x00	; 0
     1e0:	b2 e0       	ldi	r27, 0x02	; 2
     1e2:	e6 ef       	ldi	r30, 0xF6	; 246
     1e4:	fa e5       	ldi	r31, 0x5A	; 90
     1e6:	00 e0       	ldi	r16, 0x00	; 0
     1e8:	0b bf       	out	0x3b, r16	; 59
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <__do_copy_data+0x14>
     1ec:	07 90       	elpm	r0, Z+
     1ee:	0d 92       	st	X+, r0
     1f0:	aa 3d       	cpi	r26, 0xDA	; 218
     1f2:	b1 07       	cpc	r27, r17
     1f4:	d9 f7       	brne	.-10     	; 0x1ec <__do_copy_data+0x10>

000001f6 <__do_clear_bss>:
     1f6:	27 e1       	ldi	r18, 0x17	; 23
     1f8:	aa ed       	ldi	r26, 0xDA	; 218
     1fa:	b7 e0       	ldi	r27, 0x07	; 7
     1fc:	01 c0       	rjmp	.+2      	; 0x200 <.do_clear_bss_start>

000001fe <.do_clear_bss_loop>:
     1fe:	1d 92       	st	X+, r1

00000200 <.do_clear_bss_start>:
     200:	a0 39       	cpi	r26, 0x90	; 144
     202:	b2 07       	cpc	r27, r18
     204:	e1 f7       	brne	.-8      	; 0x1fe <.do_clear_bss_loop>
     206:	0e 94 d2 1a 	call	0x35a4	; 0x35a4 <main>
     20a:	0c 94 79 2d 	jmp	0x5af2	; 0x5af2 <_exit>

0000020e <__bad_interrupt>:
     20e:	f8 ce       	rjmp	.-528    	; 0x0 <__vectors>

00000210 <ApplicationTask>:
#include "Application.h"

void ApplicationTask(void *pvParameters)
{
     210:	cf 93       	push	r28
     212:	df 93       	push	r29
     214:	cd b7       	in	r28, 0x3d	; 61
     216:	de b7       	in	r29, 0x3e	; 62
     218:	66 97       	sbiw	r28, 0x16	; 22
     21a:	0f b6       	in	r0, 0x3f	; 63
     21c:	f8 94       	cli
     21e:	de bf       	out	0x3e, r29	; 62
     220:	0f be       	out	0x3f, r0	; 63
     222:	cd bf       	out	0x3d, r28	; 61
	for (;;)
	{
		//if(ALL_READY_BITS == ALL_READY_BITS){
			//Use in the future when we have both sensors = xEventGroupSetBits(measureEventGroup, ALL_MEASURE_BITS);
			xEventGroupSetBits(measureEventGroup, HUMIDITY_TEMPERATURE_MEASURE_BIT);
     224:	41 e0       	ldi	r20, 0x01	; 1
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	70 e0       	ldi	r23, 0x00	; 0
     22c:	80 91 84 17 	lds	r24, 0x1784	; 0x801784 <measureEventGroup>
     230:	90 91 85 17 	lds	r25, 0x1785	; 0x801785 <measureEventGroup+0x1>
     234:	4c d3       	rcall	.+1688   	; 0x8ce <xEventGroupSetBits>
		//}
		
		//Use in the future when we have both sensors = EventBits_t eventBits = xEventGroupWaitBits(dataReadyEventGroup,ALL_READY_BITS,pdTRUE,pdTRUE,portMAX_DELAY);
		EventBits_t eventBits = xEventGroupWaitBits(dataReadyEventGroup,HUMIDITY_TEMPERATURE_READY_BIT,pdTRUE,pdTRUE,portMAX_DELAY);
     236:	cc 24       	eor	r12, r12
     238:	ca 94       	dec	r12
     23a:	dc 2c       	mov	r13, r12
     23c:	76 01       	movw	r14, r12
     23e:	01 e0       	ldi	r16, 0x01	; 1
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	42 e0       	ldi	r20, 0x02	; 2
     244:	50 e0       	ldi	r21, 0x00	; 0
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	70 e0       	ldi	r23, 0x00	; 0
     24a:	80 91 82 17 	lds	r24, 0x1782	; 0x801782 <dataReadyEventGroup>
     24e:	90 91 83 17 	lds	r25, 0x1783	; 0x801783 <dataReadyEventGroup+0x1>
     252:	9d d2       	rcall	.+1338   	; 0x78e <xEventGroupWaitBits>
		if((eventBits &(HUMIDITY_TEMPERATURE_READY_BIT))==(HUMIDITY_TEMPERATURE_READY_BIT))
     254:	61 ff       	sbrs	r22, 1
     256:	37 c0       	rjmp	.+110    	; 0x2c6 <ApplicationTask+0xb6>
		{
			printf("ALL DATA COLLECTED\n");
     258:	82 e4       	ldi	r24, 0x42	; 66
     25a:	92 e0       	ldi	r25, 0x02	; 2
     25c:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <puts>
			printf("Temperature is: %x, and humidity is: %x\n",getTemperature(),getHumidity());
     260:	e7 d1       	rcall	.+974    	; 0x630 <getHumidity>
     262:	18 2f       	mov	r17, r24
     264:	09 2f       	mov	r16, r25
     266:	e9 d1       	rcall	.+978    	; 0x63a <getTemperature>
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
     26c:	9f 93       	push	r25
     26e:	8f 93       	push	r24
     270:	85 e5       	ldi	r24, 0x55	; 85
     272:	92 e0       	ldi	r25, 0x02	; 2
     274:	9f 93       	push	r25
     276:	8f 93       	push	r24
			
			setTemperature(getTemperature());
     278:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>
     27c:	de d1       	rcall	.+956    	; 0x63a <getTemperature>
			setHumidity(getHumidity());
     27e:	43 d0       	rcall	.+134    	; 0x306 <setTemperature>
     280:	d7 d1       	rcall	.+942    	; 0x630 <getHumidity>
     282:	3c d0       	rcall	.+120    	; 0x2fc <setHumidity>
			
			//fake data
			setCo2Ppm(10);
     284:	8a e0       	ldi	r24, 0x0A	; 10
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	43 d0       	rcall	.+134    	; 0x310 <setCo2Ppm>
     28a:	62 e0       	ldi	r22, 0x02	; 2
			
			lora_driver_payload_t _uplink_payload = sensorDataPackageHandler_getLoRaPayload(2);
     28c:	ce 01       	movw	r24, r28
     28e:	01 96       	adiw	r24, 0x01	; 1
     290:	44 d0       	rcall	.+136    	; 0x31a <sensorDataPackageHandler_getLoRaPayload>
     292:	0f ef       	ldi	r16, 0xFF	; 255
     294:	1f ef       	ldi	r17, 0xFF	; 255
			xMessageBufferSend(upLinkMessageBuffer,&_uplink_payload,sizeof(_uplink_payload),portMAX_DELAY);
     296:	98 01       	movw	r18, r16
     298:	46 e1       	ldi	r20, 0x16	; 22
     29a:	50 e0       	ldi	r21, 0x00	; 0
     29c:	be 01       	movw	r22, r28
     29e:	6f 5f       	subi	r22, 0xFF	; 255
     2a0:	7f 4f       	sbci	r23, 0xFF	; 255
     2a2:	80 91 80 17 	lds	r24, 0x1780	; 0x801780 <upLinkMessageBuffer>
     2a6:	90 91 81 17 	lds	r25, 0x1781	; 0x801781 <upLinkMessageBuffer+0x1>
     2aa:	0e 94 3e 0c 	call	0x187c	; 0x187c <xStreamBufferSend>
     2ae:	60 e1       	ldi	r22, 0x10	; 16
     2b0:	7d e1       	ldi	r23, 0x1D	; 29
																					
			vTaskDelay(pdMS_TO_TICKS(120000));
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
     2ba:	0f 90       	pop	r0
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	63 e0       	ldi	r22, 0x03	; 3
     2c8:	70 e0       	ldi	r23, 0x00	; 0
			//xSemaphoreGive(tempHumSemaphore);
		}
		vTaskDelay(pdMS_TO_TICKS(50));
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
     2d2:	a8 cf       	rjmp	.-176    	; 0x224 <ApplicationTask+0x14>

000002d4 <createApplicationTask>:
     2d4:	ef 92       	push	r14
	}
     2d6:	ff 92       	push	r15
}

void createApplicationTask(UBaseType_t Taskpriority)
{
     2d8:	0f 93       	push	r16
	xTaskCreate(
     2da:	e1 2c       	mov	r14, r1
     2dc:	f1 2c       	mov	r15, r1
     2de:	08 2f       	mov	r16, r24
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	40 ec       	ldi	r20, 0xC0	; 192
     2e6:	50 e0       	ldi	r21, 0x00	; 0
     2e8:	6e e7       	ldi	r22, 0x7E	; 126
     2ea:	72 e0       	ldi	r23, 0x02	; 2
     2ec:	88 e0       	ldi	r24, 0x08	; 8
     2ee:	91 e0       	ldi	r25, 0x01	; 1
     2f0:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <xTaskCreate>
	,  "AppTask"
	,  configMINIMAL_STACK_SIZE
	,  NULL
	,  tskIDLE_PRIORITY + Taskpriority
	,  NULL );
     2f4:	0f 91       	pop	r16
     2f6:	ff 90       	pop	r15
     2f8:	ef 90       	pop	r14
     2fa:	08 95       	ret

000002fc <setHumidity>:
uint16_t temperature;
uint16_t humidity;
uint16_t co2Ppm;

void setHumidity(uint16_t value){
	humidity = value;
     2fc:	90 93 db 07 	sts	0x07DB, r25	; 0x8007db <__data_end+0x1>
     300:	80 93 da 07 	sts	0x07DA, r24	; 0x8007da <__data_end>
     304:	08 95       	ret

00000306 <setTemperature>:
}
void setTemperature(uint16_t value){
	temperature = value;
     306:	90 93 dd 07 	sts	0x07DD, r25	; 0x8007dd <temperature+0x1>
     30a:	80 93 dc 07 	sts	0x07DC, r24	; 0x8007dc <temperature>
     30e:	08 95       	ret

00000310 <setCo2Ppm>:
}
void setCo2Ppm(uint16_t value){
	co2Ppm = value;
     310:	90 93 69 17 	sts	0x1769, r25	; 0x801769 <co2Ppm+0x1>
     314:	80 93 68 17 	sts	0x1768, r24	; 0x801768 <co2Ppm>
     318:	08 95       	ret

0000031a <sensorDataPackageHandler_getLoRaPayload>:
}


lora_driver_payload_t sensorDataPackageHandler_getLoRaPayload(uint8_t port_No)
{
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	ec 01       	movw	r28, r24
     322:	16 2f       	mov	r17, r22
	lora_driver_payload_t* payload_t;
	
	payload_t = pvPortMalloc(sizeof(lora_driver_payload_t));
     324:	86 e1       	ldi	r24, 0x16	; 22
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	d3 d3       	rcall	.+1958   	; 0xad0 <pvPortMalloc>
     32a:	fc 01       	movw	r30, r24
	
	if(payload_t != NULL){
     32c:	89 2b       	or	r24, r25
     32e:	a9 f0       	breq	.+42     	; 0x35a <sensorDataPackageHandler_getLoRaPayload+0x40>
		payload_t->portNo=port_No;
     330:	10 83       	st	Z, r17
		payload_t->len=6;
     332:	86 e0       	ldi	r24, 0x06	; 6
     334:	81 83       	std	Z+1, r24	; 0x01
		payload_t->bytes[0]=co2Ppm >> 8;
     336:	80 91 68 17 	lds	r24, 0x1768	; 0x801768 <co2Ppm>
     33a:	90 91 69 17 	lds	r25, 0x1769	; 0x801769 <co2Ppm+0x1>
     33e:	92 83       	std	Z+2, r25	; 0x02
		payload_t->bytes[1]=co2Ppm & 0xFF;
     340:	83 83       	std	Z+3, r24	; 0x03
		payload_t->bytes[2]=humidity >> 8;
     342:	80 91 da 07 	lds	r24, 0x07DA	; 0x8007da <__data_end>
     346:	90 91 db 07 	lds	r25, 0x07DB	; 0x8007db <__data_end+0x1>
     34a:	94 83       	std	Z+4, r25	; 0x04
		payload_t->bytes[3]=humidity & 0xFF;
     34c:	85 83       	std	Z+5, r24	; 0x05
		payload_t->bytes[4]=temperature >> 8;
     34e:	80 91 dc 07 	lds	r24, 0x07DC	; 0x8007dc <temperature>
     352:	90 91 dd 07 	lds	r25, 0x07DD	; 0x8007dd <temperature+0x1>
     356:	96 83       	std	Z+6, r25	; 0x06
		payload_t->bytes[5]=temperature & 0xFF;
     358:	87 83       	std	Z+7, r24	; 0x07
	}
	
	return *payload_t;
     35a:	86 e1       	ldi	r24, 0x16	; 22
     35c:	de 01       	movw	r26, r28
     35e:	01 90       	ld	r0, Z+
     360:	0d 92       	st	X+, r0
     362:	8a 95       	dec	r24
     364:	e1 f7       	brne	.-8      	; 0x35e <sensorDataPackageHandler_getLoRaPayload+0x44>
}
     366:	ce 01       	movw	r24, r28
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
     36c:	1f 91       	pop	r17
     36e:	08 95       	ret

00000370 <lora_handler_uplink_payload>:
#include "UpLinkHandler.h"

lora_driver_payload_t uplink_payload;

void lora_handler_uplink_payload(UBaseType_t lora_handler_task_priority)
{
     370:	ef 92       	push	r14
     372:	ff 92       	push	r15
     374:	0f 93       	push	r16
	xTaskCreate(
     376:	e1 2c       	mov	r14, r1
     378:	f1 2c       	mov	r15, r1
     37a:	08 2f       	mov	r16, r24
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	48 e8       	ldi	r20, 0x88	; 136
     382:	51 e0       	ldi	r21, 0x01	; 1
     384:	66 e8       	ldi	r22, 0x86	; 134
     386:	72 e0       	ldi	r23, 0x02	; 2
     388:	81 ea       	ldi	r24, 0xA1	; 161
     38a:	92 e0       	ldi	r25, 0x02	; 2
     38c:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <xTaskCreate>
	,  "Uplink_payload_handler_task"  // A name just for humans
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  NULL
	,  lora_handler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}
     390:	0f 91       	pop	r16
     392:	ff 90       	pop	r15
     394:	ef 90       	pop	r14
     396:	08 95       	ret

00000398 <_lora_setup>:

 void _lora_setup(void)
{
     398:	0f 93       	push	r16
     39a:	1f 93       	push	r17
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	cd b7       	in	r28, 0x3d	; 61
     3a2:	de b7       	in	r29, 0x3e	; 62
     3a4:	64 97       	sbiw	r28, 0x14	; 20
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	de bf       	out	0x3e, r29	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	cd bf       	out	0x3d, r28	; 61
	char _out_buf[20];
	lora_driver_returnCode_t rc;
	status_leds_slowBlink(led_ST2); // OPTIONAL: Led the green led blink slowly while we are setting up LoRa
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	0e 94 7d 24 	call	0x48fa	; 0x48fa <status_leds_slowBlink>

	// Factory reset the transceiver
	printf("FactoryReset >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_rn2483FactoryReset()));
     3b6:	0e 94 72 1c 	call	0x38e4	; 0x38e4 <lora_driver_rn2483FactoryReset>
     3ba:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     3be:	9f 93       	push	r25
     3c0:	8f 93       	push	r24
     3c2:	82 ea       	ldi	r24, 0xA2	; 162
     3c4:	92 e0       	ldi	r25, 0x02	; 2
     3c6:	9f 93       	push	r25
     3c8:	8f 93       	push	r24
     3ca:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>
	
	// Configure to EU868 LoRaWAN standards
	printf("Configure to EU868 >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_configureToEu868()));
     3ce:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <lora_driver_configureToEu868>
     3d2:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     3d6:	9f 93       	push	r25
     3d8:	8f 93       	push	r24
     3da:	85 eb       	ldi	r24, 0xB5	; 181
     3dc:	92 e0       	ldi	r25, 0x02	; 2
     3de:	9f 93       	push	r25
     3e0:	8f 93       	push	r24
     3e2:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

	// Get the transceivers HW EUI
	rc = lora_driver_getRn2483Hweui(_out_buf);
     3e6:	8e 01       	movw	r16, r28
     3e8:	0f 5f       	subi	r16, 0xFF	; 255
     3ea:	1f 4f       	sbci	r17, 0xFF	; 255
     3ec:	c8 01       	movw	r24, r16
     3ee:	0e 94 84 1c 	call	0x3908	; 0x3908 <lora_driver_getRn2483Hweui>
	printf("Get HWEUI >%s<: %s\n",lora_driver_mapReturnCodeToText(rc), _out_buf);
     3f2:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     3f6:	1f 93       	push	r17
     3f8:	0f 93       	push	r16
     3fa:	9f 93       	push	r25
     3fc:	8f 93       	push	r24
     3fe:	8e ec       	ldi	r24, 0xCE	; 206
     400:	92 e0       	ldi	r25, 0x02	; 2
     402:	9f 93       	push	r25
     404:	8f 93       	push	r24
     406:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

	// Set the HWEUI as DevEUI in the LoRaWAN software stack in the transceiver
	printf("Set DevEUI: %s >%s<\n", _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setDeviceIdentifier(_out_buf)));
     40a:	c8 01       	movw	r24, r16
     40c:	0e 94 a0 1c 	call	0x3940	; 0x3940 <lora_driver_setDeviceIdentifier>
     410:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     414:	9f 93       	push	r25
     416:	8f 93       	push	r24
     418:	1f 93       	push	r17
     41a:	0f 93       	push	r16
     41c:	82 ee       	ldi	r24, 0xE2	; 226
     41e:	92 e0       	ldi	r25, 0x02	; 2
     420:	9f 93       	push	r25
     422:	8f 93       	push	r24
     424:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

	// Set Over The Air Activation parameters to be ready to join the LoRaWAN
	printf("Set OTAA Identity appEUI:%s appKEY:%s devEUI:%s >%s<\n", LORA_appEUI, LORA_appKEY, _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setOtaaIdentity(LORA_appEUI,LORA_appKEY,_out_buf)));
     428:	a8 01       	movw	r20, r16
     42a:	67 ef       	ldi	r22, 0xF7	; 247
     42c:	72 e0       	ldi	r23, 0x02	; 2
     42e:	88 e1       	ldi	r24, 0x18	; 24
     430:	93 e0       	ldi	r25, 0x03	; 3
     432:	0e 94 ce 1e 	call	0x3d9c	; 0x3d9c <lora_driver_setOtaaIdentity>
     436:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     43a:	9f 93       	push	r25
     43c:	8f 93       	push	r24
     43e:	1f 93       	push	r17
     440:	0f 93       	push	r16
     442:	87 ef       	ldi	r24, 0xF7	; 247
     444:	92 e0       	ldi	r25, 0x02	; 2
     446:	9f 93       	push	r25
     448:	8f 93       	push	r24
     44a:	88 e1       	ldi	r24, 0x18	; 24
     44c:	93 e0       	ldi	r25, 0x03	; 3
     44e:	9f 93       	push	r25
     450:	8f 93       	push	r24
     452:	89 e2       	ldi	r24, 0x29	; 41
     454:	93 e0       	ldi	r25, 0x03	; 3
     456:	9f 93       	push	r25
     458:	8f 93       	push	r24
     45a:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

	// Save all the MAC settings in the transceiver
	printf("Save mac >%s<\n",lora_driver_mapReturnCodeToText(lora_driver_saveMac()));
     45e:	0e 94 d3 1c 	call	0x39a6	; 0x39a6 <lora_driver_saveMac>
     462:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     466:	9f 93       	push	r25
     468:	8f 93       	push	r24
     46a:	8f e5       	ldi	r24, 0x5F	; 95
     46c:	93 e0       	ldi	r25, 0x03	; 3
     46e:	9f 93       	push	r25
     470:	8f 93       	push	r24
     472:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

	// Enable Adaptive Data Rate
	printf("Set Adaptive Data Rate: ON >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_setAdaptiveDataRate(LORA_ON)));
     476:	0f b6       	in	r0, 0x3f	; 63
     478:	f8 94       	cli
     47a:	de bf       	out	0x3e, r29	; 62
     47c:	0f be       	out	0x3f, r0	; 63
     47e:	cd bf       	out	0x3d, r28	; 61
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	0e 94 cd 1d 	call	0x3b9a	; 0x3b9a <lora_driver_setAdaptiveDataRate>
     486:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     48a:	9f 93       	push	r25
     48c:	8f 93       	push	r24
     48e:	8e e6       	ldi	r24, 0x6E	; 110
     490:	93 e0       	ldi	r25, 0x03	; 3
     492:	9f 93       	push	r25
     494:	8f 93       	push	r24
     496:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

	// Set receiver window1 delay to 500 ms - this is needed if down-link messages will be used
	printf("Set Receiver Delay: %d ms >%s<\n", 500, lora_driver_mapReturnCodeToText(lora_driver_setReceiveDelay(500)));
     49a:	84 ef       	ldi	r24, 0xF4	; 244
     49c:	91 e0       	ldi	r25, 0x01	; 1
     49e:	0e 94 d8 1d 	call	0x3bb0	; 0x3bb0 <lora_driver_setReceiveDelay>
     4a2:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     4a6:	9f 93       	push	r25
     4a8:	8f 93       	push	r24
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	8f 93       	push	r24
     4ae:	84 ef       	ldi	r24, 0xF4	; 244
     4b0:	8f 93       	push	r24
     4b2:	8f e8       	ldi	r24, 0x8F	; 143
     4b4:	93 e0       	ldi	r25, 0x03	; 3
     4b6:	9f 93       	push	r25
     4b8:	8f 93       	push	r24
     4ba:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61

	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 10;
     4c8:	1a e0       	ldi	r17, 0x0A	; 10
	
	do {
		rc = lora_driver_join(LORA_OTAA);
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <lora_driver_join>
     4d0:	08 2f       	mov	r16, r24
		printf("Join Network TriesLeft:%d >%s<\n", maxJoinTriesLeft, lora_driver_mapReturnCodeToText(rc));
     4d2:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     4d6:	9f 93       	push	r25
     4d8:	8f 93       	push	r24
     4da:	1f 92       	push	r1
     4dc:	1f 93       	push	r17
     4de:	8f ea       	ldi	r24, 0xAF	; 175
     4e0:	93 e0       	ldi	r25, 0x03	; 3
     4e2:	9f 93       	push	r25
     4e4:	8f 93       	push	r24
     4e6:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>

		if ( rc != LORA_ACCEPTED)
     4ea:	0f 90       	pop	r0
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	0f 90       	pop	r0
     4f6:	08 30       	cpi	r16, 0x08	; 8
     4f8:	59 f0       	breq	.+22     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
		{
			// Make the red led pulse to tell something went wrong
			status_leds_longPuls(led_ST1); // OPTIONAL
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	0e 94 e1 24 	call	0x49c2	; 0x49c2 <status_leds_longPuls>
			// Wait 5 sec and lets try again
			vTaskDelay(pdMS_TO_TICKS(5000UL));
     500:	66 e3       	ldi	r22, 0x36	; 54
     502:	71 e0       	ldi	r23, 0x01	; 1
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
		}
		else
		{
			break;
		}
	} while (--maxJoinTriesLeft);
     50c:	11 50       	subi	r17, 0x01	; 1
     50e:	e9 f6       	brne	.-70     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>

	if (rc == LORA_ACCEPTED)
     510:	08 30       	cpi	r16, 0x08	; 8
     512:	21 f4       	brne	.+8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
	{
		// Connected to LoRaWAN :-)
		// Make the green led steady
		status_leds_ledOn(led_ST2); // OPTIONAL
     514:	81 e0       	ldi	r24, 0x01	; 1
     516:	0e 94 c3 24 	call	0x4986	; 0x4986 <status_leds_ledOn>
		while (1)
		{
			taskYIELD();
		}
	}
}
     51a:	08 c0       	rjmp	.+16     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
	}
	else
	{
		// Something went wrong
		// Turn off the green led
		status_leds_ledOff(led_ST2); // OPTIONAL
     51c:	81 e0       	ldi	r24, 0x01	; 1
     51e:	0e 94 d2 24 	call	0x49a4	; 0x49a4 <status_leds_ledOff>
		// Make the red led blink fast to tell something went wrong
		status_leds_fastBlink(led_ST1); // OPTIONAL
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	0e 94 a0 24 	call	0x4940	; 0x4940 <status_leds_fastBlink>

		// Lets stay here
		while (1)
		{
			taskYIELD();
     528:	87 d4       	rcall	.+2318   	; 0xe38 <vPortYield>
     52a:	fe cf       	rjmp	.-4      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
		}
	}
}
     52c:	64 96       	adiw	r28, 0x14	; 20
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	08 95       	ret

00000542 <lora_handler_task>:

/*-----------------------------------------------------------*/
void lora_handler_task( void *pvParameters )
{
     542:	cf 93       	push	r28
     544:	df 93       	push	r29
     546:	00 d0       	rcall	.+0      	; 0x548 <lora_handler_task+0x6>
     548:	1f 92       	push	r1
     54a:	cd b7       	in	r28, 0x3d	; 61
     54c:	de b7       	in	r29, 0x3e	; 62
	// Hardware reset of LoRaWAN transceiver
	lora_driver_resetRn2483(1);
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <lora_driver_resetRn2483>
	vTaskDelay(2);
     554:	62 e0       	ldi	r22, 0x02	; 2
     556:	70 e0       	ldi	r23, 0x00	; 0
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
	lora_driver_resetRn2483(0);
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <lora_driver_resetRn2483>
	// Give it a chance to wakeup
	vTaskDelay(150);
     566:	66 e9       	ldi	r22, 0x96	; 150
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	80 e0       	ldi	r24, 0x00	; 0
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>

	lora_driver_flushBuffers(); // get rid of first version string from module after reset!
     572:	0e 94 5d 1c 	call	0x38ba	; 0x38ba <lora_driver_flushBuffers>

	_lora_setup();
     576:	10 df       	rcall	.-480    	; 0x398 <_lora_setup>

	TickType_t xLastWakeTime;
	const TickType_t xFrequency = pdMS_TO_TICKS(60000UL); // Upload message every 5 minutes (300000 ms)
	xLastWakeTime = xTaskGetTickCount();
     578:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <xTaskGetTickCount>
     57c:	69 83       	std	Y+1, r22	; 0x01
     57e:	7a 83       	std	Y+2, r23	; 0x02
     580:	8b 83       	std	Y+3, r24	; 0x03
     582:	9c 83       	std	Y+4, r25	; 0x04
	
	for(;;)
	{
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
     584:	48 e8       	ldi	r20, 0x88	; 136
     586:	5e e0       	ldi	r21, 0x0E	; 14
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	ce 01       	movw	r24, r28
     58e:	01 96       	adiw	r24, 0x01	; 1
     590:	0e 94 ee 11 	call	0x23dc	; 0x23dc <xTaskDelayUntil>

		
		xMessageBufferReceive(upLinkMessageBuffer,&uplink_payload,sizeof(uplink_payload),portMAX_DELAY);
     594:	0f ef       	ldi	r16, 0xFF	; 255
     596:	1f ef       	ldi	r17, 0xFF	; 255
     598:	98 01       	movw	r18, r16
     59a:	46 e1       	ldi	r20, 0x16	; 22
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	6a e6       	ldi	r22, 0x6A	; 106
     5a0:	77 e1       	ldi	r23, 0x17	; 23
     5a2:	80 91 80 17 	lds	r24, 0x1780	; 0x801780 <upLinkMessageBuffer>
     5a6:	90 91 81 17 	lds	r25, 0x1781	; 0x801781 <upLinkMessageBuffer+0x1>
     5aa:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <xStreamBufferReceive>
		status_leds_shortPuls(led_ST4);  // OPTIONAL
     5ae:	83 e0       	ldi	r24, 0x03	; 3
     5b0:	0e 94 f3 24 	call	0x49e6	; 0x49e6 <status_leds_shortPuls>
		printf("Upload Message >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_sendUploadMessage(false, &uplink_payload)));
     5b4:	6a e6       	ldi	r22, 0x6A	; 106
     5b6:	77 e1       	ldi	r23, 0x17	; 23
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	0e 94 02 1d 	call	0x3a04	; 0x3a04 <lora_driver_sendUploadMessage>
     5be:	0e 94 ef 1e 	call	0x3dde	; 0x3dde <lora_driver_mapReturnCodeToText>
     5c2:	9f 93       	push	r25
     5c4:	8f 93       	push	r24
     5c6:	8f ec       	ldi	r24, 0xCF	; 207
     5c8:	93 e0       	ldi	r25, 0x03	; 3
     5ca:	9f 93       	push	r25
     5cc:	8f 93       	push	r24
     5ce:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
     5da:	d4 cf       	rjmp	.-88     	; 0x584 <lora_handler_task+0x42>

000005dc <initializeEventGroup>:
MessageBufferHandle_t upLinkMessageBuffer;
//MessageBufferHandle_t downLinkMessageBuffer;

void initializeEventGroup()
{
	dataReadyEventGroup = xEventGroupCreate();
     5dc:	c5 d0       	rcall	.+394    	; 0x768 <xEventGroupCreate>
     5de:	90 93 83 17 	sts	0x1783, r25	; 0x801783 <dataReadyEventGroup+0x1>
     5e2:	80 93 82 17 	sts	0x1782, r24	; 0x801782 <dataReadyEventGroup>
	measureEventGroup = xEventGroupCreate();
     5e6:	c0 d0       	rcall	.+384    	; 0x768 <xEventGroupCreate>
     5e8:	90 93 85 17 	sts	0x1785, r25	; 0x801785 <measureEventGroup+0x1>
     5ec:	80 93 84 17 	sts	0x1784, r24	; 0x801784 <measureEventGroup>
     5f0:	08 95       	ret

000005f2 <createUpLinkMessageBuffer>:
     5f2:	41 e0       	ldi	r20, 0x01	; 1


void createUpLinkMessageBuffer()
{
	
	upLinkMessageBuffer = xMessageBufferCreate(sizeof(lora_driver_payload_t)*2);
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	70 e0       	ldi	r23, 0x00	; 0
     5f8:	8c e2       	ldi	r24, 0x2C	; 44
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <xStreamBufferGenericCreate>
     600:	90 93 81 17 	sts	0x1781, r25	; 0x801781 <upLinkMessageBuffer+0x1>
     604:	80 93 80 17 	sts	0x1780, r24	; 0x801780 <upLinkMessageBuffer>
	if(upLinkMessageBuffer == NULL )
     608:	89 2b       	or	r24, r25
     60a:	49 f4       	brne	.+18     	; 0x61e <createUpLinkMessageBuffer+0x2c>
	{
		printf("Not enough heap memory for uplink message buffer");
     60c:	84 ee       	ldi	r24, 0xE4	; 228
     60e:	93 e0       	ldi	r25, 0x03	; 3
     610:	9f 93       	push	r25
     612:	8f 93       	push	r24
     614:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	08 95       	ret
	}
	else
	{
		printf("Uplink message buffer created succesffully");
     61e:	85 e1       	ldi	r24, 0x15	; 21
     620:	94 e0       	ldi	r25, 0x04	; 4
     622:	9f 93       	push	r25
     624:	8f 93       	push	r24
     626:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <printf>
     62a:	0f 90       	pop	r0
     62c:	0f 90       	pop	r0
     62e:	08 95       	ret

00000630 <getHumidity>:
//Do we need const here?

uint16_t getHumidity()
{
	return humidity;
}
     630:	80 91 da 07 	lds	r24, 0x07DA	; 0x8007da <__data_end>
     634:	90 91 db 07 	lds	r25, 0x07DB	; 0x8007db <__data_end+0x1>
     638:	08 95       	ret

0000063a <getTemperature>:

uint16_t getTemperature()
{
	return temperature;
}
     63a:	80 91 dc 07 	lds	r24, 0x07DC	; 0x8007dc <temperature>
     63e:	90 91 dd 07 	lds	r25, 0x07DD	; 0x8007dd <temperature+0x1>
     642:	08 95       	ret

00000644 <initializeTempAndHumDriver>:
	
}

void initializeTempAndHumDriver()
{
	hih8120_driverReturnCode_t returnCode = hih8120_initialise();
     644:	0e 94 07 1b 	call	0x360e	; 0x360e <hih8120_initialise>

	if ( HIH8120_OK == returnCode )
     648:	81 11       	cpse	r24, r1
     64a:	05 c0       	rjmp	.+10     	; 0x656 <initializeTempAndHumDriver+0x12>
	{
		printf("Temp and Hum Driver Initialized ok\n");
     64c:	80 e4       	ldi	r24, 0x40	; 64
     64e:	94 e0       	ldi	r25, 0x04	; 4
     650:	0c 94 6e 2a 	jmp	0x54dc	; 0x54dc <puts>
     654:	08 95       	ret
	}
	
	else {
		printf("TEMP AND HUM OUT OF HEAP \n");
     656:	83 e6       	ldi	r24, 0x63	; 99
     658:	94 e0       	ldi	r25, 0x04	; 4
     65a:	0c 94 6e 2a 	jmp	0x54dc	; 0x54dc <puts>
     65e:	08 95       	ret

00000660 <measureTempAndHum>:
	}
}

void measureTempAndHum()
{
	if ( HIH8120_OK != hih8120_wakeup() )
     660:	0e 94 1f 1b 	call	0x363e	; 0x363e <hih8120_wakeup>
     664:	88 23       	and	r24, r24
     666:	21 f0       	breq	.+8      	; 0x670 <measureTempAndHum+0x10>
	{
		printf("TEMP AND HUM WAKE UP WENT WRONG\n");
     668:	8d e7       	ldi	r24, 0x7D	; 125
     66a:	94 e0       	ldi	r25, 0x04	; 4
     66c:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <puts>
	}
	
	vTaskDelay(pdMS_TO_TICKS(50));
     670:	63 e0       	ldi	r22, 0x03	; 3
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
	
	if ( HIH8120_OK !=  hih8120_measure() )
     67c:	0e 94 34 1b 	call	0x3668	; 0x3668 <hih8120_measure>
     680:	88 23       	and	r24, r24
     682:	21 f0       	breq	.+8      	; 0x68c <measureTempAndHum+0x2c>
	{
		printf("TEMP AND HUM MEASURING UP WENT WRONG\n");
     684:	8d e9       	ldi	r24, 0x9D	; 157
     686:	94 e0       	ldi	r25, 0x04	; 4
     688:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <puts>
	}
	
	vTaskDelay(pdMS_TO_TICKS(20));
     68c:	61 e0       	ldi	r22, 0x01	; 1
     68e:	70 e0       	ldi	r23, 0x00	; 0
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	0c 94 53 12 	jmp	0x24a6	; 0x24a6 <vTaskDelay>
     698:	08 95       	ret

0000069a <TempAndHumTask>:
{
	
	while(1)
	{
		//Use it for later when we have both sensors = EventBits_t eventBits = xEventGroupWaitBits(measureEventGroup,ALL_MEASURE_BITS,pdTRUE,pdTRUE,portMAX_DELAY);
		EventBits_t eventBits = xEventGroupWaitBits(measureEventGroup,HUMIDITY_TEMPERATURE_MEASURE_BIT,pdTRUE,pdTRUE,portMAX_DELAY);
     69a:	cc 24       	eor	r12, r12
     69c:	ca 94       	dec	r12
     69e:	dc 2c       	mov	r13, r12
     6a0:	76 01       	movw	r14, r12
     6a2:	01 e0       	ldi	r16, 0x01	; 1
     6a4:	21 e0       	ldi	r18, 0x01	; 1
     6a6:	41 e0       	ldi	r20, 0x01	; 1
     6a8:	50 e0       	ldi	r21, 0x00	; 0
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	80 91 84 17 	lds	r24, 0x1784	; 0x801784 <measureEventGroup>
     6b2:	90 91 85 17 	lds	r25, 0x1785	; 0x801785 <measureEventGroup+0x1>
     6b6:	6b d0       	rcall	.+214    	; 0x78e <xEventGroupWaitBits>
		if(eventBits & (HUMIDITY_TEMPERATURE_MEASURE_BIT))
     6b8:	60 ff       	sbrs	r22, 0
     6ba:	1a c0       	rjmp	.+52     	; 0x6f0 <TempAndHumTask+0x56>
		{
			puts("Measuring metrics...");
     6bc:	82 ec       	ldi	r24, 0xC2	; 194
     6be:	94 e0       	ldi	r25, 0x04	; 4
     6c0:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <puts>
			measureTempAndHum();
     6c4:	cd df       	rcall	.-102    	; 0x660 <measureTempAndHum>
			temperature = hih8120_getTemperature_x10();
     6c6:	0e 94 80 1b 	call	0x3700	; 0x3700 <hih8120_getTemperature_x10>
     6ca:	90 93 dd 07 	sts	0x07DD, r25	; 0x8007dd <temperature+0x1>
     6ce:	80 93 dc 07 	sts	0x07DC, r24	; 0x8007dc <temperature>
			humidity = hih8120_getHumidityPercent_x10();
     6d2:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <hih8120_getHumidityPercent_x10>
     6d6:	90 93 db 07 	sts	0x07DB, r25	; 0x8007db <__data_end+0x1>
     6da:	80 93 da 07 	sts	0x07DA, r24	; 0x8007da <__data_end>
			//printf("Temperature: %d\n",Temp);
			//printf("Humidity: %d\n",Humidity);
			//Use it for later when we have both sensors = xEventGroupSetBits(dataReadyEventGroup,ALL_READY_BIT);
			xEventGroupSetBits(dataReadyEventGroup,HUMIDITY_TEMPERATURE_READY_BIT);
     6de:	42 e0       	ldi	r20, 0x02	; 2
     6e0:	50 e0       	ldi	r21, 0x00	; 0
     6e2:	60 e0       	ldi	r22, 0x00	; 0
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	80 91 82 17 	lds	r24, 0x1782	; 0x801782 <dataReadyEventGroup>
     6ea:	90 91 83 17 	lds	r25, 0x1783	; 0x801783 <dataReadyEventGroup+0x1>
     6ee:	ef d0       	rcall	.+478    	; 0x8ce <xEventGroupSetBits>
		}
		vTaskDelay(pdMS_TO_TICKS(10));
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	cb 01       	movw	r24, r22
     6f6:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
	}
     6fa:	cf cf       	rjmp	.-98     	; 0x69a <TempAndHumTask>

000006fc <createTempAndHumTask>:
}

void createTempAndHumTask(UBaseType_t Taskpriority)
{
     6fc:	ef 92       	push	r14
     6fe:	ff 92       	push	r15
     700:	0f 93       	push	r16
     702:	08 2f       	mov	r16, r24
	initializeTempAndHumDriver();
     704:	9f df       	rcall	.-194    	; 0x644 <initializeTempAndHumDriver>
	xTaskCreate(
     706:	e1 2c       	mov	r14, r1
     708:	f1 2c       	mov	r15, r1
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	40 ec       	ldi	r20, 0xC0	; 192
     710:	50 e0       	ldi	r21, 0x00	; 0
     712:	67 ed       	ldi	r22, 0xD7	; 215
     714:	74 e0       	ldi	r23, 0x04	; 4
     716:	8d e4       	ldi	r24, 0x4D	; 77
     718:	93 e0       	ldi	r25, 0x03	; 3
     71a:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <xTaskCreate>
	,  "TempAndHumTask"
	,  configMINIMAL_STACK_SIZE
	,  NULL
	,  tskIDLE_PRIORITY + Taskpriority
	,  NULL );
}
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	08 95       	ret

00000726 <prvTestWaitCondition>:
     726:	0f 93       	push	r16
     728:	01 11       	cpse	r16, r1
     72a:	0c c0       	rjmp	.+24     	; 0x744 <prvTestWaitCondition+0x1e>
     72c:	dc 01       	movw	r26, r24
     72e:	cb 01       	movw	r24, r22
     730:	82 23       	and	r24, r18
     732:	93 23       	and	r25, r19
     734:	a4 23       	and	r26, r20
     736:	b5 23       	and	r27, r21
     738:	89 2b       	or	r24, r25
     73a:	8a 2b       	or	r24, r26
     73c:	8b 2b       	or	r24, r27
     73e:	79 f4       	brne	.+30     	; 0x75e <prvTestWaitCondition+0x38>
     740:	80 e0       	ldi	r24, 0x00	; 0
     742:	10 c0       	rjmp	.+32     	; 0x764 <prvTestWaitCondition+0x3e>
     744:	dc 01       	movw	r26, r24
     746:	cb 01       	movw	r24, r22
     748:	82 23       	and	r24, r18
     74a:	93 23       	and	r25, r19
     74c:	a4 23       	and	r26, r20
     74e:	b5 23       	and	r27, r21
     750:	28 17       	cp	r18, r24
     752:	39 07       	cpc	r19, r25
     754:	4a 07       	cpc	r20, r26
     756:	5b 07       	cpc	r21, r27
     758:	21 f0       	breq	.+8      	; 0x762 <prvTestWaitCondition+0x3c>
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	03 c0       	rjmp	.+6      	; 0x764 <prvTestWaitCondition+0x3e>
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	01 c0       	rjmp	.+2      	; 0x764 <prvTestWaitCondition+0x3e>
     762:	81 e0       	ldi	r24, 0x01	; 1
     764:	0f 91       	pop	r16
     766:	08 95       	ret

00000768 <xEventGroupCreate>:
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	8f e0       	ldi	r24, 0x0F	; 15
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	af d1       	rcall	.+862    	; 0xad0 <pvPortMalloc>
     772:	ec 01       	movw	r28, r24
     774:	00 97       	sbiw	r24, 0x00	; 0
     776:	39 f0       	breq	.+14     	; 0x786 <xEventGroupCreate+0x1e>
     778:	fc 01       	movw	r30, r24
     77a:	11 92       	st	Z+, r1
     77c:	11 92       	st	Z+, r1
     77e:	11 92       	st	Z+, r1
     780:	11 92       	st	Z+, r1
     782:	cf 01       	movw	r24, r30
     784:	8b d2       	rcall	.+1302   	; 0xc9c <vListInitialise>
     786:	ce 01       	movw	r24, r28
     788:	df 91       	pop	r29
     78a:	cf 91       	pop	r28
     78c:	08 95       	ret

0000078e <xEventGroupWaitBits>:
     78e:	2f 92       	push	r2
     790:	3f 92       	push	r3
     792:	4f 92       	push	r4
     794:	5f 92       	push	r5
     796:	6f 92       	push	r6
     798:	7f 92       	push	r7
     79a:	8f 92       	push	r8
     79c:	9f 92       	push	r9
     79e:	af 92       	push	r10
     7a0:	bf 92       	push	r11
     7a2:	cf 92       	push	r12
     7a4:	df 92       	push	r13
     7a6:	ef 92       	push	r14
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	ec 01       	movw	r28, r24
     7b4:	4a 01       	movw	r8, r20
     7b6:	5b 01       	movw	r10, r22
     7b8:	62 2e       	mov	r6, r18
     7ba:	70 2e       	mov	r7, r16
     7bc:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <vTaskSuspendAll>
     7c0:	28 80       	ld	r2, Y
     7c2:	39 80       	ldd	r3, Y+1	; 0x01
     7c4:	4a 80       	ldd	r4, Y+2	; 0x02
     7c6:	5b 80       	ldd	r5, Y+3	; 0x03
     7c8:	a5 01       	movw	r20, r10
     7ca:	94 01       	movw	r18, r8
     7cc:	c2 01       	movw	r24, r4
     7ce:	b1 01       	movw	r22, r2
     7d0:	aa df       	rcall	.-172    	; 0x726 <prvTestWaitCondition>
     7d2:	88 23       	and	r24, r24
     7d4:	a1 f0       	breq	.+40     	; 0x7fe <xEventGroupWaitBits+0x70>
     7d6:	66 20       	and	r6, r6
     7d8:	89 f1       	breq	.+98     	; 0x83c <xEventGroupWaitBits+0xae>
     7da:	d5 01       	movw	r26, r10
     7dc:	c4 01       	movw	r24, r8
     7de:	80 95       	com	r24
     7e0:	90 95       	com	r25
     7e2:	a0 95       	com	r26
     7e4:	b0 95       	com	r27
     7e6:	82 21       	and	r24, r2
     7e8:	93 21       	and	r25, r3
     7ea:	a4 21       	and	r26, r4
     7ec:	b5 21       	and	r27, r5
     7ee:	88 83       	st	Y, r24
     7f0:	99 83       	std	Y+1, r25	; 0x01
     7f2:	aa 83       	std	Y+2, r26	; 0x02
     7f4:	bb 83       	std	Y+3, r27	; 0x03
     7f6:	c1 2c       	mov	r12, r1
     7f8:	d1 2c       	mov	r13, r1
     7fa:	76 01       	movw	r14, r12
     7fc:	22 c0       	rjmp	.+68     	; 0x842 <xEventGroupWaitBits+0xb4>
     7fe:	c1 14       	cp	r12, r1
     800:	d1 04       	cpc	r13, r1
     802:	e1 04       	cpc	r14, r1
     804:	f1 04       	cpc	r15, r1
     806:	e9 f0       	breq	.+58     	; 0x842 <xEventGroupWaitBits+0xb4>
     808:	61 10       	cpse	r6, r1
     80a:	04 c0       	rjmp	.+8      	; 0x814 <xEventGroupWaitBits+0x86>
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	50 e0       	ldi	r21, 0x00	; 0
     810:	ba 01       	movw	r22, r20
     812:	04 c0       	rjmp	.+8      	; 0x81c <xEventGroupWaitBits+0x8e>
     814:	40 e0       	ldi	r20, 0x00	; 0
     816:	50 e0       	ldi	r21, 0x00	; 0
     818:	60 e0       	ldi	r22, 0x00	; 0
     81a:	71 e0       	ldi	r23, 0x01	; 1
     81c:	71 10       	cpse	r7, r1
     81e:	74 60       	ori	r23, 0x04	; 4
     820:	48 29       	or	r20, r8
     822:	59 29       	or	r21, r9
     824:	6a 29       	or	r22, r10
     826:	7b 29       	or	r23, r11
     828:	97 01       	movw	r18, r14
     82a:	86 01       	movw	r16, r12
     82c:	ce 01       	movw	r24, r28
     82e:	04 96       	adiw	r24, 0x04	; 4
     830:	0e 94 ea 12 	call	0x25d4	; 0x25d4 <vTaskPlaceOnUnorderedEventList>
     834:	21 2c       	mov	r2, r1
     836:	31 2c       	mov	r3, r1
     838:	21 01       	movw	r4, r2
     83a:	03 c0       	rjmp	.+6      	; 0x842 <xEventGroupWaitBits+0xb4>
     83c:	c1 2c       	mov	r12, r1
     83e:	d1 2c       	mov	r13, r1
     840:	76 01       	movw	r14, r12
     842:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
     846:	cd 28       	or	r12, r13
     848:	ce 28       	or	r12, r14
     84a:	cf 28       	or	r12, r15
     84c:	59 f1       	breq	.+86     	; 0x8a4 <xEventGroupWaitBits+0x116>
     84e:	81 11       	cpse	r24, r1
     850:	01 c0       	rjmp	.+2      	; 0x854 <xEventGroupWaitBits+0xc6>
     852:	f2 d2       	rcall	.+1508   	; 0xe38 <vPortYield>
     854:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <uxTaskResetEventItemValue>
     858:	6b 01       	movw	r12, r22
     85a:	7c 01       	movw	r14, r24
     85c:	91 fd       	sbrc	r25, 1
     85e:	1f c0       	rjmp	.+62     	; 0x89e <xEventGroupWaitBits+0x110>
     860:	0f b6       	in	r0, 0x3f	; 63
     862:	f8 94       	cli
     864:	0f 92       	push	r0
     866:	c8 80       	ld	r12, Y
     868:	d9 80       	ldd	r13, Y+1	; 0x01
     86a:	ea 80       	ldd	r14, Y+2	; 0x02
     86c:	fb 80       	ldd	r15, Y+3	; 0x03
     86e:	07 2d       	mov	r16, r7
     870:	a5 01       	movw	r20, r10
     872:	94 01       	movw	r18, r8
     874:	c7 01       	movw	r24, r14
     876:	b6 01       	movw	r22, r12
     878:	56 df       	rcall	.-340    	; 0x726 <prvTestWaitCondition>
     87a:	88 23       	and	r24, r24
     87c:	71 f0       	breq	.+28     	; 0x89a <xEventGroupWaitBits+0x10c>
     87e:	66 20       	and	r6, r6
     880:	61 f0       	breq	.+24     	; 0x89a <xEventGroupWaitBits+0x10c>
     882:	80 94       	com	r8
     884:	90 94       	com	r9
     886:	a0 94       	com	r10
     888:	b0 94       	com	r11
     88a:	8c 20       	and	r8, r12
     88c:	9d 20       	and	r9, r13
     88e:	ae 20       	and	r10, r14
     890:	bf 20       	and	r11, r15
     892:	88 82       	st	Y, r8
     894:	99 82       	std	Y+1, r9	; 0x01
     896:	aa 82       	std	Y+2, r10	; 0x02
     898:	bb 82       	std	Y+3, r11	; 0x03
     89a:	0f 90       	pop	r0
     89c:	0f be       	out	0x3f, r0	; 63
     89e:	16 01       	movw	r2, r12
     8a0:	27 01       	movw	r4, r14
     8a2:	55 24       	eor	r5, r5
     8a4:	c2 01       	movw	r24, r4
     8a6:	b1 01       	movw	r22, r2
     8a8:	df 91       	pop	r29
     8aa:	cf 91       	pop	r28
     8ac:	1f 91       	pop	r17
     8ae:	0f 91       	pop	r16
     8b0:	ff 90       	pop	r15
     8b2:	ef 90       	pop	r14
     8b4:	df 90       	pop	r13
     8b6:	cf 90       	pop	r12
     8b8:	bf 90       	pop	r11
     8ba:	af 90       	pop	r10
     8bc:	9f 90       	pop	r9
     8be:	8f 90       	pop	r8
     8c0:	7f 90       	pop	r7
     8c2:	6f 90       	pop	r6
     8c4:	5f 90       	pop	r5
     8c6:	4f 90       	pop	r4
     8c8:	3f 90       	pop	r3
     8ca:	2f 90       	pop	r2
     8cc:	08 95       	ret

000008ce <xEventGroupSetBits>:
     8ce:	4f 92       	push	r4
     8d0:	5f 92       	push	r5
     8d2:	6f 92       	push	r6
     8d4:	7f 92       	push	r7
     8d6:	af 92       	push	r10
     8d8:	bf 92       	push	r11
     8da:	cf 92       	push	r12
     8dc:	df 92       	push	r13
     8de:	ef 92       	push	r14
     8e0:	ff 92       	push	r15
     8e2:	0f 93       	push	r16
     8e4:	1f 93       	push	r17
     8e6:	cf 93       	push	r28
     8e8:	df 93       	push	r29
     8ea:	ec 01       	movw	r28, r24
     8ec:	6a 01       	movw	r12, r20
     8ee:	7b 01       	movw	r14, r22
     8f0:	8c 01       	movw	r16, r24
     8f2:	09 5f       	subi	r16, 0xF9	; 249
     8f4:	1f 4f       	sbci	r17, 0xFF	; 255
     8f6:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <vTaskSuspendAll>
     8fa:	eb 85       	ldd	r30, Y+11	; 0x0b
     8fc:	fc 85       	ldd	r31, Y+12	; 0x0c
     8fe:	88 81       	ld	r24, Y
     900:	99 81       	ldd	r25, Y+1	; 0x01
     902:	aa 81       	ldd	r26, Y+2	; 0x02
     904:	bb 81       	ldd	r27, Y+3	; 0x03
     906:	c8 2a       	or	r12, r24
     908:	d9 2a       	or	r13, r25
     90a:	ea 2a       	or	r14, r26
     90c:	fb 2a       	or	r15, r27
     90e:	c8 82       	st	Y, r12
     910:	d9 82       	std	Y+1, r13	; 0x01
     912:	ea 82       	std	Y+2, r14	; 0x02
     914:	fb 82       	std	Y+3, r15	; 0x03
     916:	c1 2c       	mov	r12, r1
     918:	d1 2c       	mov	r13, r1
     91a:	76 01       	movw	r14, r12
     91c:	3d c0       	rjmp	.+122    	; 0x998 <xEventGroupSetBits+0xca>
     91e:	a4 80       	ldd	r10, Z+4	; 0x04
     920:	b5 80       	ldd	r11, Z+5	; 0x05
     922:	80 81       	ld	r24, Z
     924:	91 81       	ldd	r25, Z+1	; 0x01
     926:	a2 81       	ldd	r26, Z+2	; 0x02
     928:	b3 81       	ldd	r27, Z+3	; 0x03
     92a:	ac 01       	movw	r20, r24
     92c:	bd 01       	movw	r22, r26
     92e:	77 27       	eor	r23, r23
     930:	b2 fd       	sbrc	r27, 2
     932:	0e c0       	rjmp	.+28     	; 0x950 <xEventGroupSetBits+0x82>
     934:	48 80       	ld	r4, Y
     936:	59 80       	ldd	r5, Y+1	; 0x01
     938:	6a 80       	ldd	r6, Y+2	; 0x02
     93a:	7b 80       	ldd	r7, Y+3	; 0x03
     93c:	44 22       	and	r4, r20
     93e:	55 22       	and	r5, r21
     940:	66 22       	and	r6, r22
     942:	77 22       	and	r7, r23
     944:	45 28       	or	r4, r5
     946:	46 28       	or	r4, r6
     948:	47 28       	or	r4, r7
     94a:	89 f4       	brne	.+34     	; 0x96e <xEventGroupSetBits+0xa0>
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	12 c0       	rjmp	.+36     	; 0x974 <xEventGroupSetBits+0xa6>
     950:	48 80       	ld	r4, Y
     952:	59 80       	ldd	r5, Y+1	; 0x01
     954:	6a 80       	ldd	r6, Y+2	; 0x02
     956:	7b 80       	ldd	r7, Y+3	; 0x03
     958:	44 22       	and	r4, r20
     95a:	55 22       	and	r5, r21
     95c:	66 22       	and	r6, r22
     95e:	77 22       	and	r7, r23
     960:	44 15       	cp	r20, r4
     962:	55 05       	cpc	r21, r5
     964:	66 05       	cpc	r22, r6
     966:	77 05       	cpc	r23, r7
     968:	21 f0       	breq	.+8      	; 0x972 <xEventGroupSetBits+0xa4>
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	03 c0       	rjmp	.+6      	; 0x974 <xEventGroupSetBits+0xa6>
     96e:	21 e0       	ldi	r18, 0x01	; 1
     970:	01 c0       	rjmp	.+2      	; 0x974 <xEventGroupSetBits+0xa6>
     972:	21 e0       	ldi	r18, 0x01	; 1
     974:	22 23       	and	r18, r18
     976:	71 f0       	breq	.+28     	; 0x994 <xEventGroupSetBits+0xc6>
     978:	b0 ff       	sbrs	r27, 0
     97a:	04 c0       	rjmp	.+8      	; 0x984 <xEventGroupSetBits+0xb6>
     97c:	c4 2a       	or	r12, r20
     97e:	d5 2a       	or	r13, r21
     980:	e6 2a       	or	r14, r22
     982:	f7 2a       	or	r15, r23
     984:	48 81       	ld	r20, Y
     986:	59 81       	ldd	r21, Y+1	; 0x01
     988:	6a 81       	ldd	r22, Y+2	; 0x02
     98a:	7b 81       	ldd	r23, Y+3	; 0x03
     98c:	72 60       	ori	r23, 0x02	; 2
     98e:	cf 01       	movw	r24, r30
     990:	0e 94 25 14 	call	0x284a	; 0x284a <vTaskRemoveFromUnorderedEventList>
     994:	ea 2d       	mov	r30, r10
     996:	fb 2d       	mov	r31, r11
     998:	e0 17       	cp	r30, r16
     99a:	f1 07       	cpc	r31, r17
     99c:	09 f0       	breq	.+2      	; 0x9a0 <xEventGroupSetBits+0xd2>
     99e:	bf cf       	rjmp	.-130    	; 0x91e <xEventGroupSetBits+0x50>
     9a0:	c0 94       	com	r12
     9a2:	d0 94       	com	r13
     9a4:	e0 94       	com	r14
     9a6:	f0 94       	com	r15
     9a8:	88 81       	ld	r24, Y
     9aa:	99 81       	ldd	r25, Y+1	; 0x01
     9ac:	aa 81       	ldd	r26, Y+2	; 0x02
     9ae:	bb 81       	ldd	r27, Y+3	; 0x03
     9b0:	c8 22       	and	r12, r24
     9b2:	d9 22       	and	r13, r25
     9b4:	ea 22       	and	r14, r26
     9b6:	fb 22       	and	r15, r27
     9b8:	c8 82       	st	Y, r12
     9ba:	d9 82       	std	Y+1, r13	; 0x01
     9bc:	ea 82       	std	Y+2, r14	; 0x02
     9be:	fb 82       	std	Y+3, r15	; 0x03
     9c0:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
     9c4:	68 81       	ld	r22, Y
     9c6:	79 81       	ldd	r23, Y+1	; 0x01
     9c8:	8a 81       	ldd	r24, Y+2	; 0x02
     9ca:	9b 81       	ldd	r25, Y+3	; 0x03
     9cc:	df 91       	pop	r29
     9ce:	cf 91       	pop	r28
     9d0:	1f 91       	pop	r17
     9d2:	0f 91       	pop	r16
     9d4:	ff 90       	pop	r15
     9d6:	ef 90       	pop	r14
     9d8:	df 90       	pop	r13
     9da:	cf 90       	pop	r12
     9dc:	bf 90       	pop	r11
     9de:	af 90       	pop	r10
     9e0:	7f 90       	pop	r7
     9e2:	6f 90       	pop	r6
     9e4:	5f 90       	pop	r5
     9e6:	4f 90       	pop	r4
     9e8:	08 95       	ret

000009ea <prvHeapInit>:
     9ea:	ea ee       	ldi	r30, 0xEA	; 234
     9ec:	f7 e0       	ldi	r31, 0x07	; 7
     9ee:	ae ee       	ldi	r26, 0xEE	; 238
     9f0:	b7 e0       	ldi	r27, 0x07	; 7
     9f2:	b1 83       	std	Z+1, r27	; 0x01
     9f4:	a0 83       	st	Z, r26
     9f6:	13 82       	std	Z+3, r1	; 0x03
     9f8:	12 82       	std	Z+2, r1	; 0x02
     9fa:	e6 e9       	ldi	r30, 0x96	; 150
     9fc:	f5 e1       	ldi	r31, 0x15	; 21
     9fe:	f0 93 e9 07 	sts	0x07E9, r31	; 0x8007e9 <pxEnd+0x1>
     a02:	e0 93 e8 07 	sts	0x07E8, r30	; 0x8007e8 <pxEnd>
     a06:	13 82       	std	Z+3, r1	; 0x03
     a08:	12 82       	std	Z+2, r1	; 0x02
     a0a:	11 82       	std	Z+1, r1	; 0x01
     a0c:	10 82       	st	Z, r1
     a0e:	88 ea       	ldi	r24, 0xA8	; 168
     a10:	9d e0       	ldi	r25, 0x0D	; 13
     a12:	13 96       	adiw	r26, 0x03	; 3
     a14:	9c 93       	st	X, r25
     a16:	8e 93       	st	-X, r24
     a18:	12 97       	sbiw	r26, 0x02	; 2
     a1a:	ed 93       	st	X+, r30
     a1c:	fc 93       	st	X, r31
     a1e:	90 93 e5 07 	sts	0x07E5, r25	; 0x8007e5 <xMinimumEverFreeBytesRemaining+0x1>
     a22:	80 93 e4 07 	sts	0x07E4, r24	; 0x8007e4 <xMinimumEverFreeBytesRemaining>
     a26:	90 93 e7 07 	sts	0x07E7, r25	; 0x8007e7 <xFreeBytesRemaining+0x1>
     a2a:	80 93 e6 07 	sts	0x07E6, r24	; 0x8007e6 <xFreeBytesRemaining>
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e8       	ldi	r25, 0x80	; 128
     a32:	90 93 df 07 	sts	0x07DF, r25	; 0x8007df <xBlockAllocatedBit+0x1>
     a36:	80 93 de 07 	sts	0x07DE, r24	; 0x8007de <xBlockAllocatedBit>
     a3a:	08 95       	ret

00000a3c <prvInsertBlockIntoFreeList>:
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	ec 01       	movw	r28, r24
     a42:	aa ee       	ldi	r26, 0xEA	; 234
     a44:	b7 e0       	ldi	r27, 0x07	; 7
     a46:	01 c0       	rjmp	.+2      	; 0xa4a <prvInsertBlockIntoFreeList+0xe>
     a48:	df 01       	movw	r26, r30
     a4a:	ed 91       	ld	r30, X+
     a4c:	fc 91       	ld	r31, X
     a4e:	11 97       	sbiw	r26, 0x01	; 1
     a50:	ec 17       	cp	r30, r28
     a52:	fd 07       	cpc	r31, r29
     a54:	c8 f3       	brcs	.-14     	; 0xa48 <prvInsertBlockIntoFreeList+0xc>
     a56:	12 96       	adiw	r26, 0x02	; 2
     a58:	8d 91       	ld	r24, X+
     a5a:	9c 91       	ld	r25, X
     a5c:	13 97       	sbiw	r26, 0x03	; 3
     a5e:	9d 01       	movw	r18, r26
     a60:	28 0f       	add	r18, r24
     a62:	39 1f       	adc	r19, r25
     a64:	c2 17       	cp	r28, r18
     a66:	d3 07       	cpc	r29, r19
     a68:	49 f4       	brne	.+18     	; 0xa7c <prvInsertBlockIntoFreeList+0x40>
     a6a:	2a 81       	ldd	r18, Y+2	; 0x02
     a6c:	3b 81       	ldd	r19, Y+3	; 0x03
     a6e:	82 0f       	add	r24, r18
     a70:	93 1f       	adc	r25, r19
     a72:	13 96       	adiw	r26, 0x03	; 3
     a74:	9c 93       	st	X, r25
     a76:	8e 93       	st	-X, r24
     a78:	12 97       	sbiw	r26, 0x02	; 2
     a7a:	ed 01       	movw	r28, r26
     a7c:	8a 81       	ldd	r24, Y+2	; 0x02
     a7e:	9b 81       	ldd	r25, Y+3	; 0x03
     a80:	9e 01       	movw	r18, r28
     a82:	28 0f       	add	r18, r24
     a84:	39 1f       	adc	r19, r25
     a86:	e2 17       	cp	r30, r18
     a88:	f3 07       	cpc	r31, r19
     a8a:	c1 f4       	brne	.+48     	; 0xabc <prvInsertBlockIntoFreeList+0x80>
     a8c:	20 91 e8 07 	lds	r18, 0x07E8	; 0x8007e8 <pxEnd>
     a90:	30 91 e9 07 	lds	r19, 0x07E9	; 0x8007e9 <pxEnd+0x1>
     a94:	e2 17       	cp	r30, r18
     a96:	f3 07       	cpc	r31, r19
     a98:	71 f0       	breq	.+28     	; 0xab6 <prvInsertBlockIntoFreeList+0x7a>
     a9a:	22 81       	ldd	r18, Z+2	; 0x02
     a9c:	33 81       	ldd	r19, Z+3	; 0x03
     a9e:	82 0f       	add	r24, r18
     aa0:	93 1f       	adc	r25, r19
     aa2:	9b 83       	std	Y+3, r25	; 0x03
     aa4:	8a 83       	std	Y+2, r24	; 0x02
     aa6:	ed 91       	ld	r30, X+
     aa8:	fc 91       	ld	r31, X
     aaa:	11 97       	sbiw	r26, 0x01	; 1
     aac:	80 81       	ld	r24, Z
     aae:	91 81       	ldd	r25, Z+1	; 0x01
     ab0:	99 83       	std	Y+1, r25	; 0x01
     ab2:	88 83       	st	Y, r24
     ab4:	05 c0       	rjmp	.+10     	; 0xac0 <prvInsertBlockIntoFreeList+0x84>
     ab6:	39 83       	std	Y+1, r19	; 0x01
     ab8:	28 83       	st	Y, r18
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <prvInsertBlockIntoFreeList+0x84>
     abc:	f9 83       	std	Y+1, r31	; 0x01
     abe:	e8 83       	st	Y, r30
     ac0:	ca 17       	cp	r28, r26
     ac2:	db 07       	cpc	r29, r27
     ac4:	11 f0       	breq	.+4      	; 0xaca <prvInsertBlockIntoFreeList+0x8e>
     ac6:	cd 93       	st	X+, r28
     ac8:	dc 93       	st	X, r29
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <pvPortMalloc>:
     ad0:	ef 92       	push	r14
     ad2:	ff 92       	push	r15
     ad4:	0f 93       	push	r16
     ad6:	1f 93       	push	r17
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	8c 01       	movw	r16, r24
     ade:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <vTaskSuspendAll>
     ae2:	80 91 e8 07 	lds	r24, 0x07E8	; 0x8007e8 <pxEnd>
     ae6:	90 91 e9 07 	lds	r25, 0x07E9	; 0x8007e9 <pxEnd+0x1>
     aea:	89 2b       	or	r24, r25
     aec:	09 f4       	brne	.+2      	; 0xaf0 <pvPortMalloc+0x20>
     aee:	7d df       	rcall	.-262    	; 0x9ea <prvHeapInit>
     af0:	80 91 de 07 	lds	r24, 0x07DE	; 0x8007de <xBlockAllocatedBit>
     af4:	90 91 df 07 	lds	r25, 0x07DF	; 0x8007df <xBlockAllocatedBit+0x1>
     af8:	80 23       	and	r24, r16
     afa:	91 23       	and	r25, r17
     afc:	89 2b       	or	r24, r25
     afe:	09 f0       	breq	.+2      	; 0xb02 <pvPortMalloc+0x32>
     b00:	76 c0       	rjmp	.+236    	; 0xbee <pvPortMalloc+0x11e>
     b02:	01 15       	cp	r16, r1
     b04:	11 05       	cpc	r17, r1
     b06:	49 f0       	breq	.+18     	; 0xb1a <pvPortMalloc+0x4a>
     b08:	c8 01       	movw	r24, r16
     b0a:	04 96       	adiw	r24, 0x04	; 4
     b0c:	08 17       	cp	r16, r24
     b0e:	19 07       	cpc	r17, r25
     b10:	18 f0       	brcs	.+6      	; 0xb18 <pvPortMalloc+0x48>
     b12:	00 e0       	ldi	r16, 0x00	; 0
     b14:	10 e0       	ldi	r17, 0x00	; 0
     b16:	01 c0       	rjmp	.+2      	; 0xb1a <pvPortMalloc+0x4a>
     b18:	8c 01       	movw	r16, r24
     b1a:	01 15       	cp	r16, r1
     b1c:	11 05       	cpc	r17, r1
     b1e:	09 f4       	brne	.+2      	; 0xb22 <pvPortMalloc+0x52>
     b20:	69 c0       	rjmp	.+210    	; 0xbf4 <pvPortMalloc+0x124>
     b22:	80 91 e6 07 	lds	r24, 0x07E6	; 0x8007e6 <xFreeBytesRemaining>
     b26:	90 91 e7 07 	lds	r25, 0x07E7	; 0x8007e7 <xFreeBytesRemaining+0x1>
     b2a:	80 17       	cp	r24, r16
     b2c:	91 07       	cpc	r25, r17
     b2e:	08 f4       	brcc	.+2      	; 0xb32 <pvPortMalloc+0x62>
     b30:	64 c0       	rjmp	.+200    	; 0xbfa <pvPortMalloc+0x12a>
     b32:	c0 91 ea 07 	lds	r28, 0x07EA	; 0x8007ea <xStart>
     b36:	d0 91 eb 07 	lds	r29, 0x07EB	; 0x8007eb <xStart+0x1>
     b3a:	ea ee       	ldi	r30, 0xEA	; 234
     b3c:	f7 e0       	ldi	r31, 0x07	; 7
     b3e:	02 c0       	rjmp	.+4      	; 0xb44 <pvPortMalloc+0x74>
     b40:	fe 01       	movw	r30, r28
     b42:	ec 01       	movw	r28, r24
     b44:	8a 81       	ldd	r24, Y+2	; 0x02
     b46:	9b 81       	ldd	r25, Y+3	; 0x03
     b48:	80 17       	cp	r24, r16
     b4a:	91 07       	cpc	r25, r17
     b4c:	20 f4       	brcc	.+8      	; 0xb56 <pvPortMalloc+0x86>
     b4e:	88 81       	ld	r24, Y
     b50:	99 81       	ldd	r25, Y+1	; 0x01
     b52:	00 97       	sbiw	r24, 0x00	; 0
     b54:	a9 f7       	brne	.-22     	; 0xb40 <pvPortMalloc+0x70>
     b56:	80 91 e8 07 	lds	r24, 0x07E8	; 0x8007e8 <pxEnd>
     b5a:	90 91 e9 07 	lds	r25, 0x07E9	; 0x8007e9 <pxEnd+0x1>
     b5e:	c8 17       	cp	r28, r24
     b60:	d9 07       	cpc	r29, r25
     b62:	09 f4       	brne	.+2      	; 0xb66 <pvPortMalloc+0x96>
     b64:	4d c0       	rjmp	.+154    	; 0xc00 <pvPortMalloc+0x130>
     b66:	e0 80       	ld	r14, Z
     b68:	f1 80       	ldd	r15, Z+1	; 0x01
     b6a:	84 e0       	ldi	r24, 0x04	; 4
     b6c:	e8 0e       	add	r14, r24
     b6e:	f1 1c       	adc	r15, r1
     b70:	88 81       	ld	r24, Y
     b72:	99 81       	ldd	r25, Y+1	; 0x01
     b74:	91 83       	std	Z+1, r25	; 0x01
     b76:	80 83       	st	Z, r24
     b78:	2a 81       	ldd	r18, Y+2	; 0x02
     b7a:	3b 81       	ldd	r19, Y+3	; 0x03
     b7c:	20 1b       	sub	r18, r16
     b7e:	31 0b       	sbc	r19, r17
     b80:	29 30       	cpi	r18, 0x09	; 9
     b82:	31 05       	cpc	r19, r1
     b84:	48 f0       	brcs	.+18     	; 0xb98 <pvPortMalloc+0xc8>
     b86:	ce 01       	movw	r24, r28
     b88:	80 0f       	add	r24, r16
     b8a:	91 1f       	adc	r25, r17
     b8c:	fc 01       	movw	r30, r24
     b8e:	33 83       	std	Z+3, r19	; 0x03
     b90:	22 83       	std	Z+2, r18	; 0x02
     b92:	1b 83       	std	Y+3, r17	; 0x03
     b94:	0a 83       	std	Y+2, r16	; 0x02
     b96:	52 df       	rcall	.-348    	; 0xa3c <prvInsertBlockIntoFreeList>
     b98:	2a 81       	ldd	r18, Y+2	; 0x02
     b9a:	3b 81       	ldd	r19, Y+3	; 0x03
     b9c:	80 91 e6 07 	lds	r24, 0x07E6	; 0x8007e6 <xFreeBytesRemaining>
     ba0:	90 91 e7 07 	lds	r25, 0x07E7	; 0x8007e7 <xFreeBytesRemaining+0x1>
     ba4:	82 1b       	sub	r24, r18
     ba6:	93 0b       	sbc	r25, r19
     ba8:	90 93 e7 07 	sts	0x07E7, r25	; 0x8007e7 <xFreeBytesRemaining+0x1>
     bac:	80 93 e6 07 	sts	0x07E6, r24	; 0x8007e6 <xFreeBytesRemaining>
     bb0:	40 91 e4 07 	lds	r20, 0x07E4	; 0x8007e4 <xMinimumEverFreeBytesRemaining>
     bb4:	50 91 e5 07 	lds	r21, 0x07E5	; 0x8007e5 <xMinimumEverFreeBytesRemaining+0x1>
     bb8:	84 17       	cp	r24, r20
     bba:	95 07       	cpc	r25, r21
     bbc:	20 f4       	brcc	.+8      	; 0xbc6 <pvPortMalloc+0xf6>
     bbe:	90 93 e5 07 	sts	0x07E5, r25	; 0x8007e5 <xMinimumEverFreeBytesRemaining+0x1>
     bc2:	80 93 e4 07 	sts	0x07E4, r24	; 0x8007e4 <xMinimumEverFreeBytesRemaining>
     bc6:	80 91 de 07 	lds	r24, 0x07DE	; 0x8007de <xBlockAllocatedBit>
     bca:	90 91 df 07 	lds	r25, 0x07DF	; 0x8007df <xBlockAllocatedBit+0x1>
     bce:	28 2b       	or	r18, r24
     bd0:	39 2b       	or	r19, r25
     bd2:	3b 83       	std	Y+3, r19	; 0x03
     bd4:	2a 83       	std	Y+2, r18	; 0x02
     bd6:	19 82       	std	Y+1, r1	; 0x01
     bd8:	18 82       	st	Y, r1
     bda:	80 91 e2 07 	lds	r24, 0x07E2	; 0x8007e2 <xNumberOfSuccessfulAllocations>
     bde:	90 91 e3 07 	lds	r25, 0x07E3	; 0x8007e3 <xNumberOfSuccessfulAllocations+0x1>
     be2:	01 96       	adiw	r24, 0x01	; 1
     be4:	90 93 e3 07 	sts	0x07E3, r25	; 0x8007e3 <xNumberOfSuccessfulAllocations+0x1>
     be8:	80 93 e2 07 	sts	0x07E2, r24	; 0x8007e2 <xNumberOfSuccessfulAllocations>
     bec:	0b c0       	rjmp	.+22     	; 0xc04 <pvPortMalloc+0x134>
     bee:	e1 2c       	mov	r14, r1
     bf0:	f1 2c       	mov	r15, r1
     bf2:	08 c0       	rjmp	.+16     	; 0xc04 <pvPortMalloc+0x134>
     bf4:	e1 2c       	mov	r14, r1
     bf6:	f1 2c       	mov	r15, r1
     bf8:	05 c0       	rjmp	.+10     	; 0xc04 <pvPortMalloc+0x134>
     bfa:	e1 2c       	mov	r14, r1
     bfc:	f1 2c       	mov	r15, r1
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <pvPortMalloc+0x134>
     c00:	e1 2c       	mov	r14, r1
     c02:	f1 2c       	mov	r15, r1
     c04:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
     c08:	e1 14       	cp	r14, r1
     c0a:	f1 04       	cpc	r15, r1
     c0c:	11 f4       	brne	.+4      	; 0xc12 <pvPortMalloc+0x142>
     c0e:	0e 94 9f 1a 	call	0x353e	; 0x353e <vApplicationMallocFailedHook>
     c12:	c7 01       	movw	r24, r14
     c14:	df 91       	pop	r29
     c16:	cf 91       	pop	r28
     c18:	1f 91       	pop	r17
     c1a:	0f 91       	pop	r16
     c1c:	ff 90       	pop	r15
     c1e:	ef 90       	pop	r14
     c20:	08 95       	ret

00000c22 <vPortFree>:
     c22:	0f 93       	push	r16
     c24:	1f 93       	push	r17
     c26:	cf 93       	push	r28
     c28:	df 93       	push	r29
     c2a:	00 97       	sbiw	r24, 0x00	; 0
     c2c:	91 f1       	breq	.+100    	; 0xc92 <vPortFree+0x70>
     c2e:	ec 01       	movw	r28, r24
     c30:	24 97       	sbiw	r28, 0x04	; 4
     c32:	4a 81       	ldd	r20, Y+2	; 0x02
     c34:	5b 81       	ldd	r21, Y+3	; 0x03
     c36:	20 91 de 07 	lds	r18, 0x07DE	; 0x8007de <xBlockAllocatedBit>
     c3a:	30 91 df 07 	lds	r19, 0x07DF	; 0x8007df <xBlockAllocatedBit+0x1>
     c3e:	ba 01       	movw	r22, r20
     c40:	62 23       	and	r22, r18
     c42:	73 23       	and	r23, r19
     c44:	67 2b       	or	r22, r23
     c46:	29 f1       	breq	.+74     	; 0xc92 <vPortFree+0x70>
     c48:	68 81       	ld	r22, Y
     c4a:	79 81       	ldd	r23, Y+1	; 0x01
     c4c:	67 2b       	or	r22, r23
     c4e:	09 f5       	brne	.+66     	; 0xc92 <vPortFree+0x70>
     c50:	20 95       	com	r18
     c52:	30 95       	com	r19
     c54:	24 23       	and	r18, r20
     c56:	35 23       	and	r19, r21
     c58:	3b 83       	std	Y+3, r19	; 0x03
     c5a:	2a 83       	std	Y+2, r18	; 0x02
     c5c:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <vTaskSuspendAll>
     c60:	8a 81       	ldd	r24, Y+2	; 0x02
     c62:	9b 81       	ldd	r25, Y+3	; 0x03
     c64:	20 91 e6 07 	lds	r18, 0x07E6	; 0x8007e6 <xFreeBytesRemaining>
     c68:	30 91 e7 07 	lds	r19, 0x07E7	; 0x8007e7 <xFreeBytesRemaining+0x1>
     c6c:	82 0f       	add	r24, r18
     c6e:	93 1f       	adc	r25, r19
     c70:	90 93 e7 07 	sts	0x07E7, r25	; 0x8007e7 <xFreeBytesRemaining+0x1>
     c74:	80 93 e6 07 	sts	0x07E6, r24	; 0x8007e6 <xFreeBytesRemaining>
     c78:	ce 01       	movw	r24, r28
     c7a:	e0 de       	rcall	.-576    	; 0xa3c <prvInsertBlockIntoFreeList>
     c7c:	80 91 e0 07 	lds	r24, 0x07E0	; 0x8007e0 <xNumberOfSuccessfulFrees>
     c80:	90 91 e1 07 	lds	r25, 0x07E1	; 0x8007e1 <xNumberOfSuccessfulFrees+0x1>
     c84:	01 96       	adiw	r24, 0x01	; 1
     c86:	90 93 e1 07 	sts	0x07E1, r25	; 0x8007e1 <xNumberOfSuccessfulFrees+0x1>
     c8a:	80 93 e0 07 	sts	0x07E0, r24	; 0x8007e0 <xNumberOfSuccessfulFrees>
     c8e:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	1f 91       	pop	r17
     c98:	0f 91       	pop	r16
     c9a:	08 95       	ret

00000c9c <vListInitialise>:
     c9c:	fc 01       	movw	r30, r24
     c9e:	03 96       	adiw	r24, 0x03	; 3
     ca0:	92 83       	std	Z+2, r25	; 0x02
     ca2:	81 83       	std	Z+1, r24	; 0x01
     ca4:	4f ef       	ldi	r20, 0xFF	; 255
     ca6:	5f ef       	ldi	r21, 0xFF	; 255
     ca8:	ba 01       	movw	r22, r20
     caa:	43 83       	std	Z+3, r20	; 0x03
     cac:	54 83       	std	Z+4, r21	; 0x04
     cae:	65 83       	std	Z+5, r22	; 0x05
     cb0:	76 83       	std	Z+6, r23	; 0x06
     cb2:	90 87       	std	Z+8, r25	; 0x08
     cb4:	87 83       	std	Z+7, r24	; 0x07
     cb6:	92 87       	std	Z+10, r25	; 0x0a
     cb8:	81 87       	std	Z+9, r24	; 0x09
     cba:	10 82       	st	Z, r1
     cbc:	08 95       	ret

00000cbe <vListInitialiseItem>:
     cbe:	fc 01       	movw	r30, r24
     cc0:	13 86       	std	Z+11, r1	; 0x0b
     cc2:	12 86       	std	Z+10, r1	; 0x0a
     cc4:	08 95       	ret

00000cc6 <vListInsert>:
     cc6:	0f 93       	push	r16
     cc8:	1f 93       	push	r17
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	eb 01       	movw	r28, r22
     cd0:	08 81       	ld	r16, Y
     cd2:	19 81       	ldd	r17, Y+1	; 0x01
     cd4:	2a 81       	ldd	r18, Y+2	; 0x02
     cd6:	3b 81       	ldd	r19, Y+3	; 0x03
     cd8:	0f 3f       	cpi	r16, 0xFF	; 255
     cda:	4f ef       	ldi	r20, 0xFF	; 255
     cdc:	14 07       	cpc	r17, r20
     cde:	24 07       	cpc	r18, r20
     ce0:	34 07       	cpc	r19, r20
     ce2:	21 f4       	brne	.+8      	; 0xcec <vListInsert+0x26>
     ce4:	fc 01       	movw	r30, r24
     ce6:	a1 85       	ldd	r26, Z+9	; 0x09
     ce8:	b2 85       	ldd	r27, Z+10	; 0x0a
     cea:	11 c0       	rjmp	.+34     	; 0xd0e <vListInsert+0x48>
     cec:	dc 01       	movw	r26, r24
     cee:	13 96       	adiw	r26, 0x03	; 3
     cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <vListInsert+0x2e>
     cf2:	df 01       	movw	r26, r30
     cf4:	14 96       	adiw	r26, 0x04	; 4
     cf6:	ed 91       	ld	r30, X+
     cf8:	fc 91       	ld	r31, X
     cfa:	15 97       	sbiw	r26, 0x05	; 5
     cfc:	40 81       	ld	r20, Z
     cfe:	51 81       	ldd	r21, Z+1	; 0x01
     d00:	62 81       	ldd	r22, Z+2	; 0x02
     d02:	73 81       	ldd	r23, Z+3	; 0x03
     d04:	04 17       	cp	r16, r20
     d06:	15 07       	cpc	r17, r21
     d08:	26 07       	cpc	r18, r22
     d0a:	37 07       	cpc	r19, r23
     d0c:	90 f7       	brcc	.-28     	; 0xcf2 <vListInsert+0x2c>
     d0e:	14 96       	adiw	r26, 0x04	; 4
     d10:	ed 91       	ld	r30, X+
     d12:	fc 91       	ld	r31, X
     d14:	15 97       	sbiw	r26, 0x05	; 5
     d16:	fd 83       	std	Y+5, r31	; 0x05
     d18:	ec 83       	std	Y+4, r30	; 0x04
     d1a:	d7 83       	std	Z+7, r29	; 0x07
     d1c:	c6 83       	std	Z+6, r28	; 0x06
     d1e:	bf 83       	std	Y+7, r27	; 0x07
     d20:	ae 83       	std	Y+6, r26	; 0x06
     d22:	15 96       	adiw	r26, 0x05	; 5
     d24:	dc 93       	st	X, r29
     d26:	ce 93       	st	-X, r28
     d28:	14 97       	sbiw	r26, 0x04	; 4
     d2a:	9b 87       	std	Y+11, r25	; 0x0b
     d2c:	8a 87       	std	Y+10, r24	; 0x0a
     d2e:	fc 01       	movw	r30, r24
     d30:	20 81       	ld	r18, Z
     d32:	2f 5f       	subi	r18, 0xFF	; 255
     d34:	20 83       	st	Z, r18
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	1f 91       	pop	r17
     d3c:	0f 91       	pop	r16
     d3e:	08 95       	ret

00000d40 <uxListRemove>:
     d40:	cf 93       	push	r28
     d42:	df 93       	push	r29
     d44:	fc 01       	movw	r30, r24
     d46:	a2 85       	ldd	r26, Z+10	; 0x0a
     d48:	b3 85       	ldd	r27, Z+11	; 0x0b
     d4a:	c4 81       	ldd	r28, Z+4	; 0x04
     d4c:	d5 81       	ldd	r29, Z+5	; 0x05
     d4e:	86 81       	ldd	r24, Z+6	; 0x06
     d50:	97 81       	ldd	r25, Z+7	; 0x07
     d52:	9f 83       	std	Y+7, r25	; 0x07
     d54:	8e 83       	std	Y+6, r24	; 0x06
     d56:	c6 81       	ldd	r28, Z+6	; 0x06
     d58:	d7 81       	ldd	r29, Z+7	; 0x07
     d5a:	84 81       	ldd	r24, Z+4	; 0x04
     d5c:	95 81       	ldd	r25, Z+5	; 0x05
     d5e:	9d 83       	std	Y+5, r25	; 0x05
     d60:	8c 83       	std	Y+4, r24	; 0x04
     d62:	11 96       	adiw	r26, 0x01	; 1
     d64:	8d 91       	ld	r24, X+
     d66:	9c 91       	ld	r25, X
     d68:	12 97       	sbiw	r26, 0x02	; 2
     d6a:	e8 17       	cp	r30, r24
     d6c:	f9 07       	cpc	r31, r25
     d6e:	31 f4       	brne	.+12     	; 0xd7c <uxListRemove+0x3c>
     d70:	86 81       	ldd	r24, Z+6	; 0x06
     d72:	97 81       	ldd	r25, Z+7	; 0x07
     d74:	12 96       	adiw	r26, 0x02	; 2
     d76:	9c 93       	st	X, r25
     d78:	8e 93       	st	-X, r24
     d7a:	11 97       	sbiw	r26, 0x01	; 1
     d7c:	13 86       	std	Z+11, r1	; 0x0b
     d7e:	12 86       	std	Z+10, r1	; 0x0a
     d80:	8c 91       	ld	r24, X
     d82:	81 50       	subi	r24, 0x01	; 1
     d84:	8c 93       	st	X, r24
     d86:	8c 91       	ld	r24, X
     d88:	df 91       	pop	r29
     d8a:	cf 91       	pop	r28
     d8c:	08 95       	ret

00000d8e <prvSetupTimerInterrupt>:
     d8e:	a8 95       	wdr
     d90:	90 ec       	ldi	r25, 0xC0	; 192
     d92:	88 e1       	ldi	r24, 0x18	; 24
     d94:	0f b6       	in	r0, 0x3f	; 63
     d96:	f8 94       	cli
     d98:	a8 95       	wdr
     d9a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     d9e:	0f be       	out	0x3f, r0	; 63
     da0:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     da4:	08 95       	ret

00000da6 <pxPortInitialiseStack>:
     da6:	fc 01       	movw	r30, r24
     da8:	60 83       	st	Z, r22
     daa:	31 97       	sbiw	r30, 0x01	; 1
     dac:	70 83       	st	Z, r23
     dae:	31 97       	sbiw	r30, 0x01	; 1
     db0:	10 82       	st	Z, r1
     db2:	31 97       	sbiw	r30, 0x01	; 1
     db4:	10 82       	st	Z, r1
     db6:	31 97       	sbiw	r30, 0x01	; 1
     db8:	20 e8       	ldi	r18, 0x80	; 128
     dba:	20 83       	st	Z, r18
     dbc:	31 97       	sbiw	r30, 0x01	; 1
     dbe:	10 82       	st	Z, r1
     dc0:	31 97       	sbiw	r30, 0x01	; 1
     dc2:	10 82       	st	Z, r1
     dc4:	31 97       	sbiw	r30, 0x01	; 1
     dc6:	10 82       	st	Z, r1
     dc8:	77 97       	sbiw	r30, 0x17	; 23
     dca:	40 83       	st	Z, r20
     dcc:	31 97       	sbiw	r30, 0x01	; 1
     dce:	50 83       	st	Z, r21
     dd0:	86 97       	sbiw	r24, 0x26	; 38
     dd2:	08 95       	ret

00000dd4 <xPortStartScheduler>:
     dd4:	dc df       	rcall	.-72     	; 0xd8e <prvSetupTimerInterrupt>
     dd6:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
     dda:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
     dde:	cd 91       	ld	r28, X+
     de0:	cd bf       	out	0x3d, r28	; 61
     de2:	dd 91       	ld	r29, X+
     de4:	de bf       	out	0x3e, r29	; 62
     de6:	ff 91       	pop	r31
     de8:	ef 91       	pop	r30
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	bf 91       	pop	r27
     df0:	af 91       	pop	r26
     df2:	9f 91       	pop	r25
     df4:	8f 91       	pop	r24
     df6:	7f 91       	pop	r23
     df8:	6f 91       	pop	r22
     dfa:	5f 91       	pop	r21
     dfc:	4f 91       	pop	r20
     dfe:	3f 91       	pop	r19
     e00:	2f 91       	pop	r18
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	ff 90       	pop	r15
     e08:	ef 90       	pop	r14
     e0a:	df 90       	pop	r13
     e0c:	cf 90       	pop	r12
     e0e:	bf 90       	pop	r11
     e10:	af 90       	pop	r10
     e12:	9f 90       	pop	r9
     e14:	8f 90       	pop	r8
     e16:	7f 90       	pop	r7
     e18:	6f 90       	pop	r6
     e1a:	5f 90       	pop	r5
     e1c:	4f 90       	pop	r4
     e1e:	3f 90       	pop	r3
     e20:	2f 90       	pop	r2
     e22:	1f 90       	pop	r1
     e24:	0f 90       	pop	r0
     e26:	0c be       	out	0x3c, r0	; 60
     e28:	0f 90       	pop	r0
     e2a:	0b be       	out	0x3b, r0	; 59
     e2c:	0f 90       	pop	r0
     e2e:	0f be       	out	0x3f, r0	; 63
     e30:	0f 90       	pop	r0
     e32:	08 95       	ret
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	08 95       	ret

00000e38 <vPortYield>:
     e38:	0f 92       	push	r0
     e3a:	0f b6       	in	r0, 0x3f	; 63
     e3c:	f8 94       	cli
     e3e:	0f 92       	push	r0
     e40:	0b b6       	in	r0, 0x3b	; 59
     e42:	0f 92       	push	r0
     e44:	0c b6       	in	r0, 0x3c	; 60
     e46:	0f 92       	push	r0
     e48:	1f 92       	push	r1
     e4a:	11 24       	eor	r1, r1
     e4c:	2f 92       	push	r2
     e4e:	3f 92       	push	r3
     e50:	4f 92       	push	r4
     e52:	5f 92       	push	r5
     e54:	6f 92       	push	r6
     e56:	7f 92       	push	r7
     e58:	8f 92       	push	r8
     e5a:	9f 92       	push	r9
     e5c:	af 92       	push	r10
     e5e:	bf 92       	push	r11
     e60:	cf 92       	push	r12
     e62:	df 92       	push	r13
     e64:	ef 92       	push	r14
     e66:	ff 92       	push	r15
     e68:	0f 93       	push	r16
     e6a:	1f 93       	push	r17
     e6c:	2f 93       	push	r18
     e6e:	3f 93       	push	r19
     e70:	4f 93       	push	r20
     e72:	5f 93       	push	r21
     e74:	6f 93       	push	r22
     e76:	7f 93       	push	r23
     e78:	8f 93       	push	r24
     e7a:	9f 93       	push	r25
     e7c:	af 93       	push	r26
     e7e:	bf 93       	push	r27
     e80:	cf 93       	push	r28
     e82:	df 93       	push	r29
     e84:	ef 93       	push	r30
     e86:	ff 93       	push	r31
     e88:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
     e8c:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
     e90:	0d b6       	in	r0, 0x3d	; 61
     e92:	0d 92       	st	X+, r0
     e94:	0e b6       	in	r0, 0x3e	; 62
     e96:	0d 92       	st	X+, r0
     e98:	0e 94 6e 12 	call	0x24dc	; 0x24dc <vTaskSwitchContext>
     e9c:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
     ea0:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
     ea4:	cd 91       	ld	r28, X+
     ea6:	cd bf       	out	0x3d, r28	; 61
     ea8:	dd 91       	ld	r29, X+
     eaa:	de bf       	out	0x3e, r29	; 62
     eac:	ff 91       	pop	r31
     eae:	ef 91       	pop	r30
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	bf 91       	pop	r27
     eb6:	af 91       	pop	r26
     eb8:	9f 91       	pop	r25
     eba:	8f 91       	pop	r24
     ebc:	7f 91       	pop	r23
     ebe:	6f 91       	pop	r22
     ec0:	5f 91       	pop	r21
     ec2:	4f 91       	pop	r20
     ec4:	3f 91       	pop	r19
     ec6:	2f 91       	pop	r18
     ec8:	1f 91       	pop	r17
     eca:	0f 91       	pop	r16
     ecc:	ff 90       	pop	r15
     ece:	ef 90       	pop	r14
     ed0:	df 90       	pop	r13
     ed2:	cf 90       	pop	r12
     ed4:	bf 90       	pop	r11
     ed6:	af 90       	pop	r10
     ed8:	9f 90       	pop	r9
     eda:	8f 90       	pop	r8
     edc:	7f 90       	pop	r7
     ede:	6f 90       	pop	r6
     ee0:	5f 90       	pop	r5
     ee2:	4f 90       	pop	r4
     ee4:	3f 90       	pop	r3
     ee6:	2f 90       	pop	r2
     ee8:	1f 90       	pop	r1
     eea:	0f 90       	pop	r0
     eec:	0c be       	out	0x3c, r0	; 60
     eee:	0f 90       	pop	r0
     ef0:	0b be       	out	0x3b, r0	; 59
     ef2:	0f 90       	pop	r0
     ef4:	0f be       	out	0x3f, r0	; 63
     ef6:	0f 90       	pop	r0
     ef8:	08 95       	ret

00000efa <vPortYieldFromTick>:
     efa:	0f 92       	push	r0
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	0f 92       	push	r0
     f02:	0b b6       	in	r0, 0x3b	; 59
     f04:	0f 92       	push	r0
     f06:	0c b6       	in	r0, 0x3c	; 60
     f08:	0f 92       	push	r0
     f0a:	1f 92       	push	r1
     f0c:	11 24       	eor	r1, r1
     f0e:	2f 92       	push	r2
     f10:	3f 92       	push	r3
     f12:	4f 92       	push	r4
     f14:	5f 92       	push	r5
     f16:	6f 92       	push	r6
     f18:	7f 92       	push	r7
     f1a:	8f 92       	push	r8
     f1c:	9f 92       	push	r9
     f1e:	af 92       	push	r10
     f20:	bf 92       	push	r11
     f22:	cf 92       	push	r12
     f24:	df 92       	push	r13
     f26:	ef 92       	push	r14
     f28:	ff 92       	push	r15
     f2a:	0f 93       	push	r16
     f2c:	1f 93       	push	r17
     f2e:	2f 93       	push	r18
     f30:	3f 93       	push	r19
     f32:	4f 93       	push	r20
     f34:	5f 93       	push	r21
     f36:	6f 93       	push	r22
     f38:	7f 93       	push	r23
     f3a:	8f 93       	push	r24
     f3c:	9f 93       	push	r25
     f3e:	af 93       	push	r26
     f40:	bf 93       	push	r27
     f42:	cf 93       	push	r28
     f44:	df 93       	push	r29
     f46:	ef 93       	push	r30
     f48:	ff 93       	push	r31
     f4a:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
     f4e:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
     f52:	0d b6       	in	r0, 0x3d	; 61
     f54:	0d 92       	st	X+, r0
     f56:	0e b6       	in	r0, 0x3e	; 62
     f58:	0d 92       	st	X+, r0
     f5a:	13 be       	out	0x33, r1	; 51
     f5c:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <xTaskIncrementTick>
     f60:	81 11       	cpse	r24, r1
     f62:	0e 94 6e 12 	call	0x24dc	; 0x24dc <vTaskSwitchContext>
     f66:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
     f6a:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
     f6e:	cd 91       	ld	r28, X+
     f70:	cd bf       	out	0x3d, r28	; 61
     f72:	dd 91       	ld	r29, X+
     f74:	de bf       	out	0x3e, r29	; 62
     f76:	ff 91       	pop	r31
     f78:	ef 91       	pop	r30
     f7a:	df 91       	pop	r29
     f7c:	cf 91       	pop	r28
     f7e:	bf 91       	pop	r27
     f80:	af 91       	pop	r26
     f82:	9f 91       	pop	r25
     f84:	8f 91       	pop	r24
     f86:	7f 91       	pop	r23
     f88:	6f 91       	pop	r22
     f8a:	5f 91       	pop	r21
     f8c:	4f 91       	pop	r20
     f8e:	3f 91       	pop	r19
     f90:	2f 91       	pop	r18
     f92:	1f 91       	pop	r17
     f94:	0f 91       	pop	r16
     f96:	ff 90       	pop	r15
     f98:	ef 90       	pop	r14
     f9a:	df 90       	pop	r13
     f9c:	cf 90       	pop	r12
     f9e:	bf 90       	pop	r11
     fa0:	af 90       	pop	r10
     fa2:	9f 90       	pop	r9
     fa4:	8f 90       	pop	r8
     fa6:	7f 90       	pop	r7
     fa8:	6f 90       	pop	r6
     faa:	5f 90       	pop	r5
     fac:	4f 90       	pop	r4
     fae:	3f 90       	pop	r3
     fb0:	2f 90       	pop	r2
     fb2:	1f 90       	pop	r1
     fb4:	0f 90       	pop	r0
     fb6:	0c be       	out	0x3c, r0	; 60
     fb8:	0f 90       	pop	r0
     fba:	0b be       	out	0x3b, r0	; 59
     fbc:	0f 90       	pop	r0
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	0f 90       	pop	r0
     fc2:	08 95       	ret

00000fc4 <__vector_12>:
     fc4:	9a df       	rcall	.-204    	; 0xefa <vPortYieldFromTick>
     fc6:	18 95       	reti

00000fc8 <prvIsQueueEmpty>:
     fc8:	0f b6       	in	r0, 0x3f	; 63
     fca:	f8 94       	cli
     fcc:	0f 92       	push	r0
     fce:	fc 01       	movw	r30, r24
     fd0:	86 8d       	ldd	r24, Z+30	; 0x1e
     fd2:	81 11       	cpse	r24, r1
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <prvIsQueueEmpty+0x12>
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	01 c0       	rjmp	.+2      	; 0xfdc <prvIsQueueEmpty+0x14>
     fda:	80 e0       	ldi	r24, 0x00	; 0
     fdc:	0f 90       	pop	r0
     fde:	0f be       	out	0x3f, r0	; 63
     fe0:	08 95       	ret

00000fe2 <prvIsQueueFull>:
     fe2:	0f b6       	in	r0, 0x3f	; 63
     fe4:	f8 94       	cli
     fe6:	0f 92       	push	r0
     fe8:	fc 01       	movw	r30, r24
     fea:	26 8d       	ldd	r18, Z+30	; 0x1e
     fec:	87 8d       	ldd	r24, Z+31	; 0x1f
     fee:	28 13       	cpse	r18, r24
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <prvIsQueueFull+0x14>
     ff2:	81 e0       	ldi	r24, 0x01	; 1
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <prvIsQueueFull+0x16>
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	08 95       	ret

00000ffe <prvCopyDataToQueue>:
     ffe:	0f 93       	push	r16
    1000:	1f 93       	push	r17
    1002:	cf 93       	push	r28
    1004:	df 93       	push	r29
    1006:	ec 01       	movw	r28, r24
    1008:	04 2f       	mov	r16, r20
    100a:	1e 8d       	ldd	r17, Y+30	; 0x1e
    100c:	48 a1       	ldd	r20, Y+32	; 0x20
    100e:	41 11       	cpse	r20, r1
    1010:	0c c0       	rjmp	.+24     	; 0x102a <__EEPROM_REGION_LENGTH__+0x2a>
    1012:	88 81       	ld	r24, Y
    1014:	99 81       	ldd	r25, Y+1	; 0x01
    1016:	89 2b       	or	r24, r25
    1018:	09 f0       	breq	.+2      	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
    101a:	42 c0       	rjmp	.+132    	; 0x10a0 <__EEPROM_REGION_LENGTH__+0xa0>
    101c:	8c 81       	ldd	r24, Y+4	; 0x04
    101e:	9d 81       	ldd	r25, Y+5	; 0x05
    1020:	0e 94 56 15 	call	0x2aac	; 0x2aac <xTaskPriorityDisinherit>
    1024:	1d 82       	std	Y+5, r1	; 0x05
    1026:	1c 82       	std	Y+4, r1	; 0x04
    1028:	42 c0       	rjmp	.+132    	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    102a:	01 11       	cpse	r16, r1
    102c:	17 c0       	rjmp	.+46     	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    102e:	50 e0       	ldi	r21, 0x00	; 0
    1030:	8a 81       	ldd	r24, Y+2	; 0x02
    1032:	9b 81       	ldd	r25, Y+3	; 0x03
    1034:	0e 94 fc 29 	call	0x53f8	; 0x53f8 <memcpy>
    1038:	28 a1       	ldd	r18, Y+32	; 0x20
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	9b 81       	ldd	r25, Y+3	; 0x03
    103e:	82 0f       	add	r24, r18
    1040:	91 1d       	adc	r25, r1
    1042:	9b 83       	std	Y+3, r25	; 0x03
    1044:	8a 83       	std	Y+2, r24	; 0x02
    1046:	2c 81       	ldd	r18, Y+4	; 0x04
    1048:	3d 81       	ldd	r19, Y+5	; 0x05
    104a:	82 17       	cp	r24, r18
    104c:	93 07       	cpc	r25, r19
    104e:	50 f1       	brcs	.+84     	; 0x10a4 <__EEPROM_REGION_LENGTH__+0xa4>
    1050:	88 81       	ld	r24, Y
    1052:	99 81       	ldd	r25, Y+1	; 0x01
    1054:	9b 83       	std	Y+3, r25	; 0x03
    1056:	8a 83       	std	Y+2, r24	; 0x02
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	29 c0       	rjmp	.+82     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    105c:	50 e0       	ldi	r21, 0x00	; 0
    105e:	8e 81       	ldd	r24, Y+6	; 0x06
    1060:	9f 81       	ldd	r25, Y+7	; 0x07
    1062:	0e 94 fc 29 	call	0x53f8	; 0x53f8 <memcpy>
    1066:	88 a1       	ldd	r24, Y+32	; 0x20
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	91 95       	neg	r25
    106c:	81 95       	neg	r24
    106e:	91 09       	sbc	r25, r1
    1070:	2e 81       	ldd	r18, Y+6	; 0x06
    1072:	3f 81       	ldd	r19, Y+7	; 0x07
    1074:	28 0f       	add	r18, r24
    1076:	39 1f       	adc	r19, r25
    1078:	3f 83       	std	Y+7, r19	; 0x07
    107a:	2e 83       	std	Y+6, r18	; 0x06
    107c:	48 81       	ld	r20, Y
    107e:	59 81       	ldd	r21, Y+1	; 0x01
    1080:	24 17       	cp	r18, r20
    1082:	35 07       	cpc	r19, r21
    1084:	30 f4       	brcc	.+12     	; 0x1092 <__EEPROM_REGION_LENGTH__+0x92>
    1086:	2c 81       	ldd	r18, Y+4	; 0x04
    1088:	3d 81       	ldd	r19, Y+5	; 0x05
    108a:	82 0f       	add	r24, r18
    108c:	93 1f       	adc	r25, r19
    108e:	9f 83       	std	Y+7, r25	; 0x07
    1090:	8e 83       	std	Y+6, r24	; 0x06
    1092:	02 30       	cpi	r16, 0x02	; 2
    1094:	49 f4       	brne	.+18     	; 0x10a8 <__EEPROM_REGION_LENGTH__+0xa8>
    1096:	11 23       	and	r17, r17
    1098:	49 f0       	breq	.+18     	; 0x10ac <__EEPROM_REGION_LENGTH__+0xac>
    109a:	11 50       	subi	r17, 0x01	; 1
    109c:	80 e0       	ldi	r24, 0x00	; 0
    109e:	07 c0       	rjmp	.+14     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10a0:	80 e0       	ldi	r24, 0x00	; 0
    10a2:	05 c0       	rjmp	.+10     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	03 c0       	rjmp	.+6      	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	1f 5f       	subi	r17, 0xFF	; 255
    10b0:	1e 8f       	std	Y+30, r17	; 0x1e
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	1f 91       	pop	r17
    10b8:	0f 91       	pop	r16
    10ba:	08 95       	ret

000010bc <prvCopyDataFromQueue>:
    10bc:	fc 01       	movw	r30, r24
    10be:	40 a1       	ldd	r20, Z+32	; 0x20
    10c0:	44 23       	and	r20, r20
    10c2:	a9 f0       	breq	.+42     	; 0x10ee <prvCopyDataFromQueue+0x32>
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	26 81       	ldd	r18, Z+6	; 0x06
    10c8:	37 81       	ldd	r19, Z+7	; 0x07
    10ca:	24 0f       	add	r18, r20
    10cc:	35 1f       	adc	r19, r21
    10ce:	37 83       	std	Z+7, r19	; 0x07
    10d0:	26 83       	std	Z+6, r18	; 0x06
    10d2:	84 81       	ldd	r24, Z+4	; 0x04
    10d4:	95 81       	ldd	r25, Z+5	; 0x05
    10d6:	28 17       	cp	r18, r24
    10d8:	39 07       	cpc	r19, r25
    10da:	20 f0       	brcs	.+8      	; 0x10e4 <prvCopyDataFromQueue+0x28>
    10dc:	80 81       	ld	r24, Z
    10de:	91 81       	ldd	r25, Z+1	; 0x01
    10e0:	97 83       	std	Z+7, r25	; 0x07
    10e2:	86 83       	std	Z+6, r24	; 0x06
    10e4:	cb 01       	movw	r24, r22
    10e6:	66 81       	ldd	r22, Z+6	; 0x06
    10e8:	77 81       	ldd	r23, Z+7	; 0x07
    10ea:	0c 94 fc 29 	jmp	0x53f8	; 0x53f8 <memcpy>
    10ee:	08 95       	ret

000010f0 <prvUnlockQueue>:
    10f0:	1f 93       	push	r17
    10f2:	cf 93       	push	r28
    10f4:	df 93       	push	r29
    10f6:	ec 01       	movw	r28, r24
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	f8 94       	cli
    10fc:	0f 92       	push	r0
    10fe:	1a a1       	ldd	r17, Y+34	; 0x22
    1100:	0b c0       	rjmp	.+22     	; 0x1118 <prvUnlockQueue+0x28>
    1102:	8b 89       	ldd	r24, Y+19	; 0x13
    1104:	88 23       	and	r24, r24
    1106:	51 f0       	breq	.+20     	; 0x111c <prvUnlockQueue+0x2c>
    1108:	ce 01       	movw	r24, r28
    110a:	43 96       	adiw	r24, 0x13	; 19
    110c:	0e 94 76 13 	call	0x26ec	; 0x26ec <xTaskRemoveFromEventList>
    1110:	81 11       	cpse	r24, r1
    1112:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <vTaskMissedYield>
    1116:	11 50       	subi	r17, 0x01	; 1
    1118:	11 16       	cp	r1, r17
    111a:	9c f3       	brlt	.-26     	; 0x1102 <prvUnlockQueue+0x12>
    111c:	8f ef       	ldi	r24, 0xFF	; 255
    111e:	8a a3       	std	Y+34, r24	; 0x22
    1120:	0f 90       	pop	r0
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	0f b6       	in	r0, 0x3f	; 63
    1126:	f8 94       	cli
    1128:	0f 92       	push	r0
    112a:	19 a1       	ldd	r17, Y+33	; 0x21
    112c:	0b c0       	rjmp	.+22     	; 0x1144 <prvUnlockQueue+0x54>
    112e:	88 85       	ldd	r24, Y+8	; 0x08
    1130:	88 23       	and	r24, r24
    1132:	51 f0       	breq	.+20     	; 0x1148 <prvUnlockQueue+0x58>
    1134:	ce 01       	movw	r24, r28
    1136:	08 96       	adiw	r24, 0x08	; 8
    1138:	0e 94 76 13 	call	0x26ec	; 0x26ec <xTaskRemoveFromEventList>
    113c:	81 11       	cpse	r24, r1
    113e:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <vTaskMissedYield>
    1142:	11 50       	subi	r17, 0x01	; 1
    1144:	11 16       	cp	r1, r17
    1146:	9c f3       	brlt	.-26     	; 0x112e <prvUnlockQueue+0x3e>
    1148:	8f ef       	ldi	r24, 0xFF	; 255
    114a:	89 a3       	std	Y+33, r24	; 0x21
    114c:	0f 90       	pop	r0
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	df 91       	pop	r29
    1152:	cf 91       	pop	r28
    1154:	1f 91       	pop	r17
    1156:	08 95       	ret

00001158 <xQueueGenericReset>:
    1158:	cf 93       	push	r28
    115a:	df 93       	push	r29
    115c:	ec 01       	movw	r28, r24
    115e:	0f b6       	in	r0, 0x3f	; 63
    1160:	f8 94       	cli
    1162:	0f 92       	push	r0
    1164:	e8 81       	ld	r30, Y
    1166:	f9 81       	ldd	r31, Y+1	; 0x01
    1168:	8f 8d       	ldd	r24, Y+31	; 0x1f
    116a:	28 a1       	ldd	r18, Y+32	; 0x20
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	82 9f       	mul	r24, r18
    1172:	a0 01       	movw	r20, r0
    1174:	83 9f       	mul	r24, r19
    1176:	50 0d       	add	r21, r0
    1178:	92 9f       	mul	r25, r18
    117a:	50 0d       	add	r21, r0
    117c:	11 24       	eor	r1, r1
    117e:	4e 0f       	add	r20, r30
    1180:	5f 1f       	adc	r21, r31
    1182:	5d 83       	std	Y+5, r21	; 0x05
    1184:	4c 83       	std	Y+4, r20	; 0x04
    1186:	1e 8e       	std	Y+30, r1	; 0x1e
    1188:	fb 83       	std	Y+3, r31	; 0x03
    118a:	ea 83       	std	Y+2, r30	; 0x02
    118c:	01 97       	sbiw	r24, 0x01	; 1
    118e:	28 9f       	mul	r18, r24
    1190:	a0 01       	movw	r20, r0
    1192:	29 9f       	mul	r18, r25
    1194:	50 0d       	add	r21, r0
    1196:	38 9f       	mul	r19, r24
    1198:	50 0d       	add	r21, r0
    119a:	11 24       	eor	r1, r1
    119c:	cf 01       	movw	r24, r30
    119e:	84 0f       	add	r24, r20
    11a0:	95 1f       	adc	r25, r21
    11a2:	9f 83       	std	Y+7, r25	; 0x07
    11a4:	8e 83       	std	Y+6, r24	; 0x06
    11a6:	8f ef       	ldi	r24, 0xFF	; 255
    11a8:	89 a3       	std	Y+33, r24	; 0x21
    11aa:	8a a3       	std	Y+34, r24	; 0x22
    11ac:	61 11       	cpse	r22, r1
    11ae:	0b c0       	rjmp	.+22     	; 0x11c6 <xQueueGenericReset+0x6e>
    11b0:	88 85       	ldd	r24, Y+8	; 0x08
    11b2:	88 23       	and	r24, r24
    11b4:	71 f0       	breq	.+28     	; 0x11d2 <xQueueGenericReset+0x7a>
    11b6:	ce 01       	movw	r24, r28
    11b8:	08 96       	adiw	r24, 0x08	; 8
    11ba:	0e 94 76 13 	call	0x26ec	; 0x26ec <xTaskRemoveFromEventList>
    11be:	88 23       	and	r24, r24
    11c0:	41 f0       	breq	.+16     	; 0x11d2 <xQueueGenericReset+0x7a>
    11c2:	3a de       	rcall	.-908    	; 0xe38 <vPortYield>
    11c4:	06 c0       	rjmp	.+12     	; 0x11d2 <xQueueGenericReset+0x7a>
    11c6:	ce 01       	movw	r24, r28
    11c8:	08 96       	adiw	r24, 0x08	; 8
    11ca:	68 dd       	rcall	.-1328   	; 0xc9c <vListInitialise>
    11cc:	ce 01       	movw	r24, r28
    11ce:	43 96       	adiw	r24, 0x13	; 19
    11d0:	65 dd       	rcall	.-1334   	; 0xc9c <vListInitialise>
    11d2:	0f 90       	pop	r0
    11d4:	0f be       	out	0x3f, r0	; 63
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	08 95       	ret

000011de <prvInitialiseNewQueue>:
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    11e2:	f8 01       	movw	r30, r16
    11e4:	61 11       	cpse	r22, r1
    11e6:	03 c0       	rjmp	.+6      	; 0x11ee <prvInitialiseNewQueue+0x10>
    11e8:	11 83       	std	Z+1, r17	; 0x01
    11ea:	00 83       	st	Z, r16
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <prvInitialiseNewQueue+0x14>
    11ee:	51 83       	std	Z+1, r21	; 0x01
    11f0:	40 83       	st	Z, r20
    11f2:	87 8f       	std	Z+31, r24	; 0x1f
    11f4:	60 a3       	std	Z+32, r22	; 0x20
    11f6:	61 e0       	ldi	r22, 0x01	; 1
    11f8:	cf 01       	movw	r24, r30
    11fa:	ae df       	rcall	.-164    	; 0x1158 <xQueueGenericReset>
    11fc:	1f 91       	pop	r17
    11fe:	0f 91       	pop	r16
    1200:	08 95       	ret

00001202 <xQueueGenericCreate>:
    1202:	df 92       	push	r13
    1204:	ef 92       	push	r14
    1206:	ff 92       	push	r15
    1208:	0f 93       	push	r16
    120a:	1f 93       	push	r17
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	f8 2e       	mov	r15, r24
    1212:	e6 2e       	mov	r14, r22
    1214:	d4 2e       	mov	r13, r20
    1216:	86 9f       	mul	r24, r22
    1218:	c0 01       	movw	r24, r0
    121a:	11 24       	eor	r1, r1
    121c:	83 96       	adiw	r24, 0x23	; 35
    121e:	58 dc       	rcall	.-1872   	; 0xad0 <pvPortMalloc>
    1220:	ec 01       	movw	r28, r24
    1222:	00 97       	sbiw	r24, 0x00	; 0
    1224:	41 f0       	breq	.+16     	; 0x1236 <xQueueGenericCreate+0x34>
    1226:	8c 01       	movw	r16, r24
    1228:	2d 2d       	mov	r18, r13
    122a:	ac 01       	movw	r20, r24
    122c:	4d 5d       	subi	r20, 0xDD	; 221
    122e:	5f 4f       	sbci	r21, 0xFF	; 255
    1230:	6e 2d       	mov	r22, r14
    1232:	8f 2d       	mov	r24, r15
    1234:	d4 df       	rcall	.-88     	; 0x11de <prvInitialiseNewQueue>
    1236:	ce 01       	movw	r24, r28
    1238:	df 91       	pop	r29
    123a:	cf 91       	pop	r28
    123c:	1f 91       	pop	r17
    123e:	0f 91       	pop	r16
    1240:	ff 90       	pop	r15
    1242:	ef 90       	pop	r14
    1244:	df 90       	pop	r13
    1246:	08 95       	ret

00001248 <xQueueGenericSend>:
    1248:	cf 92       	push	r12
    124a:	df 92       	push	r13
    124c:	ef 92       	push	r14
    124e:	ff 92       	push	r15
    1250:	0f 93       	push	r16
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	cd b7       	in	r28, 0x3d	; 61
    125a:	de b7       	in	r29, 0x3e	; 62
    125c:	29 97       	sbiw	r28, 0x09	; 9
    125e:	0f b6       	in	r0, 0x3f	; 63
    1260:	f8 94       	cli
    1262:	de bf       	out	0x3e, r29	; 62
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	cd bf       	out	0x3d, r28	; 61
    1268:	7c 01       	movw	r14, r24
    126a:	6b 01       	movw	r12, r22
    126c:	2e 83       	std	Y+6, r18	; 0x06
    126e:	3f 83       	std	Y+7, r19	; 0x07
    1270:	48 87       	std	Y+8, r20	; 0x08
    1272:	59 87       	std	Y+9, r21	; 0x09
    1274:	10 e0       	ldi	r17, 0x00	; 0
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	f8 94       	cli
    127a:	0f 92       	push	r0
    127c:	f7 01       	movw	r30, r14
    127e:	96 8d       	ldd	r25, Z+30	; 0x1e
    1280:	87 8d       	ldd	r24, Z+31	; 0x1f
    1282:	98 17       	cp	r25, r24
    1284:	10 f0       	brcs	.+4      	; 0x128a <xQueueGenericSend+0x42>
    1286:	02 30       	cpi	r16, 0x02	; 2
    1288:	b1 f4       	brne	.+44     	; 0x12b6 <xQueueGenericSend+0x6e>
    128a:	40 2f       	mov	r20, r16
    128c:	b6 01       	movw	r22, r12
    128e:	c7 01       	movw	r24, r14
    1290:	b6 de       	rcall	.-660    	; 0xffe <prvCopyDataToQueue>
    1292:	f7 01       	movw	r30, r14
    1294:	93 89       	ldd	r25, Z+19	; 0x13
    1296:	99 23       	and	r25, r25
    1298:	41 f0       	breq	.+16     	; 0x12aa <xQueueGenericSend+0x62>
    129a:	c7 01       	movw	r24, r14
    129c:	43 96       	adiw	r24, 0x13	; 19
    129e:	0e 94 76 13 	call	0x26ec	; 0x26ec <xTaskRemoveFromEventList>
    12a2:	88 23       	and	r24, r24
    12a4:	21 f0       	breq	.+8      	; 0x12ae <xQueueGenericSend+0x66>
    12a6:	c8 dd       	rcall	.-1136   	; 0xe38 <vPortYield>
    12a8:	02 c0       	rjmp	.+4      	; 0x12ae <xQueueGenericSend+0x66>
    12aa:	81 11       	cpse	r24, r1
    12ac:	c5 dd       	rcall	.-1142   	; 0xe38 <vPortYield>
    12ae:	0f 90       	pop	r0
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	49 c0       	rjmp	.+146    	; 0x1348 <xQueueGenericSend+0x100>
    12b6:	8e 81       	ldd	r24, Y+6	; 0x06
    12b8:	9f 81       	ldd	r25, Y+7	; 0x07
    12ba:	a8 85       	ldd	r26, Y+8	; 0x08
    12bc:	b9 85       	ldd	r27, Y+9	; 0x09
    12be:	89 2b       	or	r24, r25
    12c0:	8a 2b       	or	r24, r26
    12c2:	8b 2b       	or	r24, r27
    12c4:	21 f4       	brne	.+8      	; 0x12ce <xQueueGenericSend+0x86>
    12c6:	0f 90       	pop	r0
    12c8:	0f be       	out	0x3f, r0	; 63
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	3d c0       	rjmp	.+122    	; 0x1348 <xQueueGenericSend+0x100>
    12ce:	11 11       	cpse	r17, r1
    12d0:	05 c0       	rjmp	.+10     	; 0x12dc <xQueueGenericSend+0x94>
    12d2:	ce 01       	movw	r24, r28
    12d4:	01 96       	adiw	r24, 0x01	; 1
    12d6:	0e 94 d5 14 	call	0x29aa	; 0x29aa <vTaskInternalSetTimeOutState>
    12da:	11 e0       	ldi	r17, 0x01	; 1
    12dc:	0f 90       	pop	r0
    12de:	0f be       	out	0x3f, r0	; 63
    12e0:	61 d6       	rcall	.+3266   	; 0x1fa4 <vTaskSuspendAll>
    12e2:	0f b6       	in	r0, 0x3f	; 63
    12e4:	f8 94       	cli
    12e6:	0f 92       	push	r0
    12e8:	f7 01       	movw	r30, r14
    12ea:	81 a1       	ldd	r24, Z+33	; 0x21
    12ec:	8f 3f       	cpi	r24, 0xFF	; 255
    12ee:	09 f4       	brne	.+2      	; 0x12f2 <xQueueGenericSend+0xaa>
    12f0:	11 a2       	std	Z+33, r1	; 0x21
    12f2:	f7 01       	movw	r30, r14
    12f4:	82 a1       	ldd	r24, Z+34	; 0x22
    12f6:	8f 3f       	cpi	r24, 0xFF	; 255
    12f8:	09 f4       	brne	.+2      	; 0x12fc <xQueueGenericSend+0xb4>
    12fa:	12 a2       	std	Z+34, r1	; 0x22
    12fc:	0f 90       	pop	r0
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	be 01       	movw	r22, r28
    1302:	6a 5f       	subi	r22, 0xFA	; 250
    1304:	7f 4f       	sbci	r23, 0xFF	; 255
    1306:	ce 01       	movw	r24, r28
    1308:	01 96       	adiw	r24, 0x01	; 1
    130a:	0e 94 e6 14 	call	0x29cc	; 0x29cc <xTaskCheckForTimeOut>
    130e:	81 11       	cpse	r24, r1
    1310:	17 c0       	rjmp	.+46     	; 0x1340 <xQueueGenericSend+0xf8>
    1312:	c7 01       	movw	r24, r14
    1314:	66 de       	rcall	.-820    	; 0xfe2 <prvIsQueueFull>
    1316:	88 23       	and	r24, r24
    1318:	79 f0       	breq	.+30     	; 0x1338 <xQueueGenericSend+0xf0>
    131a:	4e 81       	ldd	r20, Y+6	; 0x06
    131c:	5f 81       	ldd	r21, Y+7	; 0x07
    131e:	68 85       	ldd	r22, Y+8	; 0x08
    1320:	79 85       	ldd	r23, Y+9	; 0x09
    1322:	c7 01       	movw	r24, r14
    1324:	08 96       	adiw	r24, 0x08	; 8
    1326:	0e 94 d3 12 	call	0x25a6	; 0x25a6 <vTaskPlaceOnEventList>
    132a:	c7 01       	movw	r24, r14
    132c:	e1 de       	rcall	.-574    	; 0x10f0 <prvUnlockQueue>
    132e:	7a d7       	rcall	.+3828   	; 0x2224 <xTaskResumeAll>
    1330:	81 11       	cpse	r24, r1
    1332:	a1 cf       	rjmp	.-190    	; 0x1276 <xQueueGenericSend+0x2e>
    1334:	81 dd       	rcall	.-1278   	; 0xe38 <vPortYield>
    1336:	9f cf       	rjmp	.-194    	; 0x1276 <xQueueGenericSend+0x2e>
    1338:	c7 01       	movw	r24, r14
    133a:	da de       	rcall	.-588    	; 0x10f0 <prvUnlockQueue>
    133c:	73 d7       	rcall	.+3814   	; 0x2224 <xTaskResumeAll>
    133e:	9b cf       	rjmp	.-202    	; 0x1276 <xQueueGenericSend+0x2e>
    1340:	c7 01       	movw	r24, r14
    1342:	d6 de       	rcall	.-596    	; 0x10f0 <prvUnlockQueue>
    1344:	6f d7       	rcall	.+3806   	; 0x2224 <xTaskResumeAll>
    1346:	80 e0       	ldi	r24, 0x00	; 0
    1348:	29 96       	adiw	r28, 0x09	; 9
    134a:	0f b6       	in	r0, 0x3f	; 63
    134c:	f8 94       	cli
    134e:	de bf       	out	0x3e, r29	; 62
    1350:	0f be       	out	0x3f, r0	; 63
    1352:	cd bf       	out	0x3d, r28	; 61
    1354:	df 91       	pop	r29
    1356:	cf 91       	pop	r28
    1358:	1f 91       	pop	r17
    135a:	0f 91       	pop	r16
    135c:	ff 90       	pop	r15
    135e:	ef 90       	pop	r14
    1360:	df 90       	pop	r13
    1362:	cf 90       	pop	r12
    1364:	08 95       	ret

00001366 <xQueueGenericSendFromISR>:
    1366:	ef 92       	push	r14
    1368:	ff 92       	push	r15
    136a:	0f 93       	push	r16
    136c:	1f 93       	push	r17
    136e:	cf 93       	push	r28
    1370:	df 93       	push	r29
    1372:	8a 01       	movw	r16, r20
    1374:	fc 01       	movw	r30, r24
    1376:	56 8d       	ldd	r21, Z+30	; 0x1e
    1378:	37 8d       	ldd	r19, Z+31	; 0x1f
    137a:	53 17       	cp	r21, r19
    137c:	10 f0       	brcs	.+4      	; 0x1382 <xQueueGenericSendFromISR+0x1c>
    137e:	22 30       	cpi	r18, 0x02	; 2
    1380:	f9 f4       	brne	.+62     	; 0x13c0 <xQueueGenericSendFromISR+0x5a>
    1382:	42 2f       	mov	r20, r18
    1384:	78 01       	movw	r14, r16
    1386:	ec 01       	movw	r28, r24
    1388:	1a a1       	ldd	r17, Y+34	; 0x22
    138a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    138c:	ce 01       	movw	r24, r28
    138e:	37 de       	rcall	.-914    	; 0xffe <prvCopyDataToQueue>
    1390:	1f 3f       	cpi	r17, 0xFF	; 255
    1392:	81 f4       	brne	.+32     	; 0x13b4 <xQueueGenericSendFromISR+0x4e>
    1394:	8b 89       	ldd	r24, Y+19	; 0x13
    1396:	88 23       	and	r24, r24
    1398:	a9 f0       	breq	.+42     	; 0x13c4 <xQueueGenericSendFromISR+0x5e>
    139a:	ce 01       	movw	r24, r28
    139c:	43 96       	adiw	r24, 0x13	; 19
    139e:	0e 94 76 13 	call	0x26ec	; 0x26ec <xTaskRemoveFromEventList>
    13a2:	88 23       	and	r24, r24
    13a4:	89 f0       	breq	.+34     	; 0x13c8 <xQueueGenericSendFromISR+0x62>
    13a6:	e1 14       	cp	r14, r1
    13a8:	f1 04       	cpc	r15, r1
    13aa:	81 f0       	breq	.+32     	; 0x13cc <xQueueGenericSendFromISR+0x66>
    13ac:	81 e0       	ldi	r24, 0x01	; 1
    13ae:	f7 01       	movw	r30, r14
    13b0:	80 83       	st	Z, r24
    13b2:	0d c0       	rjmp	.+26     	; 0x13ce <xQueueGenericSendFromISR+0x68>
    13b4:	ff 24       	eor	r15, r15
    13b6:	f3 94       	inc	r15
    13b8:	f1 0e       	add	r15, r17
    13ba:	fa a2       	std	Y+34, r15	; 0x22
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	07 c0       	rjmp	.+14     	; 0x13ce <xQueueGenericSendFromISR+0x68>
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	05 c0       	rjmp	.+10     	; 0x13ce <xQueueGenericSendFromISR+0x68>
    13c4:	81 e0       	ldi	r24, 0x01	; 1
    13c6:	03 c0       	rjmp	.+6      	; 0x13ce <xQueueGenericSendFromISR+0x68>
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	01 c0       	rjmp	.+2      	; 0x13ce <xQueueGenericSendFromISR+0x68>
    13cc:	81 e0       	ldi	r24, 0x01	; 1
    13ce:	df 91       	pop	r29
    13d0:	cf 91       	pop	r28
    13d2:	1f 91       	pop	r17
    13d4:	0f 91       	pop	r16
    13d6:	ff 90       	pop	r15
    13d8:	ef 90       	pop	r14
    13da:	08 95       	ret

000013dc <xQueueReceive>:
    13dc:	cf 92       	push	r12
    13de:	df 92       	push	r13
    13e0:	ef 92       	push	r14
    13e2:	ff 92       	push	r15
    13e4:	0f 93       	push	r16
    13e6:	1f 93       	push	r17
    13e8:	cf 93       	push	r28
    13ea:	df 93       	push	r29
    13ec:	cd b7       	in	r28, 0x3d	; 61
    13ee:	de b7       	in	r29, 0x3e	; 62
    13f0:	29 97       	sbiw	r28, 0x09	; 9
    13f2:	0f b6       	in	r0, 0x3f	; 63
    13f4:	f8 94       	cli
    13f6:	de bf       	out	0x3e, r29	; 62
    13f8:	0f be       	out	0x3f, r0	; 63
    13fa:	cd bf       	out	0x3d, r28	; 61
    13fc:	8c 01       	movw	r16, r24
    13fe:	6b 01       	movw	r12, r22
    1400:	2e 83       	std	Y+6, r18	; 0x06
    1402:	3f 83       	std	Y+7, r19	; 0x07
    1404:	48 87       	std	Y+8, r20	; 0x08
    1406:	59 87       	std	Y+9, r21	; 0x09
    1408:	e1 2c       	mov	r14, r1
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	0f 92       	push	r0
    1410:	f8 01       	movw	r30, r16
    1412:	f6 8c       	ldd	r15, Z+30	; 0x1e
    1414:	ff 20       	and	r15, r15
    1416:	99 f0       	breq	.+38     	; 0x143e <xQueueReceive+0x62>
    1418:	b6 01       	movw	r22, r12
    141a:	c8 01       	movw	r24, r16
    141c:	4f de       	rcall	.-866    	; 0x10bc <prvCopyDataFromQueue>
    141e:	fa 94       	dec	r15
    1420:	f8 01       	movw	r30, r16
    1422:	f6 8e       	std	Z+30, r15	; 0x1e
    1424:	80 85       	ldd	r24, Z+8	; 0x08
    1426:	88 23       	and	r24, r24
    1428:	31 f0       	breq	.+12     	; 0x1436 <xQueueReceive+0x5a>
    142a:	c8 01       	movw	r24, r16
    142c:	08 96       	adiw	r24, 0x08	; 8
    142e:	0e 94 76 13 	call	0x26ec	; 0x26ec <xTaskRemoveFromEventList>
    1432:	81 11       	cpse	r24, r1
    1434:	01 dd       	rcall	.-1534   	; 0xe38 <vPortYield>
    1436:	0f 90       	pop	r0
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	4f c0       	rjmp	.+158    	; 0x14dc <xQueueReceive+0x100>
    143e:	8e 81       	ldd	r24, Y+6	; 0x06
    1440:	9f 81       	ldd	r25, Y+7	; 0x07
    1442:	a8 85       	ldd	r26, Y+8	; 0x08
    1444:	b9 85       	ldd	r27, Y+9	; 0x09
    1446:	89 2b       	or	r24, r25
    1448:	8a 2b       	or	r24, r26
    144a:	8b 2b       	or	r24, r27
    144c:	21 f4       	brne	.+8      	; 0x1456 <xQueueReceive+0x7a>
    144e:	0f 90       	pop	r0
    1450:	0f be       	out	0x3f, r0	; 63
    1452:	80 e0       	ldi	r24, 0x00	; 0
    1454:	43 c0       	rjmp	.+134    	; 0x14dc <xQueueReceive+0x100>
    1456:	e1 10       	cpse	r14, r1
    1458:	06 c0       	rjmp	.+12     	; 0x1466 <xQueueReceive+0x8a>
    145a:	ce 01       	movw	r24, r28
    145c:	01 96       	adiw	r24, 0x01	; 1
    145e:	0e 94 d5 14 	call	0x29aa	; 0x29aa <vTaskInternalSetTimeOutState>
    1462:	ee 24       	eor	r14, r14
    1464:	e3 94       	inc	r14
    1466:	0f 90       	pop	r0
    1468:	0f be       	out	0x3f, r0	; 63
    146a:	9c d5       	rcall	.+2872   	; 0x1fa4 <vTaskSuspendAll>
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	0f 92       	push	r0
    1472:	f8 01       	movw	r30, r16
    1474:	81 a1       	ldd	r24, Z+33	; 0x21
    1476:	8f 3f       	cpi	r24, 0xFF	; 255
    1478:	09 f4       	brne	.+2      	; 0x147c <xQueueReceive+0xa0>
    147a:	11 a2       	std	Z+33, r1	; 0x21
    147c:	f8 01       	movw	r30, r16
    147e:	82 a1       	ldd	r24, Z+34	; 0x22
    1480:	8f 3f       	cpi	r24, 0xFF	; 255
    1482:	09 f4       	brne	.+2      	; 0x1486 <xQueueReceive+0xaa>
    1484:	12 a2       	std	Z+34, r1	; 0x22
    1486:	0f 90       	pop	r0
    1488:	0f be       	out	0x3f, r0	; 63
    148a:	be 01       	movw	r22, r28
    148c:	6a 5f       	subi	r22, 0xFA	; 250
    148e:	7f 4f       	sbci	r23, 0xFF	; 255
    1490:	ce 01       	movw	r24, r28
    1492:	01 96       	adiw	r24, 0x01	; 1
    1494:	0e 94 e6 14 	call	0x29cc	; 0x29cc <xTaskCheckForTimeOut>
    1498:	81 11       	cpse	r24, r1
    149a:	17 c0       	rjmp	.+46     	; 0x14ca <xQueueReceive+0xee>
    149c:	c8 01       	movw	r24, r16
    149e:	94 dd       	rcall	.-1240   	; 0xfc8 <prvIsQueueEmpty>
    14a0:	88 23       	and	r24, r24
    14a2:	79 f0       	breq	.+30     	; 0x14c2 <xQueueReceive+0xe6>
    14a4:	4e 81       	ldd	r20, Y+6	; 0x06
    14a6:	5f 81       	ldd	r21, Y+7	; 0x07
    14a8:	68 85       	ldd	r22, Y+8	; 0x08
    14aa:	79 85       	ldd	r23, Y+9	; 0x09
    14ac:	c8 01       	movw	r24, r16
    14ae:	43 96       	adiw	r24, 0x13	; 19
    14b0:	0e 94 d3 12 	call	0x25a6	; 0x25a6 <vTaskPlaceOnEventList>
    14b4:	c8 01       	movw	r24, r16
    14b6:	1c de       	rcall	.-968    	; 0x10f0 <prvUnlockQueue>
    14b8:	b5 d6       	rcall	.+3434   	; 0x2224 <xTaskResumeAll>
    14ba:	81 11       	cpse	r24, r1
    14bc:	a6 cf       	rjmp	.-180    	; 0x140a <xQueueReceive+0x2e>
    14be:	bc dc       	rcall	.-1672   	; 0xe38 <vPortYield>
    14c0:	a4 cf       	rjmp	.-184    	; 0x140a <xQueueReceive+0x2e>
    14c2:	c8 01       	movw	r24, r16
    14c4:	15 de       	rcall	.-982    	; 0x10f0 <prvUnlockQueue>
    14c6:	ae d6       	rcall	.+3420   	; 0x2224 <xTaskResumeAll>
    14c8:	a0 cf       	rjmp	.-192    	; 0x140a <xQueueReceive+0x2e>
    14ca:	c8 01       	movw	r24, r16
    14cc:	11 de       	rcall	.-990    	; 0x10f0 <prvUnlockQueue>
    14ce:	aa d6       	rcall	.+3412   	; 0x2224 <xTaskResumeAll>
    14d0:	c8 01       	movw	r24, r16
    14d2:	7a dd       	rcall	.-1292   	; 0xfc8 <prvIsQueueEmpty>
    14d4:	88 23       	and	r24, r24
    14d6:	09 f4       	brne	.+2      	; 0x14da <xQueueReceive+0xfe>
    14d8:	98 cf       	rjmp	.-208    	; 0x140a <xQueueReceive+0x2e>
    14da:	80 e0       	ldi	r24, 0x00	; 0
    14dc:	29 96       	adiw	r28, 0x09	; 9
    14de:	0f b6       	in	r0, 0x3f	; 63
    14e0:	f8 94       	cli
    14e2:	de bf       	out	0x3e, r29	; 62
    14e4:	0f be       	out	0x3f, r0	; 63
    14e6:	cd bf       	out	0x3d, r28	; 61
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	1f 91       	pop	r17
    14ee:	0f 91       	pop	r16
    14f0:	ff 90       	pop	r15
    14f2:	ef 90       	pop	r14
    14f4:	df 90       	pop	r13
    14f6:	cf 90       	pop	r12
    14f8:	08 95       	ret

000014fa <vQueueWaitForMessageRestricted>:
    14fa:	cf 93       	push	r28
    14fc:	df 93       	push	r29
    14fe:	ec 01       	movw	r28, r24
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	f8 94       	cli
    1504:	0f 92       	push	r0
    1506:	89 a1       	ldd	r24, Y+33	; 0x21
    1508:	8f 3f       	cpi	r24, 0xFF	; 255
    150a:	09 f4       	brne	.+2      	; 0x150e <vQueueWaitForMessageRestricted+0x14>
    150c:	19 a2       	std	Y+33, r1	; 0x21
    150e:	8a a1       	ldd	r24, Y+34	; 0x22
    1510:	8f 3f       	cpi	r24, 0xFF	; 255
    1512:	09 f4       	brne	.+2      	; 0x1516 <vQueueWaitForMessageRestricted+0x1c>
    1514:	1a a2       	std	Y+34, r1	; 0x22
    1516:	0f 90       	pop	r0
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    151c:	81 11       	cpse	r24, r1
    151e:	04 c0       	rjmp	.+8      	; 0x1528 <vQueueWaitForMessageRestricted+0x2e>
    1520:	ce 01       	movw	r24, r28
    1522:	43 96       	adiw	r24, 0x13	; 19
    1524:	0e 94 34 13 	call	0x2668	; 0x2668 <vTaskPlaceOnEventListRestricted>
    1528:	ce 01       	movw	r24, r28
    152a:	e2 dd       	rcall	.-1084   	; 0x10f0 <prvUnlockQueue>
    152c:	df 91       	pop	r29
    152e:	cf 91       	pop	r28
    1530:	08 95       	ret

00001532 <prvBytesInBuffer>:
    1532:	fc 01       	movw	r30, r24
    1534:	44 81       	ldd	r20, Z+4	; 0x04
    1536:	55 81       	ldd	r21, Z+5	; 0x05
    1538:	22 81       	ldd	r18, Z+2	; 0x02
    153a:	33 81       	ldd	r19, Z+3	; 0x03
    153c:	24 0f       	add	r18, r20
    153e:	35 1f       	adc	r19, r21
    1540:	80 81       	ld	r24, Z
    1542:	91 81       	ldd	r25, Z+1	; 0x01
    1544:	b9 01       	movw	r22, r18
    1546:	68 1b       	sub	r22, r24
    1548:	79 0b       	sbc	r23, r25
    154a:	cb 01       	movw	r24, r22
    154c:	64 17       	cp	r22, r20
    154e:	75 07       	cpc	r23, r21
    1550:	10 f0       	brcs	.+4      	; 0x1556 <prvBytesInBuffer+0x24>
    1552:	84 1b       	sub	r24, r20
    1554:	95 0b       	sbc	r25, r21
    1556:	08 95       	ret

00001558 <prvInitialiseNewStreamBuffer>:
    1558:	0f 93       	push	r16
    155a:	fc 01       	movw	r30, r24
    155c:	8f e0       	ldi	r24, 0x0F	; 15
    155e:	df 01       	movw	r26, r30
    1560:	1d 92       	st	X+, r1
    1562:	8a 95       	dec	r24
    1564:	e9 f7       	brne	.-6      	; 0x1560 <prvInitialiseNewStreamBuffer+0x8>
    1566:	75 87       	std	Z+13, r23	; 0x0d
    1568:	64 87       	std	Z+12, r22	; 0x0c
    156a:	55 83       	std	Z+5, r21	; 0x05
    156c:	44 83       	std	Z+4, r20	; 0x04
    156e:	37 83       	std	Z+7, r19	; 0x07
    1570:	26 83       	std	Z+6, r18	; 0x06
    1572:	06 87       	std	Z+14, r16	; 0x0e
    1574:	0f 91       	pop	r16
    1576:	08 95       	ret

00001578 <prvWriteBytesToBuffer>:
    1578:	af 92       	push	r10
    157a:	bf 92       	push	r11
    157c:	cf 92       	push	r12
    157e:	df 92       	push	r13
    1580:	ef 92       	push	r14
    1582:	ff 92       	push	r15
    1584:	0f 93       	push	r16
    1586:	1f 93       	push	r17
    1588:	cf 93       	push	r28
    158a:	df 93       	push	r29
    158c:	6c 01       	movw	r12, r24
    158e:	5b 01       	movw	r10, r22
    1590:	7a 01       	movw	r14, r20
    1592:	fc 01       	movw	r30, r24
    1594:	c2 81       	ldd	r28, Z+2	; 0x02
    1596:	d3 81       	ldd	r29, Z+3	; 0x03
    1598:	04 81       	ldd	r16, Z+4	; 0x04
    159a:	15 81       	ldd	r17, Z+5	; 0x05
    159c:	0c 1b       	sub	r16, r28
    159e:	1d 0b       	sbc	r17, r29
    15a0:	40 17       	cp	r20, r16
    15a2:	51 07       	cpc	r21, r17
    15a4:	08 f4       	brcc	.+2      	; 0x15a8 <prvWriteBytesToBuffer+0x30>
    15a6:	8a 01       	movw	r16, r20
    15a8:	f6 01       	movw	r30, r12
    15aa:	84 85       	ldd	r24, Z+12	; 0x0c
    15ac:	95 85       	ldd	r25, Z+13	; 0x0d
    15ae:	a8 01       	movw	r20, r16
    15b0:	b5 01       	movw	r22, r10
    15b2:	8c 0f       	add	r24, r28
    15b4:	9d 1f       	adc	r25, r29
    15b6:	0e 94 fc 29 	call	0x53f8	; 0x53f8 <memcpy>
    15ba:	0e 15       	cp	r16, r14
    15bc:	1f 05       	cpc	r17, r15
    15be:	58 f4       	brcc	.+22     	; 0x15d6 <prvWriteBytesToBuffer+0x5e>
    15c0:	a7 01       	movw	r20, r14
    15c2:	40 1b       	sub	r20, r16
    15c4:	51 0b       	sbc	r21, r17
    15c6:	b5 01       	movw	r22, r10
    15c8:	60 0f       	add	r22, r16
    15ca:	71 1f       	adc	r23, r17
    15cc:	f6 01       	movw	r30, r12
    15ce:	84 85       	ldd	r24, Z+12	; 0x0c
    15d0:	95 85       	ldd	r25, Z+13	; 0x0d
    15d2:	0e 94 fc 29 	call	0x53f8	; 0x53f8 <memcpy>
    15d6:	ce 01       	movw	r24, r28
    15d8:	8e 0d       	add	r24, r14
    15da:	9f 1d       	adc	r25, r15
    15dc:	f6 01       	movw	r30, r12
    15de:	24 81       	ldd	r18, Z+4	; 0x04
    15e0:	35 81       	ldd	r19, Z+5	; 0x05
    15e2:	82 17       	cp	r24, r18
    15e4:	93 07       	cpc	r25, r19
    15e6:	10 f0       	brcs	.+4      	; 0x15ec <prvWriteBytesToBuffer+0x74>
    15e8:	82 1b       	sub	r24, r18
    15ea:	93 0b       	sbc	r25, r19
    15ec:	f6 01       	movw	r30, r12
    15ee:	93 83       	std	Z+3, r25	; 0x03
    15f0:	82 83       	std	Z+2, r24	; 0x02
    15f2:	c7 01       	movw	r24, r14
    15f4:	df 91       	pop	r29
    15f6:	cf 91       	pop	r28
    15f8:	1f 91       	pop	r17
    15fa:	0f 91       	pop	r16
    15fc:	ff 90       	pop	r15
    15fe:	ef 90       	pop	r14
    1600:	df 90       	pop	r13
    1602:	cf 90       	pop	r12
    1604:	bf 90       	pop	r11
    1606:	af 90       	pop	r10
    1608:	08 95       	ret

0000160a <prvWriteMessageToBuffer>:
    160a:	cf 92       	push	r12
    160c:	df 92       	push	r13
    160e:	ef 92       	push	r14
    1610:	ff 92       	push	r15
    1612:	0f 93       	push	r16
    1614:	1f 93       	push	r17
    1616:	cf 93       	push	r28
    1618:	df 93       	push	r29
    161a:	1f 92       	push	r1
    161c:	1f 92       	push	r1
    161e:	cd b7       	in	r28, 0x3d	; 61
    1620:	de b7       	in	r29, 0x3e	; 62
    1622:	7c 01       	movw	r14, r24
    1624:	6b 01       	movw	r12, r22
    1626:	5a 83       	std	Y+2, r21	; 0x02
    1628:	49 83       	std	Y+1, r20	; 0x01
    162a:	21 15       	cp	r18, r1
    162c:	31 05       	cpc	r19, r1
    162e:	c1 f0       	breq	.+48     	; 0x1660 <prvWriteMessageToBuffer+0x56>
    1630:	fc 01       	movw	r30, r24
    1632:	86 85       	ldd	r24, Z+14	; 0x0e
    1634:	80 fd       	sbrc	r24, 0
    1636:	08 c0       	rjmp	.+16     	; 0x1648 <prvWriteMessageToBuffer+0x3e>
    1638:	42 17       	cp	r20, r18
    163a:	53 07       	cpc	r21, r19
    163c:	08 f4       	brcc	.+2      	; 0x1640 <prvWriteMessageToBuffer+0x36>
    163e:	9a 01       	movw	r18, r20
    1640:	3a 83       	std	Y+2, r19	; 0x02
    1642:	29 83       	std	Y+1, r18	; 0x01
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	0f c0       	rjmp	.+30     	; 0x1666 <prvWriteMessageToBuffer+0x5c>
    1648:	20 17       	cp	r18, r16
    164a:	31 07       	cpc	r19, r17
    164c:	58 f0       	brcs	.+22     	; 0x1664 <prvWriteMessageToBuffer+0x5a>
    164e:	42 e0       	ldi	r20, 0x02	; 2
    1650:	50 e0       	ldi	r21, 0x00	; 0
    1652:	be 01       	movw	r22, r28
    1654:	6f 5f       	subi	r22, 0xFF	; 255
    1656:	7f 4f       	sbci	r23, 0xFF	; 255
    1658:	c7 01       	movw	r24, r14
    165a:	8e df       	rcall	.-228    	; 0x1578 <prvWriteBytesToBuffer>
    165c:	81 e0       	ldi	r24, 0x01	; 1
    165e:	03 c0       	rjmp	.+6      	; 0x1666 <prvWriteMessageToBuffer+0x5c>
    1660:	80 e0       	ldi	r24, 0x00	; 0
    1662:	01 c0       	rjmp	.+2      	; 0x1666 <prvWriteMessageToBuffer+0x5c>
    1664:	80 e0       	ldi	r24, 0x00	; 0
    1666:	88 23       	and	r24, r24
    1668:	31 f0       	breq	.+12     	; 0x1676 <prvWriteMessageToBuffer+0x6c>
    166a:	49 81       	ldd	r20, Y+1	; 0x01
    166c:	5a 81       	ldd	r21, Y+2	; 0x02
    166e:	b6 01       	movw	r22, r12
    1670:	c7 01       	movw	r24, r14
    1672:	82 df       	rcall	.-252    	; 0x1578 <prvWriteBytesToBuffer>
    1674:	02 c0       	rjmp	.+4      	; 0x167a <prvWriteMessageToBuffer+0x70>
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0f 90       	pop	r0
    167c:	0f 90       	pop	r0
    167e:	df 91       	pop	r29
    1680:	cf 91       	pop	r28
    1682:	1f 91       	pop	r17
    1684:	0f 91       	pop	r16
    1686:	ff 90       	pop	r15
    1688:	ef 90       	pop	r14
    168a:	df 90       	pop	r13
    168c:	cf 90       	pop	r12
    168e:	08 95       	ret

00001690 <prvReadBytesFromBuffer>:
    1690:	af 92       	push	r10
    1692:	bf 92       	push	r11
    1694:	cf 92       	push	r12
    1696:	df 92       	push	r13
    1698:	ef 92       	push	r14
    169a:	ff 92       	push	r15
    169c:	0f 93       	push	r16
    169e:	1f 93       	push	r17
    16a0:	cf 93       	push	r28
    16a2:	df 93       	push	r29
    16a4:	7c 01       	movw	r14, r24
    16a6:	5b 01       	movw	r10, r22
    16a8:	e9 01       	movw	r28, r18
    16aa:	42 17       	cp	r20, r18
    16ac:	53 07       	cpc	r21, r19
    16ae:	08 f4       	brcc	.+2      	; 0x16b2 <prvReadBytesFromBuffer+0x22>
    16b0:	ea 01       	movw	r28, r20
    16b2:	20 97       	sbiw	r28, 0x00	; 0
    16b4:	81 f1       	breq	.+96     	; 0x1716 <prvReadBytesFromBuffer+0x86>
    16b6:	f7 01       	movw	r30, r14
    16b8:	00 81       	ld	r16, Z
    16ba:	11 81       	ldd	r17, Z+1	; 0x01
    16bc:	84 81       	ldd	r24, Z+4	; 0x04
    16be:	95 81       	ldd	r25, Z+5	; 0x05
    16c0:	80 1b       	sub	r24, r16
    16c2:	91 0b       	sbc	r25, r17
    16c4:	6e 01       	movw	r12, r28
    16c6:	8c 17       	cp	r24, r28
    16c8:	9d 07       	cpc	r25, r29
    16ca:	08 f4       	brcc	.+2      	; 0x16ce <prvReadBytesFromBuffer+0x3e>
    16cc:	6c 01       	movw	r12, r24
    16ce:	f7 01       	movw	r30, r14
    16d0:	64 85       	ldd	r22, Z+12	; 0x0c
    16d2:	75 85       	ldd	r23, Z+13	; 0x0d
    16d4:	60 0f       	add	r22, r16
    16d6:	71 1f       	adc	r23, r17
    16d8:	a6 01       	movw	r20, r12
    16da:	c5 01       	movw	r24, r10
    16dc:	0e 94 fc 29 	call	0x53f8	; 0x53f8 <memcpy>
    16e0:	cc 16       	cp	r12, r28
    16e2:	dd 06       	cpc	r13, r29
    16e4:	58 f4       	brcc	.+22     	; 0x16fc <prvReadBytesFromBuffer+0x6c>
    16e6:	ae 01       	movw	r20, r28
    16e8:	4c 19       	sub	r20, r12
    16ea:	5d 09       	sbc	r21, r13
    16ec:	f7 01       	movw	r30, r14
    16ee:	64 85       	ldd	r22, Z+12	; 0x0c
    16f0:	75 85       	ldd	r23, Z+13	; 0x0d
    16f2:	c5 01       	movw	r24, r10
    16f4:	8c 0d       	add	r24, r12
    16f6:	9d 1d       	adc	r25, r13
    16f8:	0e 94 fc 29 	call	0x53f8	; 0x53f8 <memcpy>
    16fc:	0c 0f       	add	r16, r28
    16fe:	1d 1f       	adc	r17, r29
    1700:	f7 01       	movw	r30, r14
    1702:	84 81       	ldd	r24, Z+4	; 0x04
    1704:	95 81       	ldd	r25, Z+5	; 0x05
    1706:	08 17       	cp	r16, r24
    1708:	19 07       	cpc	r17, r25
    170a:	10 f0       	brcs	.+4      	; 0x1710 <prvReadBytesFromBuffer+0x80>
    170c:	08 1b       	sub	r16, r24
    170e:	19 0b       	sbc	r17, r25
    1710:	f7 01       	movw	r30, r14
    1712:	11 83       	std	Z+1, r17	; 0x01
    1714:	00 83       	st	Z, r16
    1716:	ce 01       	movw	r24, r28
    1718:	df 91       	pop	r29
    171a:	cf 91       	pop	r28
    171c:	1f 91       	pop	r17
    171e:	0f 91       	pop	r16
    1720:	ff 90       	pop	r15
    1722:	ef 90       	pop	r14
    1724:	df 90       	pop	r13
    1726:	cf 90       	pop	r12
    1728:	bf 90       	pop	r11
    172a:	af 90       	pop	r10
    172c:	08 95       	ret

0000172e <prvReadMessageFromBuffer>:
    172e:	6f 92       	push	r6
    1730:	7f 92       	push	r7
    1732:	8f 92       	push	r8
    1734:	9f 92       	push	r9
    1736:	af 92       	push	r10
    1738:	bf 92       	push	r11
    173a:	cf 92       	push	r12
    173c:	df 92       	push	r13
    173e:	ef 92       	push	r14
    1740:	ff 92       	push	r15
    1742:	0f 93       	push	r16
    1744:	1f 93       	push	r17
    1746:	cf 93       	push	r28
    1748:	df 93       	push	r29
    174a:	1f 92       	push	r1
    174c:	1f 92       	push	r1
    174e:	cd b7       	in	r28, 0x3d	; 61
    1750:	de b7       	in	r29, 0x3e	; 62
    1752:	6c 01       	movw	r12, r24
    1754:	4b 01       	movw	r8, r22
    1756:	5a 01       	movw	r10, r20
    1758:	79 01       	movw	r14, r18
    175a:	01 15       	cp	r16, r1
    175c:	11 05       	cpc	r17, r1
    175e:	b1 f0       	breq	.+44     	; 0x178c <prvReadMessageFromBuffer+0x5e>
    1760:	fc 01       	movw	r30, r24
    1762:	60 80       	ld	r6, Z
    1764:	71 80       	ldd	r7, Z+1	; 0x01
    1766:	a8 01       	movw	r20, r16
    1768:	be 01       	movw	r22, r28
    176a:	6f 5f       	subi	r22, 0xFF	; 255
    176c:	7f 4f       	sbci	r23, 0xFF	; 255
    176e:	90 df       	rcall	.-224    	; 0x1690 <prvReadBytesFromBuffer>
    1770:	89 81       	ldd	r24, Y+1	; 0x01
    1772:	9a 81       	ldd	r25, Y+2	; 0x02
    1774:	e0 1a       	sub	r14, r16
    1776:	f1 0a       	sbc	r15, r17
    1778:	a8 16       	cp	r10, r24
    177a:	b9 06       	cpc	r11, r25
    177c:	30 f4       	brcc	.+12     	; 0x178a <prvReadMessageFromBuffer+0x5c>
    177e:	f6 01       	movw	r30, r12
    1780:	71 82       	std	Z+1, r7	; 0x01
    1782:	60 82       	st	Z, r6
    1784:	a1 2c       	mov	r10, r1
    1786:	b1 2c       	mov	r11, r1
    1788:	01 c0       	rjmp	.+2      	; 0x178c <prvReadMessageFromBuffer+0x5e>
    178a:	5c 01       	movw	r10, r24
    178c:	97 01       	movw	r18, r14
    178e:	a5 01       	movw	r20, r10
    1790:	b4 01       	movw	r22, r8
    1792:	c6 01       	movw	r24, r12
    1794:	7d df       	rcall	.-262    	; 0x1690 <prvReadBytesFromBuffer>
    1796:	0f 90       	pop	r0
    1798:	0f 90       	pop	r0
    179a:	df 91       	pop	r29
    179c:	cf 91       	pop	r28
    179e:	1f 91       	pop	r17
    17a0:	0f 91       	pop	r16
    17a2:	ff 90       	pop	r15
    17a4:	ef 90       	pop	r14
    17a6:	df 90       	pop	r13
    17a8:	cf 90       	pop	r12
    17aa:	bf 90       	pop	r11
    17ac:	af 90       	pop	r10
    17ae:	9f 90       	pop	r9
    17b0:	8f 90       	pop	r8
    17b2:	7f 90       	pop	r7
    17b4:	6f 90       	pop	r6
    17b6:	08 95       	ret

000017b8 <xStreamBufferGenericCreate>:
    17b8:	cf 92       	push	r12
    17ba:	df 92       	push	r13
    17bc:	ef 92       	push	r14
    17be:	ff 92       	push	r15
    17c0:	0f 93       	push	r16
    17c2:	cf 93       	push	r28
    17c4:	df 93       	push	r29
    17c6:	ec 01       	movw	r28, r24
    17c8:	6b 01       	movw	r12, r22
    17ca:	41 30       	cpi	r20, 0x01	; 1
    17cc:	11 f4       	brne	.+4      	; 0x17d2 <xStreamBufferGenericCreate+0x1a>
    17ce:	01 e0       	ldi	r16, 0x01	; 1
    17d0:	01 c0       	rjmp	.+2      	; 0x17d4 <xStreamBufferGenericCreate+0x1c>
    17d2:	00 e0       	ldi	r16, 0x00	; 0
    17d4:	c1 14       	cp	r12, r1
    17d6:	d1 04       	cpc	r13, r1
    17d8:	19 f4       	brne	.+6      	; 0x17e0 <xStreamBufferGenericCreate+0x28>
    17da:	cc 24       	eor	r12, r12
    17dc:	c3 94       	inc	r12
    17de:	d1 2c       	mov	r13, r1
    17e0:	ce 01       	movw	r24, r28
    17e2:	40 96       	adiw	r24, 0x10	; 16
    17e4:	c8 17       	cp	r28, r24
    17e6:	d9 07       	cpc	r29, r25
    17e8:	20 f4       	brcc	.+8      	; 0x17f2 <xStreamBufferGenericCreate+0x3a>
    17ea:	21 96       	adiw	r28, 0x01	; 1
    17ec:	71 d9       	rcall	.-3358   	; 0xad0 <pvPortMalloc>
    17ee:	7c 01       	movw	r14, r24
    17f0:	02 c0       	rjmp	.+4      	; 0x17f6 <xStreamBufferGenericCreate+0x3e>
    17f2:	e1 2c       	mov	r14, r1
    17f4:	f1 2c       	mov	r15, r1
    17f6:	e1 14       	cp	r14, r1
    17f8:	f1 04       	cpc	r15, r1
    17fa:	39 f0       	breq	.+14     	; 0x180a <xStreamBufferGenericCreate+0x52>
    17fc:	96 01       	movw	r18, r12
    17fe:	ae 01       	movw	r20, r28
    1800:	b7 01       	movw	r22, r14
    1802:	61 5f       	subi	r22, 0xF1	; 241
    1804:	7f 4f       	sbci	r23, 0xFF	; 255
    1806:	c7 01       	movw	r24, r14
    1808:	a7 de       	rcall	.-690    	; 0x1558 <prvInitialiseNewStreamBuffer>
    180a:	c7 01       	movw	r24, r14
    180c:	df 91       	pop	r29
    180e:	cf 91       	pop	r28
    1810:	0f 91       	pop	r16
    1812:	ff 90       	pop	r15
    1814:	ef 90       	pop	r14
    1816:	df 90       	pop	r13
    1818:	cf 90       	pop	r12
    181a:	08 95       	ret

0000181c <xStreamBufferReset>:
    181c:	0f 93       	push	r16
    181e:	0f b6       	in	r0, 0x3f	; 63
    1820:	f8 94       	cli
    1822:	0f 92       	push	r0
    1824:	fc 01       	movw	r30, r24
    1826:	20 85       	ldd	r18, Z+8	; 0x08
    1828:	31 85       	ldd	r19, Z+9	; 0x09
    182a:	23 2b       	or	r18, r19
    182c:	71 f4       	brne	.+28     	; 0x184a <xStreamBufferReset+0x2e>
    182e:	22 85       	ldd	r18, Z+10	; 0x0a
    1830:	33 85       	ldd	r19, Z+11	; 0x0b
    1832:	23 2b       	or	r18, r19
    1834:	61 f4       	brne	.+24     	; 0x184e <xStreamBufferReset+0x32>
    1836:	26 81       	ldd	r18, Z+6	; 0x06
    1838:	37 81       	ldd	r19, Z+7	; 0x07
    183a:	44 81       	ldd	r20, Z+4	; 0x04
    183c:	55 81       	ldd	r21, Z+5	; 0x05
    183e:	64 85       	ldd	r22, Z+12	; 0x0c
    1840:	75 85       	ldd	r23, Z+13	; 0x0d
    1842:	06 85       	ldd	r16, Z+14	; 0x0e
    1844:	89 de       	rcall	.-750    	; 0x1558 <prvInitialiseNewStreamBuffer>
    1846:	81 e0       	ldi	r24, 0x01	; 1
    1848:	03 c0       	rjmp	.+6      	; 0x1850 <xStreamBufferReset+0x34>
    184a:	80 e0       	ldi	r24, 0x00	; 0
    184c:	01 c0       	rjmp	.+2      	; 0x1850 <xStreamBufferReset+0x34>
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	0f 90       	pop	r0
    1852:	0f be       	out	0x3f, r0	; 63
    1854:	0f 91       	pop	r16
    1856:	08 95       	ret

00001858 <xStreamBufferSpacesAvailable>:
    1858:	fc 01       	movw	r30, r24
    185a:	24 81       	ldd	r18, Z+4	; 0x04
    185c:	35 81       	ldd	r19, Z+5	; 0x05
    185e:	80 81       	ld	r24, Z
    1860:	91 81       	ldd	r25, Z+1	; 0x01
    1862:	82 0f       	add	r24, r18
    1864:	93 1f       	adc	r25, r19
    1866:	42 81       	ldd	r20, Z+2	; 0x02
    1868:	53 81       	ldd	r21, Z+3	; 0x03
    186a:	84 1b       	sub	r24, r20
    186c:	95 0b       	sbc	r25, r21
    186e:	01 97       	sbiw	r24, 0x01	; 1
    1870:	82 17       	cp	r24, r18
    1872:	93 07       	cpc	r25, r19
    1874:	10 f0       	brcs	.+4      	; 0x187a <xStreamBufferSpacesAvailable+0x22>
    1876:	82 1b       	sub	r24, r18
    1878:	93 0b       	sbc	r25, r19
    187a:	08 95       	ret

0000187c <xStreamBufferSend>:
    187c:	2f 92       	push	r2
    187e:	3f 92       	push	r3
    1880:	4f 92       	push	r4
    1882:	5f 92       	push	r5
    1884:	6f 92       	push	r6
    1886:	7f 92       	push	r7
    1888:	8f 92       	push	r8
    188a:	9f 92       	push	r9
    188c:	af 92       	push	r10
    188e:	bf 92       	push	r11
    1890:	cf 92       	push	r12
    1892:	df 92       	push	r13
    1894:	ef 92       	push	r14
    1896:	ff 92       	push	r15
    1898:	0f 93       	push	r16
    189a:	1f 93       	push	r17
    189c:	cf 93       	push	r28
    189e:	df 93       	push	r29
    18a0:	cd b7       	in	r28, 0x3d	; 61
    18a2:	de b7       	in	r29, 0x3e	; 62
    18a4:	2b 97       	sbiw	r28, 0x0b	; 11
    18a6:	0f b6       	in	r0, 0x3f	; 63
    18a8:	f8 94       	cli
    18aa:	de bf       	out	0x3e, r29	; 62
    18ac:	0f be       	out	0x3f, r0	; 63
    18ae:	cd bf       	out	0x3d, r28	; 61
    18b0:	4c 01       	movw	r8, r24
    18b2:	7b 87       	std	Y+11, r23	; 0x0b
    18b4:	6a 87       	std	Y+10, r22	; 0x0a
    18b6:	1a 01       	movw	r2, r20
    18b8:	0e 83       	std	Y+6, r16	; 0x06
    18ba:	1f 83       	std	Y+7, r17	; 0x07
    18bc:	28 87       	std	Y+8, r18	; 0x08
    18be:	39 87       	std	Y+9, r19	; 0x09
    18c0:	fc 01       	movw	r30, r24
    18c2:	84 81       	ldd	r24, Z+4	; 0x04
    18c4:	95 81       	ldd	r25, Z+5	; 0x05
    18c6:	01 97       	sbiw	r24, 0x01	; 1
    18c8:	26 85       	ldd	r18, Z+14	; 0x0e
    18ca:	20 ff       	sbrs	r18, 0
    18cc:	0c c0       	rjmp	.+24     	; 0x18e6 <xStreamBufferSend+0x6a>
    18ce:	2a 01       	movw	r4, r20
    18d0:	f2 e0       	ldi	r31, 0x02	; 2
    18d2:	4f 0e       	add	r4, r31
    18d4:	51 1c       	adc	r5, r1
    18d6:	84 15       	cp	r24, r4
    18d8:	95 05       	cpc	r25, r5
    18da:	58 f4       	brcc	.+22     	; 0x18f2 <xStreamBufferSend+0x76>
    18dc:	1e 82       	std	Y+6, r1	; 0x06
    18de:	1f 82       	std	Y+7, r1	; 0x07
    18e0:	18 86       	std	Y+8, r1	; 0x08
    18e2:	19 86       	std	Y+9, r1	; 0x09
    18e4:	06 c0       	rjmp	.+12     	; 0x18f2 <xStreamBufferSend+0x76>
    18e6:	84 17       	cp	r24, r20
    18e8:	95 07       	cpc	r25, r21
    18ea:	10 f0       	brcs	.+4      	; 0x18f0 <xStreamBufferSend+0x74>
    18ec:	2a 01       	movw	r4, r20
    18ee:	01 c0       	rjmp	.+2      	; 0x18f2 <xStreamBufferSend+0x76>
    18f0:	2c 01       	movw	r4, r24
    18f2:	8e 81       	ldd	r24, Y+6	; 0x06
    18f4:	9f 81       	ldd	r25, Y+7	; 0x07
    18f6:	a8 85       	ldd	r26, Y+8	; 0x08
    18f8:	b9 85       	ldd	r27, Y+9	; 0x09
    18fa:	89 2b       	or	r24, r25
    18fc:	8a 2b       	or	r24, r26
    18fe:	8b 2b       	or	r24, r27
    1900:	09 f4       	brne	.+2      	; 0x1904 <xStreamBufferSend+0x88>
    1902:	38 c0       	rjmp	.+112    	; 0x1974 <xStreamBufferSend+0xf8>
    1904:	ce 01       	movw	r24, r28
    1906:	01 96       	adiw	r24, 0x01	; 1
    1908:	0e 94 bf 14 	call	0x297e	; 0x297e <vTaskSetTimeOutState>
    190c:	0f b6       	in	r0, 0x3f	; 63
    190e:	f8 94       	cli
    1910:	0f 92       	push	r0
    1912:	c4 01       	movw	r24, r8
    1914:	a1 df       	rcall	.-190    	; 0x1858 <xStreamBufferSpacesAvailable>
    1916:	3c 01       	movw	r6, r24
    1918:	84 15       	cp	r24, r4
    191a:	95 05       	cpc	r25, r5
    191c:	40 f5       	brcc	.+80     	; 0x196e <xStreamBufferSend+0xf2>
    191e:	60 e0       	ldi	r22, 0x00	; 0
    1920:	80 e0       	ldi	r24, 0x00	; 0
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <xTaskGenericNotifyStateClear>
    1928:	0e 94 43 15 	call	0x2a86	; 0x2a86 <xTaskGetCurrentTaskHandle>
    192c:	f4 01       	movw	r30, r8
    192e:	93 87       	std	Z+11, r25	; 0x0b
    1930:	82 87       	std	Z+10, r24	; 0x0a
    1932:	0f 90       	pop	r0
    1934:	0f be       	out	0x3f, r0	; 63
    1936:	ae 80       	ldd	r10, Y+6	; 0x06
    1938:	bf 80       	ldd	r11, Y+7	; 0x07
    193a:	c8 84       	ldd	r12, Y+8	; 0x08
    193c:	d9 84       	ldd	r13, Y+9	; 0x09
    193e:	e1 2c       	mov	r14, r1
    1940:	f1 2c       	mov	r15, r1
    1942:	00 e0       	ldi	r16, 0x00	; 0
    1944:	10 e0       	ldi	r17, 0x00	; 0
    1946:	98 01       	movw	r18, r16
    1948:	40 e0       	ldi	r20, 0x00	; 0
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	ba 01       	movw	r22, r20
    194e:	80 e0       	ldi	r24, 0x00	; 0
    1950:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <xTaskGenericNotifyWait>
    1954:	f4 01       	movw	r30, r8
    1956:	13 86       	std	Z+11, r1	; 0x0b
    1958:	12 86       	std	Z+10, r1	; 0x0a
    195a:	be 01       	movw	r22, r28
    195c:	6a 5f       	subi	r22, 0xFA	; 250
    195e:	7f 4f       	sbci	r23, 0xFF	; 255
    1960:	ce 01       	movw	r24, r28
    1962:	01 96       	adiw	r24, 0x01	; 1
    1964:	0e 94 e6 14 	call	0x29cc	; 0x29cc <xTaskCheckForTimeOut>
    1968:	88 23       	and	r24, r24
    196a:	81 f2       	breq	.-96     	; 0x190c <xStreamBufferSend+0x90>
    196c:	05 c0       	rjmp	.+10     	; 0x1978 <xStreamBufferSend+0xfc>
    196e:	0f 90       	pop	r0
    1970:	0f be       	out	0x3f, r0	; 63
    1972:	02 c0       	rjmp	.+4      	; 0x1978 <xStreamBufferSend+0xfc>
    1974:	61 2c       	mov	r6, r1
    1976:	71 2c       	mov	r7, r1
    1978:	61 14       	cp	r6, r1
    197a:	71 04       	cpc	r7, r1
    197c:	19 f4       	brne	.+6      	; 0x1984 <xStreamBufferSend+0x108>
    197e:	c4 01       	movw	r24, r8
    1980:	6b df       	rcall	.-298    	; 0x1858 <xStreamBufferSpacesAvailable>
    1982:	3c 01       	movw	r6, r24
    1984:	82 01       	movw	r16, r4
    1986:	93 01       	movw	r18, r6
    1988:	a1 01       	movw	r20, r2
    198a:	6a 85       	ldd	r22, Y+10	; 0x0a
    198c:	7b 85       	ldd	r23, Y+11	; 0x0b
    198e:	c4 01       	movw	r24, r8
    1990:	3c de       	rcall	.-904    	; 0x160a <prvWriteMessageToBuffer>
    1992:	6c 01       	movw	r12, r24
    1994:	89 2b       	or	r24, r25
    1996:	e9 f0       	breq	.+58     	; 0x19d2 <xStreamBufferSend+0x156>
    1998:	c4 01       	movw	r24, r8
    199a:	cb dd       	rcall	.-1130   	; 0x1532 <prvBytesInBuffer>
    199c:	f4 01       	movw	r30, r8
    199e:	26 81       	ldd	r18, Z+6	; 0x06
    19a0:	37 81       	ldd	r19, Z+7	; 0x07
    19a2:	82 17       	cp	r24, r18
    19a4:	93 07       	cpc	r25, r19
    19a6:	a8 f0       	brcs	.+42     	; 0x19d2 <xStreamBufferSend+0x156>
    19a8:	fd d2       	rcall	.+1530   	; 0x1fa4 <vTaskSuspendAll>
    19aa:	f4 01       	movw	r30, r8
    19ac:	80 85       	ldd	r24, Z+8	; 0x08
    19ae:	91 85       	ldd	r25, Z+9	; 0x09
    19b0:	89 2b       	or	r24, r25
    19b2:	71 f0       	breq	.+28     	; 0x19d0 <xStreamBufferSend+0x154>
    19b4:	80 85       	ldd	r24, Z+8	; 0x08
    19b6:	91 85       	ldd	r25, Z+9	; 0x09
    19b8:	e1 2c       	mov	r14, r1
    19ba:	f1 2c       	mov	r15, r1
    19bc:	00 e0       	ldi	r16, 0x00	; 0
    19be:	20 e0       	ldi	r18, 0x00	; 0
    19c0:	30 e0       	ldi	r19, 0x00	; 0
    19c2:	a9 01       	movw	r20, r18
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	0e 94 82 16 	call	0x2d04	; 0x2d04 <xTaskGenericNotify>
    19ca:	f4 01       	movw	r30, r8
    19cc:	11 86       	std	Z+9, r1	; 0x09
    19ce:	10 86       	std	Z+8, r1	; 0x08
    19d0:	29 d4       	rcall	.+2130   	; 0x2224 <xTaskResumeAll>
    19d2:	c6 01       	movw	r24, r12
    19d4:	2b 96       	adiw	r28, 0x0b	; 11
    19d6:	0f b6       	in	r0, 0x3f	; 63
    19d8:	f8 94       	cli
    19da:	de bf       	out	0x3e, r29	; 62
    19dc:	0f be       	out	0x3f, r0	; 63
    19de:	cd bf       	out	0x3d, r28	; 61
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	1f 91       	pop	r17
    19e6:	0f 91       	pop	r16
    19e8:	ff 90       	pop	r15
    19ea:	ef 90       	pop	r14
    19ec:	df 90       	pop	r13
    19ee:	cf 90       	pop	r12
    19f0:	bf 90       	pop	r11
    19f2:	af 90       	pop	r10
    19f4:	9f 90       	pop	r9
    19f6:	8f 90       	pop	r8
    19f8:	7f 90       	pop	r7
    19fa:	6f 90       	pop	r6
    19fc:	5f 90       	pop	r5
    19fe:	4f 90       	pop	r4
    1a00:	3f 90       	pop	r3
    1a02:	2f 90       	pop	r2
    1a04:	08 95       	ret

00001a06 <xStreamBufferReceive>:
    1a06:	4f 92       	push	r4
    1a08:	5f 92       	push	r5
    1a0a:	6f 92       	push	r6
    1a0c:	7f 92       	push	r7
    1a0e:	8f 92       	push	r8
    1a10:	9f 92       	push	r9
    1a12:	af 92       	push	r10
    1a14:	bf 92       	push	r11
    1a16:	cf 92       	push	r12
    1a18:	df 92       	push	r13
    1a1a:	ef 92       	push	r14
    1a1c:	ff 92       	push	r15
    1a1e:	0f 93       	push	r16
    1a20:	1f 93       	push	r17
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	ec 01       	movw	r28, r24
    1a28:	2b 01       	movw	r4, r22
    1a2a:	3a 01       	movw	r6, r20
    1a2c:	58 01       	movw	r10, r16
    1a2e:	69 01       	movw	r12, r18
    1a30:	8e 85       	ldd	r24, Y+14	; 0x0e
    1a32:	80 ff       	sbrs	r24, 0
    1a34:	05 c0       	rjmp	.+10     	; 0x1a40 <xStreamBufferReceive+0x3a>
    1a36:	68 94       	set
    1a38:	88 24       	eor	r8, r8
    1a3a:	81 f8       	bld	r8, 1
    1a3c:	91 2c       	mov	r9, r1
    1a3e:	02 c0       	rjmp	.+4      	; 0x1a44 <xStreamBufferReceive+0x3e>
    1a40:	81 2c       	mov	r8, r1
    1a42:	91 2c       	mov	r9, r1
    1a44:	a1 14       	cp	r10, r1
    1a46:	b1 04       	cpc	r11, r1
    1a48:	c1 04       	cpc	r12, r1
    1a4a:	d1 04       	cpc	r13, r1
    1a4c:	41 f1       	breq	.+80     	; 0x1a9e <xStreamBufferReceive+0x98>
    1a4e:	0f b6       	in	r0, 0x3f	; 63
    1a50:	f8 94       	cli
    1a52:	0f 92       	push	r0
    1a54:	ce 01       	movw	r24, r28
    1a56:	6d dd       	rcall	.-1318   	; 0x1532 <prvBytesInBuffer>
    1a58:	7c 01       	movw	r14, r24
    1a5a:	88 16       	cp	r8, r24
    1a5c:	99 06       	cpc	r9, r25
    1a5e:	48 f0       	brcs	.+18     	; 0x1a72 <xStreamBufferReceive+0x6c>
    1a60:	60 e0       	ldi	r22, 0x00	; 0
    1a62:	80 e0       	ldi	r24, 0x00	; 0
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <xTaskGenericNotifyStateClear>
    1a6a:	0e 94 43 15 	call	0x2a86	; 0x2a86 <xTaskGetCurrentTaskHandle>
    1a6e:	99 87       	std	Y+9, r25	; 0x09
    1a70:	88 87       	std	Y+8, r24	; 0x08
    1a72:	0f 90       	pop	r0
    1a74:	0f be       	out	0x3f, r0	; 63
    1a76:	8e 14       	cp	r8, r14
    1a78:	9f 04       	cpc	r9, r15
    1a7a:	a0 f0       	brcs	.+40     	; 0x1aa4 <xStreamBufferReceive+0x9e>
    1a7c:	e1 2c       	mov	r14, r1
    1a7e:	f1 2c       	mov	r15, r1
    1a80:	00 e0       	ldi	r16, 0x00	; 0
    1a82:	10 e0       	ldi	r17, 0x00	; 0
    1a84:	98 01       	movw	r18, r16
    1a86:	40 e0       	ldi	r20, 0x00	; 0
    1a88:	50 e0       	ldi	r21, 0x00	; 0
    1a8a:	ba 01       	movw	r22, r20
    1a8c:	80 e0       	ldi	r24, 0x00	; 0
    1a8e:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <xTaskGenericNotifyWait>
    1a92:	19 86       	std	Y+9, r1	; 0x09
    1a94:	18 86       	std	Y+8, r1	; 0x08
    1a96:	ce 01       	movw	r24, r28
    1a98:	4c dd       	rcall	.-1384   	; 0x1532 <prvBytesInBuffer>
    1a9a:	7c 01       	movw	r14, r24
    1a9c:	03 c0       	rjmp	.+6      	; 0x1aa4 <xStreamBufferReceive+0x9e>
    1a9e:	ce 01       	movw	r24, r28
    1aa0:	48 dd       	rcall	.-1392   	; 0x1532 <prvBytesInBuffer>
    1aa2:	7c 01       	movw	r14, r24
    1aa4:	8e 14       	cp	r8, r14
    1aa6:	9f 04       	cpc	r9, r15
    1aa8:	e8 f4       	brcc	.+58     	; 0x1ae4 <xStreamBufferReceive+0xde>
    1aaa:	84 01       	movw	r16, r8
    1aac:	97 01       	movw	r18, r14
    1aae:	a3 01       	movw	r20, r6
    1ab0:	b2 01       	movw	r22, r4
    1ab2:	ce 01       	movw	r24, r28
    1ab4:	3c de       	rcall	.-904    	; 0x172e <prvReadMessageFromBuffer>
    1ab6:	6c 01       	movw	r12, r24
    1ab8:	89 2b       	or	r24, r25
    1aba:	b1 f0       	breq	.+44     	; 0x1ae8 <xStreamBufferReceive+0xe2>
    1abc:	73 d2       	rcall	.+1254   	; 0x1fa4 <vTaskSuspendAll>
    1abe:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ac0:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ac2:	89 2b       	or	r24, r25
    1ac4:	69 f0       	breq	.+26     	; 0x1ae0 <xStreamBufferReceive+0xda>
    1ac6:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ac8:	9b 85       	ldd	r25, Y+11	; 0x0b
    1aca:	e1 2c       	mov	r14, r1
    1acc:	f1 2c       	mov	r15, r1
    1ace:	00 e0       	ldi	r16, 0x00	; 0
    1ad0:	20 e0       	ldi	r18, 0x00	; 0
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	a9 01       	movw	r20, r18
    1ad6:	60 e0       	ldi	r22, 0x00	; 0
    1ad8:	0e 94 82 16 	call	0x2d04	; 0x2d04 <xTaskGenericNotify>
    1adc:	1b 86       	std	Y+11, r1	; 0x0b
    1ade:	1a 86       	std	Y+10, r1	; 0x0a
    1ae0:	a1 d3       	rcall	.+1858   	; 0x2224 <xTaskResumeAll>
    1ae2:	02 c0       	rjmp	.+4      	; 0x1ae8 <xStreamBufferReceive+0xe2>
    1ae4:	c1 2c       	mov	r12, r1
    1ae6:	d1 2c       	mov	r13, r1
    1ae8:	c6 01       	movw	r24, r12
    1aea:	df 91       	pop	r29
    1aec:	cf 91       	pop	r28
    1aee:	1f 91       	pop	r17
    1af0:	0f 91       	pop	r16
    1af2:	ff 90       	pop	r15
    1af4:	ef 90       	pop	r14
    1af6:	df 90       	pop	r13
    1af8:	cf 90       	pop	r12
    1afa:	bf 90       	pop	r11
    1afc:	af 90       	pop	r10
    1afe:	9f 90       	pop	r9
    1b00:	8f 90       	pop	r8
    1b02:	7f 90       	pop	r7
    1b04:	6f 90       	pop	r6
    1b06:	5f 90       	pop	r5
    1b08:	4f 90       	pop	r4
    1b0a:	08 95       	ret

00001b0c <prvResetNextTaskUnblockTime>:
    1b0c:	e0 91 c8 15 	lds	r30, 0x15C8	; 0x8015c8 <pxDelayedTaskList>
    1b10:	f0 91 c9 15 	lds	r31, 0x15C9	; 0x8015c9 <pxDelayedTaskList+0x1>
    1b14:	80 81       	ld	r24, Z
    1b16:	81 11       	cpse	r24, r1
    1b18:	0c c0       	rjmp	.+24     	; 0x1b32 <prvResetNextTaskUnblockTime+0x26>
    1b1a:	8f ef       	ldi	r24, 0xFF	; 255
    1b1c:	9f ef       	ldi	r25, 0xFF	; 255
    1b1e:	dc 01       	movw	r26, r24
    1b20:	80 93 9d 15 	sts	0x159D, r24	; 0x80159d <xNextTaskUnblockTime>
    1b24:	90 93 9e 15 	sts	0x159E, r25	; 0x80159e <xNextTaskUnblockTime+0x1>
    1b28:	a0 93 9f 15 	sts	0x159F, r26	; 0x80159f <xNextTaskUnblockTime+0x2>
    1b2c:	b0 93 a0 15 	sts	0x15A0, r27	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    1b30:	08 95       	ret
    1b32:	e0 91 c8 15 	lds	r30, 0x15C8	; 0x8015c8 <pxDelayedTaskList>
    1b36:	f0 91 c9 15 	lds	r31, 0x15C9	; 0x8015c9 <pxDelayedTaskList+0x1>
    1b3a:	07 80       	ldd	r0, Z+7	; 0x07
    1b3c:	f0 85       	ldd	r31, Z+8	; 0x08
    1b3e:	e0 2d       	mov	r30, r0
    1b40:	80 81       	ld	r24, Z
    1b42:	91 81       	ldd	r25, Z+1	; 0x01
    1b44:	a2 81       	ldd	r26, Z+2	; 0x02
    1b46:	b3 81       	ldd	r27, Z+3	; 0x03
    1b48:	80 93 9d 15 	sts	0x159D, r24	; 0x80159d <xNextTaskUnblockTime>
    1b4c:	90 93 9e 15 	sts	0x159E, r25	; 0x80159e <xNextTaskUnblockTime+0x1>
    1b50:	a0 93 9f 15 	sts	0x159F, r26	; 0x80159f <xNextTaskUnblockTime+0x2>
    1b54:	b0 93 a0 15 	sts	0x15A0, r27	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    1b58:	08 95       	ret

00001b5a <prvDeleteTCB>:
    1b5a:	cf 93       	push	r28
    1b5c:	df 93       	push	r29
    1b5e:	ec 01       	movw	r28, r24
    1b60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b62:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b64:	5e d8       	rcall	.-3908   	; 0xc22 <vPortFree>
    1b66:	ce 01       	movw	r24, r28
    1b68:	5c d8       	rcall	.-3912   	; 0xc22 <vPortFree>
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	08 95       	ret

00001b70 <prvInitialiseNewTask>:
    1b70:	4f 92       	push	r4
    1b72:	5f 92       	push	r5
    1b74:	6f 92       	push	r6
    1b76:	7f 92       	push	r7
    1b78:	8f 92       	push	r8
    1b7a:	9f 92       	push	r9
    1b7c:	af 92       	push	r10
    1b7e:	bf 92       	push	r11
    1b80:	cf 92       	push	r12
    1b82:	df 92       	push	r13
    1b84:	ef 92       	push	r14
    1b86:	ff 92       	push	r15
    1b88:	0f 93       	push	r16
    1b8a:	cf 93       	push	r28
    1b8c:	df 93       	push	r29
    1b8e:	2c 01       	movw	r4, r24
    1b90:	5b 01       	movw	r10, r22
    1b92:	4a 01       	movw	r8, r20
    1b94:	39 01       	movw	r6, r18
    1b96:	e6 01       	movw	r28, r12
    1b98:	65 ea       	ldi	r22, 0xA5	; 165
    1b9a:	70 e0       	ldi	r23, 0x00	; 0
    1b9c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b9e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ba0:	0e 94 05 2a 	call	0x540a	; 0x540a <memset>
    1ba4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ba6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ba8:	21 e0       	ldi	r18, 0x01	; 1
    1baa:	82 1a       	sub	r8, r18
    1bac:	91 08       	sbc	r9, r1
    1bae:	88 0e       	add	r8, r24
    1bb0:	99 1e       	adc	r9, r25
    1bb2:	a1 14       	cp	r10, r1
    1bb4:	b1 04       	cpc	r11, r1
    1bb6:	89 f4       	brne	.+34     	; 0x1bda <prvInitialiseNewTask+0x6a>
    1bb8:	15 c0       	rjmp	.+42     	; 0x1be4 <prvInitialiseNewTask+0x74>
    1bba:	82 2f       	mov	r24, r18
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	f5 01       	movw	r30, r10
    1bc0:	e8 0f       	add	r30, r24
    1bc2:	f9 1f       	adc	r31, r25
    1bc4:	30 81       	ld	r19, Z
    1bc6:	de 01       	movw	r26, r28
    1bc8:	a8 0f       	add	r26, r24
    1bca:	b9 1f       	adc	r27, r25
    1bcc:	5d 96       	adiw	r26, 0x1d	; 29
    1bce:	3c 93       	st	X, r19
    1bd0:	80 81       	ld	r24, Z
    1bd2:	88 23       	and	r24, r24
    1bd4:	29 f0       	breq	.+10     	; 0x1be0 <prvInitialiseNewTask+0x70>
    1bd6:	2f 5f       	subi	r18, 0xFF	; 255
    1bd8:	01 c0       	rjmp	.+2      	; 0x1bdc <prvInitialiseNewTask+0x6c>
    1bda:	20 e0       	ldi	r18, 0x00	; 0
    1bdc:	20 31       	cpi	r18, 0x10	; 16
    1bde:	68 f3       	brcs	.-38     	; 0x1bba <prvInitialiseNewTask+0x4a>
    1be0:	1c a6       	std	Y+44, r1	; 0x2c
    1be2:	01 c0       	rjmp	.+2      	; 0x1be6 <prvInitialiseNewTask+0x76>
    1be4:	1d 8e       	std	Y+29, r1	; 0x1d
    1be6:	0a 30       	cpi	r16, 0x0A	; 10
    1be8:	08 f0       	brcs	.+2      	; 0x1bec <prvInitialiseNewTask+0x7c>
    1bea:	09 e0       	ldi	r16, 0x09	; 9
    1bec:	0a 8f       	std	Y+26, r16	; 0x1a
    1bee:	0d a7       	std	Y+45, r16	; 0x2d
    1bf0:	1e a6       	std	Y+46, r1	; 0x2e
    1bf2:	ce 01       	movw	r24, r28
    1bf4:	02 96       	adiw	r24, 0x02	; 2
    1bf6:	63 d8       	rcall	.-3898   	; 0xcbe <vListInitialiseItem>
    1bf8:	ce 01       	movw	r24, r28
    1bfa:	0e 96       	adiw	r24, 0x0e	; 14
    1bfc:	60 d8       	rcall	.-3904   	; 0xcbe <vListInitialiseItem>
    1bfe:	db 87       	std	Y+11, r29	; 0x0b
    1c00:	ca 87       	std	Y+10, r28	; 0x0a
    1c02:	8a e0       	ldi	r24, 0x0A	; 10
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	a0 e0       	ldi	r26, 0x00	; 0
    1c08:	b0 e0       	ldi	r27, 0x00	; 0
    1c0a:	80 1b       	sub	r24, r16
    1c0c:	91 09       	sbc	r25, r1
    1c0e:	a1 09       	sbc	r26, r1
    1c10:	b1 09       	sbc	r27, r1
    1c12:	8e 87       	std	Y+14, r24	; 0x0e
    1c14:	9f 87       	std	Y+15, r25	; 0x0f
    1c16:	a8 8b       	std	Y+16, r26	; 0x10
    1c18:	b9 8b       	std	Y+17, r27	; 0x11
    1c1a:	df 8b       	std	Y+23, r29	; 0x17
    1c1c:	ce 8b       	std	Y+22, r28	; 0x16
    1c1e:	84 e0       	ldi	r24, 0x04	; 4
    1c20:	fe 01       	movw	r30, r28
    1c22:	bf 96       	adiw	r30, 0x2f	; 47
    1c24:	df 01       	movw	r26, r30
    1c26:	1d 92       	st	X+, r1
    1c28:	8a 95       	dec	r24
    1c2a:	e9 f7       	brne	.-6      	; 0x1c26 <prvInitialiseNewTask+0xb6>
    1c2c:	1b aa       	std	Y+51, r1	; 0x33
    1c2e:	a3 01       	movw	r20, r6
    1c30:	b2 01       	movw	r22, r4
    1c32:	c4 01       	movw	r24, r8
    1c34:	b8 d8       	rcall	.-3728   	; 0xda6 <pxPortInitialiseStack>
    1c36:	99 83       	std	Y+1, r25	; 0x01
    1c38:	88 83       	st	Y, r24
    1c3a:	e1 14       	cp	r14, r1
    1c3c:	f1 04       	cpc	r15, r1
    1c3e:	19 f0       	breq	.+6      	; 0x1c46 <prvInitialiseNewTask+0xd6>
    1c40:	f7 01       	movw	r30, r14
    1c42:	d1 83       	std	Z+1, r29	; 0x01
    1c44:	c0 83       	st	Z, r28
    1c46:	df 91       	pop	r29
    1c48:	cf 91       	pop	r28
    1c4a:	0f 91       	pop	r16
    1c4c:	ff 90       	pop	r15
    1c4e:	ef 90       	pop	r14
    1c50:	df 90       	pop	r13
    1c52:	cf 90       	pop	r12
    1c54:	bf 90       	pop	r11
    1c56:	af 90       	pop	r10
    1c58:	9f 90       	pop	r9
    1c5a:	8f 90       	pop	r8
    1c5c:	7f 90       	pop	r7
    1c5e:	6f 90       	pop	r6
    1c60:	5f 90       	pop	r5
    1c62:	4f 90       	pop	r4
    1c64:	08 95       	ret

00001c66 <prvInitialiseTaskLists>:
    1c66:	cf 93       	push	r28
    1c68:	c0 e0       	ldi	r28, 0x00	; 0
    1c6a:	08 c0       	rjmp	.+16     	; 0x1c7c <prvInitialiseTaskLists+0x16>
    1c6c:	2b e0       	ldi	r18, 0x0B	; 11
    1c6e:	c2 9f       	mul	r28, r18
    1c70:	c0 01       	movw	r24, r0
    1c72:	11 24       	eor	r1, r1
    1c74:	80 52       	subi	r24, 0x20	; 32
    1c76:	9a 4e       	sbci	r25, 0xEA	; 234
    1c78:	11 d8       	rcall	.-4062   	; 0xc9c <vListInitialise>
    1c7a:	cf 5f       	subi	r28, 0xFF	; 255
    1c7c:	ca 30       	cpi	r28, 0x0A	; 10
    1c7e:	b0 f3       	brcs	.-20     	; 0x1c6c <prvInitialiseTaskLists+0x6>
    1c80:	85 ed       	ldi	r24, 0xD5	; 213
    1c82:	95 e1       	ldi	r25, 0x15	; 21
    1c84:	0b d8       	rcall	.-4074   	; 0xc9c <vListInitialise>
    1c86:	8a ec       	ldi	r24, 0xCA	; 202
    1c88:	95 e1       	ldi	r25, 0x15	; 21
    1c8a:	08 d8       	rcall	.-4080   	; 0xc9c <vListInitialise>
    1c8c:	8b eb       	ldi	r24, 0xBB	; 187
    1c8e:	95 e1       	ldi	r25, 0x15	; 21
    1c90:	05 d8       	rcall	.-4086   	; 0xc9c <vListInitialise>
    1c92:	80 eb       	ldi	r24, 0xB0	; 176
    1c94:	95 e1       	ldi	r25, 0x15	; 21
    1c96:	02 d8       	rcall	.-4092   	; 0xc9c <vListInitialise>
    1c98:	85 ed       	ldi	r24, 0xD5	; 213
    1c9a:	95 e1       	ldi	r25, 0x15	; 21
    1c9c:	90 93 c9 15 	sts	0x15C9, r25	; 0x8015c9 <pxDelayedTaskList+0x1>
    1ca0:	80 93 c8 15 	sts	0x15C8, r24	; 0x8015c8 <pxDelayedTaskList>
    1ca4:	8a ec       	ldi	r24, 0xCA	; 202
    1ca6:	95 e1       	ldi	r25, 0x15	; 21
    1ca8:	90 93 c7 15 	sts	0x15C7, r25	; 0x8015c7 <pxOverflowDelayedTaskList+0x1>
    1cac:	80 93 c6 15 	sts	0x15C6, r24	; 0x8015c6 <pxOverflowDelayedTaskList>
    1cb0:	cf 91       	pop	r28
    1cb2:	08 95       	ret

00001cb4 <prvAddNewTaskToReadyList>:
    1cb4:	cf 93       	push	r28
    1cb6:	df 93       	push	r29
    1cb8:	ec 01       	movw	r28, r24
    1cba:	0f b6       	in	r0, 0x3f	; 63
    1cbc:	f8 94       	cli
    1cbe:	0f 92       	push	r0
    1cc0:	80 91 ae 15 	lds	r24, 0x15AE	; 0x8015ae <uxCurrentNumberOfTasks>
    1cc4:	8f 5f       	subi	r24, 0xFF	; 255
    1cc6:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <uxCurrentNumberOfTasks>
    1cca:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    1cce:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1cd2:	89 2b       	or	r24, r25
    1cd4:	51 f4       	brne	.+20     	; 0x1cea <prvAddNewTaskToReadyList+0x36>
    1cd6:	d0 93 4f 16 	sts	0x164F, r29	; 0x80164f <pxCurrentTCB+0x1>
    1cda:	c0 93 4e 16 	sts	0x164E, r28	; 0x80164e <pxCurrentTCB>
    1cde:	80 91 ae 15 	lds	r24, 0x15AE	; 0x8015ae <uxCurrentNumberOfTasks>
    1ce2:	81 30       	cpi	r24, 0x01	; 1
    1ce4:	91 f4       	brne	.+36     	; 0x1d0a <prvAddNewTaskToReadyList+0x56>
    1ce6:	bf df       	rcall	.-130    	; 0x1c66 <prvInitialiseTaskLists>
    1ce8:	10 c0       	rjmp	.+32     	; 0x1d0a <prvAddNewTaskToReadyList+0x56>
    1cea:	80 91 a8 15 	lds	r24, 0x15A8	; 0x8015a8 <xSchedulerRunning>
    1cee:	81 11       	cpse	r24, r1
    1cf0:	0c c0       	rjmp	.+24     	; 0x1d0a <prvAddNewTaskToReadyList+0x56>
    1cf2:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    1cf6:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1cfa:	92 8d       	ldd	r25, Z+26	; 0x1a
    1cfc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1cfe:	89 17       	cp	r24, r25
    1d00:	20 f0       	brcs	.+8      	; 0x1d0a <prvAddNewTaskToReadyList+0x56>
    1d02:	d0 93 4f 16 	sts	0x164F, r29	; 0x80164f <pxCurrentTCB+0x1>
    1d06:	c0 93 4e 16 	sts	0x164E, r28	; 0x80164e <pxCurrentTCB>
    1d0a:	80 91 a1 15 	lds	r24, 0x15A1	; 0x8015a1 <uxTaskNumber>
    1d0e:	8f 5f       	subi	r24, 0xFF	; 255
    1d10:	80 93 a1 15 	sts	0x15A1, r24	; 0x8015a1 <uxTaskNumber>
    1d14:	ea 8d       	ldd	r30, Y+26	; 0x1a
    1d16:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    1d1a:	8e 17       	cp	r24, r30
    1d1c:	10 f4       	brcc	.+4      	; 0x1d22 <prvAddNewTaskToReadyList+0x6e>
    1d1e:	e0 93 a9 15 	sts	0x15A9, r30	; 0x8015a9 <uxTopReadyPriority>
    1d22:	8b e0       	ldi	r24, 0x0B	; 11
    1d24:	8e 9f       	mul	r24, r30
    1d26:	f0 01       	movw	r30, r0
    1d28:	11 24       	eor	r1, r1
    1d2a:	e0 52       	subi	r30, 0x20	; 32
    1d2c:	fa 4e       	sbci	r31, 0xEA	; 234
    1d2e:	01 80       	ldd	r0, Z+1	; 0x01
    1d30:	f2 81       	ldd	r31, Z+2	; 0x02
    1d32:	e0 2d       	mov	r30, r0
    1d34:	ff 83       	std	Y+7, r31	; 0x07
    1d36:	ee 83       	std	Y+6, r30	; 0x06
    1d38:	26 81       	ldd	r18, Z+6	; 0x06
    1d3a:	37 81       	ldd	r19, Z+7	; 0x07
    1d3c:	39 87       	std	Y+9, r19	; 0x09
    1d3e:	28 87       	std	Y+8, r18	; 0x08
    1d40:	a6 81       	ldd	r26, Z+6	; 0x06
    1d42:	b7 81       	ldd	r27, Z+7	; 0x07
    1d44:	9e 01       	movw	r18, r28
    1d46:	2e 5f       	subi	r18, 0xFE	; 254
    1d48:	3f 4f       	sbci	r19, 0xFF	; 255
    1d4a:	15 96       	adiw	r26, 0x05	; 5
    1d4c:	3c 93       	st	X, r19
    1d4e:	2e 93       	st	-X, r18
    1d50:	14 97       	sbiw	r26, 0x04	; 4
    1d52:	37 83       	std	Z+7, r19	; 0x07
    1d54:	26 83       	std	Z+6, r18	; 0x06
    1d56:	ea 8d       	ldd	r30, Y+26	; 0x1a
    1d58:	8e 9f       	mul	r24, r30
    1d5a:	f0 01       	movw	r30, r0
    1d5c:	11 24       	eor	r1, r1
    1d5e:	e0 52       	subi	r30, 0x20	; 32
    1d60:	fa 4e       	sbci	r31, 0xEA	; 234
    1d62:	fd 87       	std	Y+13, r31	; 0x0d
    1d64:	ec 87       	std	Y+12, r30	; 0x0c
    1d66:	80 81       	ld	r24, Z
    1d68:	8f 5f       	subi	r24, 0xFF	; 255
    1d6a:	80 83       	st	Z, r24
    1d6c:	0f 90       	pop	r0
    1d6e:	0f be       	out	0x3f, r0	; 63
    1d70:	80 91 a8 15 	lds	r24, 0x15A8	; 0x8015a8 <xSchedulerRunning>
    1d74:	88 23       	and	r24, r24
    1d76:	49 f0       	breq	.+18     	; 0x1d8a <prvAddNewTaskToReadyList+0xd6>
    1d78:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    1d7c:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1d80:	92 8d       	ldd	r25, Z+26	; 0x1a
    1d82:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1d84:	98 17       	cp	r25, r24
    1d86:	08 f4       	brcc	.+2      	; 0x1d8a <prvAddNewTaskToReadyList+0xd6>
    1d88:	57 d8       	rcall	.-3922   	; 0xe38 <vPortYield>
    1d8a:	df 91       	pop	r29
    1d8c:	cf 91       	pop	r28
    1d8e:	08 95       	ret

00001d90 <prvCheckTasksWaitingTermination>:
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	1b c0       	rjmp	.+54     	; 0x1dcc <prvCheckTasksWaitingTermination+0x3c>
    1d96:	0f b6       	in	r0, 0x3f	; 63
    1d98:	f8 94       	cli
    1d9a:	0f 92       	push	r0
    1d9c:	e0 91 b7 15 	lds	r30, 0x15B7	; 0x8015b7 <xTasksWaitingTermination+0x7>
    1da0:	f0 91 b8 15 	lds	r31, 0x15B8	; 0x8015b8 <xTasksWaitingTermination+0x8>
    1da4:	c0 85       	ldd	r28, Z+8	; 0x08
    1da6:	d1 85       	ldd	r29, Z+9	; 0x09
    1da8:	ce 01       	movw	r24, r28
    1daa:	02 96       	adiw	r24, 0x02	; 2
    1dac:	0e 94 a0 06 	call	0xd40	; 0xd40 <uxListRemove>
    1db0:	80 91 ae 15 	lds	r24, 0x15AE	; 0x8015ae <uxCurrentNumberOfTasks>
    1db4:	81 50       	subi	r24, 0x01	; 1
    1db6:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <uxCurrentNumberOfTasks>
    1dba:	80 91 af 15 	lds	r24, 0x15AF	; 0x8015af <uxDeletedTasksWaitingCleanUp>
    1dbe:	81 50       	subi	r24, 0x01	; 1
    1dc0:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <uxDeletedTasksWaitingCleanUp>
    1dc4:	0f 90       	pop	r0
    1dc6:	0f be       	out	0x3f, r0	; 63
    1dc8:	ce 01       	movw	r24, r28
    1dca:	c7 de       	rcall	.-626    	; 0x1b5a <prvDeleteTCB>
    1dcc:	80 91 af 15 	lds	r24, 0x15AF	; 0x8015af <uxDeletedTasksWaitingCleanUp>
    1dd0:	81 11       	cpse	r24, r1
    1dd2:	e1 cf       	rjmp	.-62     	; 0x1d96 <prvCheckTasksWaitingTermination+0x6>
    1dd4:	df 91       	pop	r29
    1dd6:	cf 91       	pop	r28
    1dd8:	08 95       	ret

00001dda <prvAddCurrentTaskToDelayedList>:
    1dda:	8f 92       	push	r8
    1ddc:	9f 92       	push	r9
    1dde:	af 92       	push	r10
    1de0:	bf 92       	push	r11
    1de2:	cf 92       	push	r12
    1de4:	df 92       	push	r13
    1de6:	ef 92       	push	r14
    1de8:	ff 92       	push	r15
    1dea:	6b 01       	movw	r12, r22
    1dec:	7c 01       	movw	r14, r24
    1dee:	80 90 aa 15 	lds	r8, 0x15AA	; 0x8015aa <xTickCount>
    1df2:	90 90 ab 15 	lds	r9, 0x15AB	; 0x8015ab <xTickCount+0x1>
    1df6:	a0 90 ac 15 	lds	r10, 0x15AC	; 0x8015ac <xTickCount+0x2>
    1dfa:	b0 90 ad 15 	lds	r11, 0x15AD	; 0x8015ad <xTickCount+0x3>
    1dfe:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    1e02:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1e06:	02 96       	adiw	r24, 0x02	; 2
    1e08:	0e 94 a0 06 	call	0xd40	; 0xd40 <uxListRemove>
    1e0c:	c8 0c       	add	r12, r8
    1e0e:	d9 1c       	adc	r13, r9
    1e10:	ea 1c       	adc	r14, r10
    1e12:	fb 1c       	adc	r15, r11
    1e14:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    1e18:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1e1c:	c2 82       	std	Z+2, r12	; 0x02
    1e1e:	d3 82       	std	Z+3, r13	; 0x03
    1e20:	e4 82       	std	Z+4, r14	; 0x04
    1e22:	f5 82       	std	Z+5, r15	; 0x05
    1e24:	c8 14       	cp	r12, r8
    1e26:	d9 04       	cpc	r13, r9
    1e28:	ea 04       	cpc	r14, r10
    1e2a:	fb 04       	cpc	r15, r11
    1e2c:	68 f4       	brcc	.+26     	; 0x1e48 <prvAddCurrentTaskToDelayedList+0x6e>
    1e2e:	60 91 4e 16 	lds	r22, 0x164E	; 0x80164e <pxCurrentTCB>
    1e32:	70 91 4f 16 	lds	r23, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1e36:	80 91 c6 15 	lds	r24, 0x15C6	; 0x8015c6 <pxOverflowDelayedTaskList>
    1e3a:	90 91 c7 15 	lds	r25, 0x15C7	; 0x8015c7 <pxOverflowDelayedTaskList+0x1>
    1e3e:	6e 5f       	subi	r22, 0xFE	; 254
    1e40:	7f 4f       	sbci	r23, 0xFF	; 255
    1e42:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vListInsert>
    1e46:	21 c0       	rjmp	.+66     	; 0x1e8a <prvAddCurrentTaskToDelayedList+0xb0>
    1e48:	60 91 4e 16 	lds	r22, 0x164E	; 0x80164e <pxCurrentTCB>
    1e4c:	70 91 4f 16 	lds	r23, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    1e50:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <pxDelayedTaskList>
    1e54:	90 91 c9 15 	lds	r25, 0x15C9	; 0x8015c9 <pxDelayedTaskList+0x1>
    1e58:	6e 5f       	subi	r22, 0xFE	; 254
    1e5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e5c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vListInsert>
    1e60:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <xNextTaskUnblockTime>
    1e64:	90 91 9e 15 	lds	r25, 0x159E	; 0x80159e <xNextTaskUnblockTime+0x1>
    1e68:	a0 91 9f 15 	lds	r26, 0x159F	; 0x80159f <xNextTaskUnblockTime+0x2>
    1e6c:	b0 91 a0 15 	lds	r27, 0x15A0	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    1e70:	c8 16       	cp	r12, r24
    1e72:	d9 06       	cpc	r13, r25
    1e74:	ea 06       	cpc	r14, r26
    1e76:	fb 06       	cpc	r15, r27
    1e78:	40 f4       	brcc	.+16     	; 0x1e8a <prvAddCurrentTaskToDelayedList+0xb0>
    1e7a:	c0 92 9d 15 	sts	0x159D, r12	; 0x80159d <xNextTaskUnblockTime>
    1e7e:	d0 92 9e 15 	sts	0x159E, r13	; 0x80159e <xNextTaskUnblockTime+0x1>
    1e82:	e0 92 9f 15 	sts	0x159F, r14	; 0x80159f <xNextTaskUnblockTime+0x2>
    1e86:	f0 92 a0 15 	sts	0x15A0, r15	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    1e8a:	ff 90       	pop	r15
    1e8c:	ef 90       	pop	r14
    1e8e:	df 90       	pop	r13
    1e90:	cf 90       	pop	r12
    1e92:	bf 90       	pop	r11
    1e94:	af 90       	pop	r10
    1e96:	9f 90       	pop	r9
    1e98:	8f 90       	pop	r8
    1e9a:	08 95       	ret

00001e9c <xTaskCreate>:
    1e9c:	2f 92       	push	r2
    1e9e:	3f 92       	push	r3
    1ea0:	4f 92       	push	r4
    1ea2:	5f 92       	push	r5
    1ea4:	6f 92       	push	r6
    1ea6:	7f 92       	push	r7
    1ea8:	8f 92       	push	r8
    1eaa:	9f 92       	push	r9
    1eac:	af 92       	push	r10
    1eae:	bf 92       	push	r11
    1eb0:	cf 92       	push	r12
    1eb2:	df 92       	push	r13
    1eb4:	ef 92       	push	r14
    1eb6:	ff 92       	push	r15
    1eb8:	0f 93       	push	r16
    1eba:	cf 93       	push	r28
    1ebc:	df 93       	push	r29
    1ebe:	3c 01       	movw	r6, r24
    1ec0:	1b 01       	movw	r2, r22
    1ec2:	4a 01       	movw	r8, r20
    1ec4:	29 01       	movw	r4, r18
    1ec6:	ca 01       	movw	r24, r20
    1ec8:	0e 94 68 05 	call	0xad0	; 0xad0 <pvPortMalloc>
    1ecc:	6c 01       	movw	r12, r24
    1ece:	89 2b       	or	r24, r25
    1ed0:	71 f0       	breq	.+28     	; 0x1eee <xTaskCreate+0x52>
    1ed2:	84 e3       	ldi	r24, 0x34	; 52
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	0e 94 68 05 	call	0xad0	; 0xad0 <pvPortMalloc>
    1eda:	ec 01       	movw	r28, r24
    1edc:	89 2b       	or	r24, r25
    1ede:	19 f0       	breq	.+6      	; 0x1ee6 <xTaskCreate+0x4a>
    1ee0:	dc 8e       	std	Y+28, r13	; 0x1c
    1ee2:	cb 8e       	std	Y+27, r12	; 0x1b
    1ee4:	06 c0       	rjmp	.+12     	; 0x1ef2 <xTaskCreate+0x56>
    1ee6:	c6 01       	movw	r24, r12
    1ee8:	0e 94 11 06 	call	0xc22	; 0xc22 <vPortFree>
    1eec:	02 c0       	rjmp	.+4      	; 0x1ef2 <xTaskCreate+0x56>
    1eee:	c0 e0       	ldi	r28, 0x00	; 0
    1ef0:	d0 e0       	ldi	r29, 0x00	; 0
    1ef2:	20 97       	sbiw	r28, 0x00	; 0
    1ef4:	61 f0       	breq	.+24     	; 0x1f0e <xTaskCreate+0x72>
    1ef6:	a1 2c       	mov	r10, r1
    1ef8:	b1 2c       	mov	r11, r1
    1efa:	6e 01       	movw	r12, r28
    1efc:	92 01       	movw	r18, r4
    1efe:	a4 01       	movw	r20, r8
    1f00:	b1 01       	movw	r22, r2
    1f02:	c3 01       	movw	r24, r6
    1f04:	35 de       	rcall	.-918    	; 0x1b70 <prvInitialiseNewTask>
    1f06:	ce 01       	movw	r24, r28
    1f08:	d5 de       	rcall	.-598    	; 0x1cb4 <prvAddNewTaskToReadyList>
    1f0a:	81 e0       	ldi	r24, 0x01	; 1
    1f0c:	01 c0       	rjmp	.+2      	; 0x1f10 <xTaskCreate+0x74>
    1f0e:	8f ef       	ldi	r24, 0xFF	; 255
    1f10:	df 91       	pop	r29
    1f12:	cf 91       	pop	r28
    1f14:	0f 91       	pop	r16
    1f16:	ff 90       	pop	r15
    1f18:	ef 90       	pop	r14
    1f1a:	df 90       	pop	r13
    1f1c:	cf 90       	pop	r12
    1f1e:	bf 90       	pop	r11
    1f20:	af 90       	pop	r10
    1f22:	9f 90       	pop	r9
    1f24:	8f 90       	pop	r8
    1f26:	7f 90       	pop	r7
    1f28:	6f 90       	pop	r6
    1f2a:	5f 90       	pop	r5
    1f2c:	4f 90       	pop	r4
    1f2e:	3f 90       	pop	r3
    1f30:	2f 90       	pop	r2
    1f32:	08 95       	ret

00001f34 <vTaskStartScheduler>:
    1f34:	ef 92       	push	r14
    1f36:	ff 92       	push	r15
    1f38:	0f 93       	push	r16
    1f3a:	0f 2e       	mov	r0, r31
    1f3c:	fb e9       	ldi	r31, 0x9B	; 155
    1f3e:	ef 2e       	mov	r14, r31
    1f40:	f5 e1       	ldi	r31, 0x15	; 21
    1f42:	ff 2e       	mov	r15, r31
    1f44:	f0 2d       	mov	r31, r0
    1f46:	00 e0       	ldi	r16, 0x00	; 0
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	40 ec       	ldi	r20, 0xC0	; 192
    1f4e:	50 e0       	ldi	r21, 0x00	; 0
    1f50:	66 ee       	ldi	r22, 0xE6	; 230
    1f52:	74 e0       	ldi	r23, 0x04	; 4
    1f54:	8d ec       	ldi	r24, 0xCD	; 205
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	a1 df       	rcall	.-190    	; 0x1e9c <xTaskCreate>
    1f5a:	81 30       	cpi	r24, 0x01	; 1
    1f5c:	11 f4       	brne	.+4      	; 0x1f62 <vTaskStartScheduler+0x2e>
    1f5e:	0e 94 1d 18 	call	0x303a	; 0x303a <xTimerCreateTimerTask>
    1f62:	81 30       	cpi	r24, 0x01	; 1
    1f64:	c9 f4       	brne	.+50     	; 0x1f98 <vTaskStartScheduler+0x64>
    1f66:	f8 94       	cli
    1f68:	8f ef       	ldi	r24, 0xFF	; 255
    1f6a:	9f ef       	ldi	r25, 0xFF	; 255
    1f6c:	dc 01       	movw	r26, r24
    1f6e:	80 93 9d 15 	sts	0x159D, r24	; 0x80159d <xNextTaskUnblockTime>
    1f72:	90 93 9e 15 	sts	0x159E, r25	; 0x80159e <xNextTaskUnblockTime+0x1>
    1f76:	a0 93 9f 15 	sts	0x159F, r26	; 0x80159f <xNextTaskUnblockTime+0x2>
    1f7a:	b0 93 a0 15 	sts	0x15A0, r27	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    1f7e:	81 e0       	ldi	r24, 0x01	; 1
    1f80:	80 93 a8 15 	sts	0x15A8, r24	; 0x8015a8 <xSchedulerRunning>
    1f84:	10 92 aa 15 	sts	0x15AA, r1	; 0x8015aa <xTickCount>
    1f88:	10 92 ab 15 	sts	0x15AB, r1	; 0x8015ab <xTickCount+0x1>
    1f8c:	10 92 ac 15 	sts	0x15AC, r1	; 0x8015ac <xTickCount+0x2>
    1f90:	10 92 ad 15 	sts	0x15AD, r1	; 0x8015ad <xTickCount+0x3>
    1f94:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xPortStartScheduler>
    1f98:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <uxTopUsedPriority>
    1f9c:	0f 91       	pop	r16
    1f9e:	ff 90       	pop	r15
    1fa0:	ef 90       	pop	r14
    1fa2:	08 95       	ret

00001fa4 <vTaskSuspendAll>:
    1fa4:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    1fa8:	8f 5f       	subi	r24, 0xFF	; 255
    1faa:	80 93 9a 15 	sts	0x159A, r24	; 0x80159a <uxSchedulerSuspended>
    1fae:	08 95       	ret

00001fb0 <xTaskGetTickCount>:
    1fb0:	0f b6       	in	r0, 0x3f	; 63
    1fb2:	f8 94       	cli
    1fb4:	0f 92       	push	r0
    1fb6:	60 91 aa 15 	lds	r22, 0x15AA	; 0x8015aa <xTickCount>
    1fba:	70 91 ab 15 	lds	r23, 0x15AB	; 0x8015ab <xTickCount+0x1>
    1fbe:	80 91 ac 15 	lds	r24, 0x15AC	; 0x8015ac <xTickCount+0x2>
    1fc2:	90 91 ad 15 	lds	r25, 0x15AD	; 0x8015ad <xTickCount+0x3>
    1fc6:	0f 90       	pop	r0
    1fc8:	0f be       	out	0x3f, r0	; 63
    1fca:	08 95       	ret

00001fcc <xTaskIncrementTick>:
    1fcc:	cf 92       	push	r12
    1fce:	df 92       	push	r13
    1fd0:	ef 92       	push	r14
    1fd2:	ff 92       	push	r15
    1fd4:	cf 93       	push	r28
    1fd6:	df 93       	push	r29
    1fd8:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    1fdc:	81 11       	cpse	r24, r1
    1fde:	05 c1       	rjmp	.+522    	; 0x21ea <__DATA_REGION_LENGTH__+0x1ea>
    1fe0:	c0 90 aa 15 	lds	r12, 0x15AA	; 0x8015aa <xTickCount>
    1fe4:	d0 90 ab 15 	lds	r13, 0x15AB	; 0x8015ab <xTickCount+0x1>
    1fe8:	e0 90 ac 15 	lds	r14, 0x15AC	; 0x8015ac <xTickCount+0x2>
    1fec:	f0 90 ad 15 	lds	r15, 0x15AD	; 0x8015ad <xTickCount+0x3>
    1ff0:	8f ef       	ldi	r24, 0xFF	; 255
    1ff2:	c8 1a       	sub	r12, r24
    1ff4:	d8 0a       	sbc	r13, r24
    1ff6:	e8 0a       	sbc	r14, r24
    1ff8:	f8 0a       	sbc	r15, r24
    1ffa:	c0 92 aa 15 	sts	0x15AA, r12	; 0x8015aa <xTickCount>
    1ffe:	d0 92 ab 15 	sts	0x15AB, r13	; 0x8015ab <xTickCount+0x1>
    2002:	e0 92 ac 15 	sts	0x15AC, r14	; 0x8015ac <xTickCount+0x2>
    2006:	f0 92 ad 15 	sts	0x15AD, r15	; 0x8015ad <xTickCount+0x3>
    200a:	c1 14       	cp	r12, r1
    200c:	d1 04       	cpc	r13, r1
    200e:	e1 04       	cpc	r14, r1
    2010:	f1 04       	cpc	r15, r1
    2012:	b1 f4       	brne	.+44     	; 0x2040 <__DATA_REGION_LENGTH__+0x40>
    2014:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <pxDelayedTaskList>
    2018:	90 91 c9 15 	lds	r25, 0x15C9	; 0x8015c9 <pxDelayedTaskList+0x1>
    201c:	20 91 c6 15 	lds	r18, 0x15C6	; 0x8015c6 <pxOverflowDelayedTaskList>
    2020:	30 91 c7 15 	lds	r19, 0x15C7	; 0x8015c7 <pxOverflowDelayedTaskList+0x1>
    2024:	30 93 c9 15 	sts	0x15C9, r19	; 0x8015c9 <pxDelayedTaskList+0x1>
    2028:	20 93 c8 15 	sts	0x15C8, r18	; 0x8015c8 <pxDelayedTaskList>
    202c:	90 93 c7 15 	sts	0x15C7, r25	; 0x8015c7 <pxOverflowDelayedTaskList+0x1>
    2030:	80 93 c6 15 	sts	0x15C6, r24	; 0x8015c6 <pxOverflowDelayedTaskList>
    2034:	80 91 a2 15 	lds	r24, 0x15A2	; 0x8015a2 <xNumOfOverflows>
    2038:	8f 5f       	subi	r24, 0xFF	; 255
    203a:	80 93 a2 15 	sts	0x15A2, r24	; 0x8015a2 <xNumOfOverflows>
    203e:	66 dd       	rcall	.-1332   	; 0x1b0c <prvResetNextTaskUnblockTime>
    2040:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <xNextTaskUnblockTime>
    2044:	90 91 9e 15 	lds	r25, 0x159E	; 0x80159e <xNextTaskUnblockTime+0x1>
    2048:	a0 91 9f 15 	lds	r26, 0x159F	; 0x80159f <xNextTaskUnblockTime+0x2>
    204c:	b0 91 a0 15 	lds	r27, 0x15A0	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    2050:	c8 16       	cp	r12, r24
    2052:	d9 06       	cpc	r13, r25
    2054:	ea 06       	cpc	r14, r26
    2056:	fb 06       	cpc	r15, r27
    2058:	20 f4       	brcc	.+8      	; 0x2062 <__DATA_REGION_LENGTH__+0x62>
    205a:	80 e0       	ldi	r24, 0x00	; 0
    205c:	b2 c0       	rjmp	.+356    	; 0x21c2 <__DATA_REGION_LENGTH__+0x1c2>
    205e:	81 e0       	ldi	r24, 0x01	; 1
    2060:	01 c0       	rjmp	.+2      	; 0x2064 <__DATA_REGION_LENGTH__+0x64>
    2062:	80 e0       	ldi	r24, 0x00	; 0
    2064:	e0 91 c8 15 	lds	r30, 0x15C8	; 0x8015c8 <pxDelayedTaskList>
    2068:	f0 91 c9 15 	lds	r31, 0x15C9	; 0x8015c9 <pxDelayedTaskList+0x1>
    206c:	90 81       	ld	r25, Z
    206e:	91 11       	cpse	r25, r1
    2070:	0c c0       	rjmp	.+24     	; 0x208a <__DATA_REGION_LENGTH__+0x8a>
    2072:	4f ef       	ldi	r20, 0xFF	; 255
    2074:	5f ef       	ldi	r21, 0xFF	; 255
    2076:	ba 01       	movw	r22, r20
    2078:	40 93 9d 15 	sts	0x159D, r20	; 0x80159d <xNextTaskUnblockTime>
    207c:	50 93 9e 15 	sts	0x159E, r21	; 0x80159e <xNextTaskUnblockTime+0x1>
    2080:	60 93 9f 15 	sts	0x159F, r22	; 0x80159f <xNextTaskUnblockTime+0x2>
    2084:	70 93 a0 15 	sts	0x15A0, r23	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    2088:	9c c0       	rjmp	.+312    	; 0x21c2 <__DATA_REGION_LENGTH__+0x1c2>
    208a:	e0 91 c8 15 	lds	r30, 0x15C8	; 0x8015c8 <pxDelayedTaskList>
    208e:	f0 91 c9 15 	lds	r31, 0x15C9	; 0x8015c9 <pxDelayedTaskList+0x1>
    2092:	07 80       	ldd	r0, Z+7	; 0x07
    2094:	f0 85       	ldd	r31, Z+8	; 0x08
    2096:	e0 2d       	mov	r30, r0
    2098:	00 84       	ldd	r0, Z+8	; 0x08
    209a:	f1 85       	ldd	r31, Z+9	; 0x09
    209c:	e0 2d       	mov	r30, r0
    209e:	42 81       	ldd	r20, Z+2	; 0x02
    20a0:	53 81       	ldd	r21, Z+3	; 0x03
    20a2:	64 81       	ldd	r22, Z+4	; 0x04
    20a4:	75 81       	ldd	r23, Z+5	; 0x05
    20a6:	c4 16       	cp	r12, r20
    20a8:	d5 06       	cpc	r13, r21
    20aa:	e6 06       	cpc	r14, r22
    20ac:	f7 06       	cpc	r15, r23
    20ae:	48 f4       	brcc	.+18     	; 0x20c2 <__DATA_REGION_LENGTH__+0xc2>
    20b0:	40 93 9d 15 	sts	0x159D, r20	; 0x80159d <xNextTaskUnblockTime>
    20b4:	50 93 9e 15 	sts	0x159E, r21	; 0x80159e <xNextTaskUnblockTime+0x1>
    20b8:	60 93 9f 15 	sts	0x159F, r22	; 0x80159f <xNextTaskUnblockTime+0x2>
    20bc:	70 93 a0 15 	sts	0x15A0, r23	; 0x8015a0 <xNextTaskUnblockTime+0x3>
    20c0:	80 c0       	rjmp	.+256    	; 0x21c2 <__DATA_REGION_LENGTH__+0x1c2>
    20c2:	a4 85       	ldd	r26, Z+12	; 0x0c
    20c4:	b5 85       	ldd	r27, Z+13	; 0x0d
    20c6:	c6 81       	ldd	r28, Z+6	; 0x06
    20c8:	d7 81       	ldd	r29, Z+7	; 0x07
    20ca:	20 85       	ldd	r18, Z+8	; 0x08
    20cc:	31 85       	ldd	r19, Z+9	; 0x09
    20ce:	3f 83       	std	Y+7, r19	; 0x07
    20d0:	2e 83       	std	Y+6, r18	; 0x06
    20d2:	c0 85       	ldd	r28, Z+8	; 0x08
    20d4:	d1 85       	ldd	r29, Z+9	; 0x09
    20d6:	26 81       	ldd	r18, Z+6	; 0x06
    20d8:	37 81       	ldd	r19, Z+7	; 0x07
    20da:	3d 83       	std	Y+5, r19	; 0x05
    20dc:	2c 83       	std	Y+4, r18	; 0x04
    20de:	11 96       	adiw	r26, 0x01	; 1
    20e0:	4d 91       	ld	r20, X+
    20e2:	5c 91       	ld	r21, X
    20e4:	12 97       	sbiw	r26, 0x02	; 2
    20e6:	9f 01       	movw	r18, r30
    20e8:	2e 5f       	subi	r18, 0xFE	; 254
    20ea:	3f 4f       	sbci	r19, 0xFF	; 255
    20ec:	42 17       	cp	r20, r18
    20ee:	53 07       	cpc	r21, r19
    20f0:	31 f4       	brne	.+12     	; 0x20fe <__DATA_REGION_LENGTH__+0xfe>
    20f2:	40 85       	ldd	r20, Z+8	; 0x08
    20f4:	51 85       	ldd	r21, Z+9	; 0x09
    20f6:	12 96       	adiw	r26, 0x02	; 2
    20f8:	5c 93       	st	X, r21
    20fa:	4e 93       	st	-X, r20
    20fc:	11 97       	sbiw	r26, 0x01	; 1
    20fe:	15 86       	std	Z+13, r1	; 0x0d
    2100:	14 86       	std	Z+12, r1	; 0x0c
    2102:	9c 91       	ld	r25, X
    2104:	91 50       	subi	r25, 0x01	; 1
    2106:	9c 93       	st	X, r25
    2108:	a0 8d       	ldd	r26, Z+24	; 0x18
    210a:	b1 8d       	ldd	r27, Z+25	; 0x19
    210c:	10 97       	sbiw	r26, 0x00	; 0
    210e:	09 f1       	breq	.+66     	; 0x2152 <__DATA_REGION_LENGTH__+0x152>
    2110:	c2 89       	ldd	r28, Z+18	; 0x12
    2112:	d3 89       	ldd	r29, Z+19	; 0x13
    2114:	44 89       	ldd	r20, Z+20	; 0x14
    2116:	55 89       	ldd	r21, Z+21	; 0x15
    2118:	5f 83       	std	Y+7, r21	; 0x07
    211a:	4e 83       	std	Y+6, r20	; 0x06
    211c:	c4 89       	ldd	r28, Z+20	; 0x14
    211e:	d5 89       	ldd	r29, Z+21	; 0x15
    2120:	42 89       	ldd	r20, Z+18	; 0x12
    2122:	53 89       	ldd	r21, Z+19	; 0x13
    2124:	5d 83       	std	Y+5, r21	; 0x05
    2126:	4c 83       	std	Y+4, r20	; 0x04
    2128:	11 96       	adiw	r26, 0x01	; 1
    212a:	6d 91       	ld	r22, X+
    212c:	7c 91       	ld	r23, X
    212e:	12 97       	sbiw	r26, 0x02	; 2
    2130:	af 01       	movw	r20, r30
    2132:	42 5f       	subi	r20, 0xF2	; 242
    2134:	5f 4f       	sbci	r21, 0xFF	; 255
    2136:	64 17       	cp	r22, r20
    2138:	75 07       	cpc	r23, r21
    213a:	31 f4       	brne	.+12     	; 0x2148 <__DATA_REGION_LENGTH__+0x148>
    213c:	44 89       	ldd	r20, Z+20	; 0x14
    213e:	55 89       	ldd	r21, Z+21	; 0x15
    2140:	12 96       	adiw	r26, 0x02	; 2
    2142:	5c 93       	st	X, r21
    2144:	4e 93       	st	-X, r20
    2146:	11 97       	sbiw	r26, 0x01	; 1
    2148:	11 8e       	std	Z+25, r1	; 0x19
    214a:	10 8e       	std	Z+24, r1	; 0x18
    214c:	9c 91       	ld	r25, X
    214e:	91 50       	subi	r25, 0x01	; 1
    2150:	9c 93       	st	X, r25
    2152:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2154:	90 91 a9 15 	lds	r25, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    2158:	9a 17       	cp	r25, r26
    215a:	10 f4       	brcc	.+4      	; 0x2160 <__DATA_REGION_LENGTH__+0x160>
    215c:	a0 93 a9 15 	sts	0x15A9, r26	; 0x8015a9 <uxTopReadyPriority>
    2160:	9b e0       	ldi	r25, 0x0B	; 11
    2162:	9a 9f       	mul	r25, r26
    2164:	d0 01       	movw	r26, r0
    2166:	11 24       	eor	r1, r1
    2168:	a0 52       	subi	r26, 0x20	; 32
    216a:	ba 4e       	sbci	r27, 0xEA	; 234
    216c:	11 96       	adiw	r26, 0x01	; 1
    216e:	0d 90       	ld	r0, X+
    2170:	bc 91       	ld	r27, X
    2172:	a0 2d       	mov	r26, r0
    2174:	b7 83       	std	Z+7, r27	; 0x07
    2176:	a6 83       	std	Z+6, r26	; 0x06
    2178:	16 96       	adiw	r26, 0x06	; 6
    217a:	4d 91       	ld	r20, X+
    217c:	5c 91       	ld	r21, X
    217e:	17 97       	sbiw	r26, 0x07	; 7
    2180:	51 87       	std	Z+9, r21	; 0x09
    2182:	40 87       	std	Z+8, r20	; 0x08
    2184:	16 96       	adiw	r26, 0x06	; 6
    2186:	cd 91       	ld	r28, X+
    2188:	dc 91       	ld	r29, X
    218a:	17 97       	sbiw	r26, 0x07	; 7
    218c:	3d 83       	std	Y+5, r19	; 0x05
    218e:	2c 83       	std	Y+4, r18	; 0x04
    2190:	17 96       	adiw	r26, 0x07	; 7
    2192:	3c 93       	st	X, r19
    2194:	2e 93       	st	-X, r18
    2196:	16 97       	sbiw	r26, 0x06	; 6
    2198:	a2 8d       	ldd	r26, Z+26	; 0x1a
    219a:	9a 9f       	mul	r25, r26
    219c:	d0 01       	movw	r26, r0
    219e:	11 24       	eor	r1, r1
    21a0:	a0 52       	subi	r26, 0x20	; 32
    21a2:	ba 4e       	sbci	r27, 0xEA	; 234
    21a4:	b5 87       	std	Z+13, r27	; 0x0d
    21a6:	a4 87       	std	Z+12, r26	; 0x0c
    21a8:	9c 91       	ld	r25, X
    21aa:	9f 5f       	subi	r25, 0xFF	; 255
    21ac:	9c 93       	st	X, r25
    21ae:	22 8d       	ldd	r18, Z+26	; 0x1a
    21b0:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    21b4:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    21b8:	92 8d       	ldd	r25, Z+26	; 0x1a
    21ba:	29 17       	cp	r18, r25
    21bc:	08 f0       	brcs	.+2      	; 0x21c0 <__DATA_REGION_LENGTH__+0x1c0>
    21be:	4f cf       	rjmp	.-354    	; 0x205e <__DATA_REGION_LENGTH__+0x5e>
    21c0:	51 cf       	rjmp	.-350    	; 0x2064 <__DATA_REGION_LENGTH__+0x64>
    21c2:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    21c6:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    21ca:	e2 8d       	ldd	r30, Z+26	; 0x1a
    21cc:	9b e0       	ldi	r25, 0x0B	; 11
    21ce:	e9 9f       	mul	r30, r25
    21d0:	f0 01       	movw	r30, r0
    21d2:	11 24       	eor	r1, r1
    21d4:	e0 52       	subi	r30, 0x20	; 32
    21d6:	fa 4e       	sbci	r31, 0xEA	; 234
    21d8:	90 81       	ld	r25, Z
    21da:	92 30       	cpi	r25, 0x02	; 2
    21dc:	08 f0       	brcs	.+2      	; 0x21e0 <__DATA_REGION_LENGTH__+0x1e0>
    21de:	81 e0       	ldi	r24, 0x01	; 1
    21e0:	90 91 a3 15 	lds	r25, 0x15A3	; 0x8015a3 <xYieldPending>
    21e4:	91 11       	cpse	r25, r1
    21e6:	16 c0       	rjmp	.+44     	; 0x2214 <__stack+0x15>
    21e8:	16 c0       	rjmp	.+44     	; 0x2216 <__stack+0x17>
    21ea:	80 91 a4 15 	lds	r24, 0x15A4	; 0x8015a4 <xPendedTicks>
    21ee:	90 91 a5 15 	lds	r25, 0x15A5	; 0x8015a5 <xPendedTicks+0x1>
    21f2:	a0 91 a6 15 	lds	r26, 0x15A6	; 0x8015a6 <xPendedTicks+0x2>
    21f6:	b0 91 a7 15 	lds	r27, 0x15A7	; 0x8015a7 <xPendedTicks+0x3>
    21fa:	01 96       	adiw	r24, 0x01	; 1
    21fc:	a1 1d       	adc	r26, r1
    21fe:	b1 1d       	adc	r27, r1
    2200:	80 93 a4 15 	sts	0x15A4, r24	; 0x8015a4 <xPendedTicks>
    2204:	90 93 a5 15 	sts	0x15A5, r25	; 0x8015a5 <xPendedTicks+0x1>
    2208:	a0 93 a6 15 	sts	0x15A6, r26	; 0x8015a6 <xPendedTicks+0x2>
    220c:	b0 93 a7 15 	sts	0x15A7, r27	; 0x8015a7 <xPendedTicks+0x3>
    2210:	80 e0       	ldi	r24, 0x00	; 0
    2212:	01 c0       	rjmp	.+2      	; 0x2216 <__stack+0x17>
    2214:	81 e0       	ldi	r24, 0x01	; 1
    2216:	df 91       	pop	r29
    2218:	cf 91       	pop	r28
    221a:	ff 90       	pop	r15
    221c:	ef 90       	pop	r14
    221e:	df 90       	pop	r13
    2220:	cf 90       	pop	r12
    2222:	08 95       	ret

00002224 <xTaskResumeAll>:
    2224:	cf 92       	push	r12
    2226:	df 92       	push	r13
    2228:	ef 92       	push	r14
    222a:	ff 92       	push	r15
    222c:	cf 93       	push	r28
    222e:	df 93       	push	r29
    2230:	0f b6       	in	r0, 0x3f	; 63
    2232:	f8 94       	cli
    2234:	0f 92       	push	r0
    2236:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    223a:	81 50       	subi	r24, 0x01	; 1
    223c:	80 93 9a 15 	sts	0x159A, r24	; 0x80159a <uxSchedulerSuspended>
    2240:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    2244:	81 11       	cpse	r24, r1
    2246:	be c0       	rjmp	.+380    	; 0x23c4 <xTaskResumeAll+0x1a0>
    2248:	80 91 ae 15 	lds	r24, 0x15AE	; 0x8015ae <uxCurrentNumberOfTasks>
    224c:	81 11       	cpse	r24, r1
    224e:	88 c0       	rjmp	.+272    	; 0x2360 <xTaskResumeAll+0x13c>
    2250:	bc c0       	rjmp	.+376    	; 0x23ca <xTaskResumeAll+0x1a6>
    2252:	e0 91 c2 15 	lds	r30, 0x15C2	; 0x8015c2 <xPendingReadyList+0x7>
    2256:	f0 91 c3 15 	lds	r31, 0x15C3	; 0x8015c3 <xPendingReadyList+0x8>
    225a:	00 84       	ldd	r0, Z+8	; 0x08
    225c:	f1 85       	ldd	r31, Z+9	; 0x09
    225e:	e0 2d       	mov	r30, r0
    2260:	a0 8d       	ldd	r26, Z+24	; 0x18
    2262:	b1 8d       	ldd	r27, Z+25	; 0x19
    2264:	c2 89       	ldd	r28, Z+18	; 0x12
    2266:	d3 89       	ldd	r29, Z+19	; 0x13
    2268:	84 89       	ldd	r24, Z+20	; 0x14
    226a:	95 89       	ldd	r25, Z+21	; 0x15
    226c:	9f 83       	std	Y+7, r25	; 0x07
    226e:	8e 83       	std	Y+6, r24	; 0x06
    2270:	c4 89       	ldd	r28, Z+20	; 0x14
    2272:	d5 89       	ldd	r29, Z+21	; 0x15
    2274:	82 89       	ldd	r24, Z+18	; 0x12
    2276:	93 89       	ldd	r25, Z+19	; 0x13
    2278:	9d 83       	std	Y+5, r25	; 0x05
    227a:	8c 83       	std	Y+4, r24	; 0x04
    227c:	11 96       	adiw	r26, 0x01	; 1
    227e:	2d 91       	ld	r18, X+
    2280:	3c 91       	ld	r19, X
    2282:	12 97       	sbiw	r26, 0x02	; 2
    2284:	cf 01       	movw	r24, r30
    2286:	0e 96       	adiw	r24, 0x0e	; 14
    2288:	28 17       	cp	r18, r24
    228a:	39 07       	cpc	r19, r25
    228c:	31 f4       	brne	.+12     	; 0x229a <xTaskResumeAll+0x76>
    228e:	84 89       	ldd	r24, Z+20	; 0x14
    2290:	95 89       	ldd	r25, Z+21	; 0x15
    2292:	12 96       	adiw	r26, 0x02	; 2
    2294:	9c 93       	st	X, r25
    2296:	8e 93       	st	-X, r24
    2298:	11 97       	sbiw	r26, 0x01	; 1
    229a:	11 8e       	std	Z+25, r1	; 0x19
    229c:	10 8e       	std	Z+24, r1	; 0x18
    229e:	8c 91       	ld	r24, X
    22a0:	81 50       	subi	r24, 0x01	; 1
    22a2:	8c 93       	st	X, r24
    22a4:	a4 85       	ldd	r26, Z+12	; 0x0c
    22a6:	b5 85       	ldd	r27, Z+13	; 0x0d
    22a8:	c6 81       	ldd	r28, Z+6	; 0x06
    22aa:	d7 81       	ldd	r29, Z+7	; 0x07
    22ac:	80 85       	ldd	r24, Z+8	; 0x08
    22ae:	91 85       	ldd	r25, Z+9	; 0x09
    22b0:	9f 83       	std	Y+7, r25	; 0x07
    22b2:	8e 83       	std	Y+6, r24	; 0x06
    22b4:	c0 85       	ldd	r28, Z+8	; 0x08
    22b6:	d1 85       	ldd	r29, Z+9	; 0x09
    22b8:	86 81       	ldd	r24, Z+6	; 0x06
    22ba:	97 81       	ldd	r25, Z+7	; 0x07
    22bc:	9d 83       	std	Y+5, r25	; 0x05
    22be:	8c 83       	std	Y+4, r24	; 0x04
    22c0:	11 96       	adiw	r26, 0x01	; 1
    22c2:	8d 91       	ld	r24, X+
    22c4:	9c 91       	ld	r25, X
    22c6:	12 97       	sbiw	r26, 0x02	; 2
    22c8:	9f 01       	movw	r18, r30
    22ca:	2e 5f       	subi	r18, 0xFE	; 254
    22cc:	3f 4f       	sbci	r19, 0xFF	; 255
    22ce:	82 17       	cp	r24, r18
    22d0:	93 07       	cpc	r25, r19
    22d2:	31 f4       	brne	.+12     	; 0x22e0 <xTaskResumeAll+0xbc>
    22d4:	80 85       	ldd	r24, Z+8	; 0x08
    22d6:	91 85       	ldd	r25, Z+9	; 0x09
    22d8:	12 96       	adiw	r26, 0x02	; 2
    22da:	9c 93       	st	X, r25
    22dc:	8e 93       	st	-X, r24
    22de:	11 97       	sbiw	r26, 0x01	; 1
    22e0:	15 86       	std	Z+13, r1	; 0x0d
    22e2:	14 86       	std	Z+12, r1	; 0x0c
    22e4:	8c 91       	ld	r24, X
    22e6:	81 50       	subi	r24, 0x01	; 1
    22e8:	8c 93       	st	X, r24
    22ea:	a2 8d       	ldd	r26, Z+26	; 0x1a
    22ec:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    22f0:	8a 17       	cp	r24, r26
    22f2:	10 f4       	brcc	.+4      	; 0x22f8 <xTaskResumeAll+0xd4>
    22f4:	a0 93 a9 15 	sts	0x15A9, r26	; 0x8015a9 <uxTopReadyPriority>
    22f8:	8b e0       	ldi	r24, 0x0B	; 11
    22fa:	8a 9f       	mul	r24, r26
    22fc:	d0 01       	movw	r26, r0
    22fe:	11 24       	eor	r1, r1
    2300:	a0 52       	subi	r26, 0x20	; 32
    2302:	ba 4e       	sbci	r27, 0xEA	; 234
    2304:	11 96       	adiw	r26, 0x01	; 1
    2306:	0d 90       	ld	r0, X+
    2308:	bc 91       	ld	r27, X
    230a:	a0 2d       	mov	r26, r0
    230c:	b7 83       	std	Z+7, r27	; 0x07
    230e:	a6 83       	std	Z+6, r26	; 0x06
    2310:	16 96       	adiw	r26, 0x06	; 6
    2312:	4d 91       	ld	r20, X+
    2314:	5c 91       	ld	r21, X
    2316:	17 97       	sbiw	r26, 0x07	; 7
    2318:	51 87       	std	Z+9, r21	; 0x09
    231a:	40 87       	std	Z+8, r20	; 0x08
    231c:	16 96       	adiw	r26, 0x06	; 6
    231e:	cd 91       	ld	r28, X+
    2320:	dc 91       	ld	r29, X
    2322:	17 97       	sbiw	r26, 0x07	; 7
    2324:	3d 83       	std	Y+5, r19	; 0x05
    2326:	2c 83       	std	Y+4, r18	; 0x04
    2328:	17 96       	adiw	r26, 0x07	; 7
    232a:	3c 93       	st	X, r19
    232c:	2e 93       	st	-X, r18
    232e:	16 97       	sbiw	r26, 0x06	; 6
    2330:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2332:	8a 9f       	mul	r24, r26
    2334:	d0 01       	movw	r26, r0
    2336:	11 24       	eor	r1, r1
    2338:	a0 52       	subi	r26, 0x20	; 32
    233a:	ba 4e       	sbci	r27, 0xEA	; 234
    233c:	b5 87       	std	Z+13, r27	; 0x0d
    233e:	a4 87       	std	Z+12, r26	; 0x0c
    2340:	8c 91       	ld	r24, X
    2342:	8f 5f       	subi	r24, 0xFF	; 255
    2344:	8c 93       	st	X, r24
    2346:	92 8d       	ldd	r25, Z+26	; 0x1a
    2348:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
    234c:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2350:	5a 96       	adiw	r26, 0x1a	; 26
    2352:	8c 91       	ld	r24, X
    2354:	98 17       	cp	r25, r24
    2356:	30 f0       	brcs	.+12     	; 0x2364 <xTaskResumeAll+0x140>
    2358:	81 e0       	ldi	r24, 0x01	; 1
    235a:	80 93 a3 15 	sts	0x15A3, r24	; 0x8015a3 <xYieldPending>
    235e:	02 c0       	rjmp	.+4      	; 0x2364 <xTaskResumeAll+0x140>
    2360:	e0 e0       	ldi	r30, 0x00	; 0
    2362:	f0 e0       	ldi	r31, 0x00	; 0
    2364:	80 91 bb 15 	lds	r24, 0x15BB	; 0x8015bb <xPendingReadyList>
    2368:	81 11       	cpse	r24, r1
    236a:	73 cf       	rjmp	.-282    	; 0x2252 <xTaskResumeAll+0x2e>
    236c:	ef 2b       	or	r30, r31
    236e:	09 f0       	breq	.+2      	; 0x2372 <xTaskResumeAll+0x14e>
    2370:	cd db       	rcall	.-2150   	; 0x1b0c <prvResetNextTaskUnblockTime>
    2372:	c0 90 a4 15 	lds	r12, 0x15A4	; 0x8015a4 <xPendedTicks>
    2376:	d0 90 a5 15 	lds	r13, 0x15A5	; 0x8015a5 <xPendedTicks+0x1>
    237a:	e0 90 a6 15 	lds	r14, 0x15A6	; 0x8015a6 <xPendedTicks+0x2>
    237e:	f0 90 a7 15 	lds	r15, 0x15A7	; 0x8015a7 <xPendedTicks+0x3>
    2382:	c1 14       	cp	r12, r1
    2384:	d1 04       	cpc	r13, r1
    2386:	e1 04       	cpc	r14, r1
    2388:	f1 04       	cpc	r15, r1
    238a:	a1 f0       	breq	.+40     	; 0x23b4 <xTaskResumeAll+0x190>
    238c:	1f de       	rcall	.-962    	; 0x1fcc <xTaskIncrementTick>
    238e:	88 23       	and	r24, r24
    2390:	19 f0       	breq	.+6      	; 0x2398 <xTaskResumeAll+0x174>
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	80 93 a3 15 	sts	0x15A3, r24	; 0x8015a3 <xYieldPending>
    2398:	81 e0       	ldi	r24, 0x01	; 1
    239a:	c8 1a       	sub	r12, r24
    239c:	d1 08       	sbc	r13, r1
    239e:	e1 08       	sbc	r14, r1
    23a0:	f1 08       	sbc	r15, r1
    23a2:	a1 f7       	brne	.-24     	; 0x238c <xTaskResumeAll+0x168>
    23a4:	10 92 a4 15 	sts	0x15A4, r1	; 0x8015a4 <xPendedTicks>
    23a8:	10 92 a5 15 	sts	0x15A5, r1	; 0x8015a5 <xPendedTicks+0x1>
    23ac:	10 92 a6 15 	sts	0x15A6, r1	; 0x8015a6 <xPendedTicks+0x2>
    23b0:	10 92 a7 15 	sts	0x15A7, r1	; 0x8015a7 <xPendedTicks+0x3>
    23b4:	80 91 a3 15 	lds	r24, 0x15A3	; 0x8015a3 <xYieldPending>
    23b8:	88 23       	and	r24, r24
    23ba:	31 f0       	breq	.+12     	; 0x23c8 <xTaskResumeAll+0x1a4>
    23bc:	0e 94 1c 07 	call	0xe38	; 0xe38 <vPortYield>
    23c0:	81 e0       	ldi	r24, 0x01	; 1
    23c2:	03 c0       	rjmp	.+6      	; 0x23ca <xTaskResumeAll+0x1a6>
    23c4:	80 e0       	ldi	r24, 0x00	; 0
    23c6:	01 c0       	rjmp	.+2      	; 0x23ca <xTaskResumeAll+0x1a6>
    23c8:	80 e0       	ldi	r24, 0x00	; 0
    23ca:	0f 90       	pop	r0
    23cc:	0f be       	out	0x3f, r0	; 63
    23ce:	df 91       	pop	r29
    23d0:	cf 91       	pop	r28
    23d2:	ff 90       	pop	r15
    23d4:	ef 90       	pop	r14
    23d6:	df 90       	pop	r13
    23d8:	cf 90       	pop	r12
    23da:	08 95       	ret

000023dc <xTaskDelayUntil>:
    23dc:	8f 92       	push	r8
    23de:	9f 92       	push	r9
    23e0:	af 92       	push	r10
    23e2:	bf 92       	push	r11
    23e4:	cf 92       	push	r12
    23e6:	df 92       	push	r13
    23e8:	ef 92       	push	r14
    23ea:	ff 92       	push	r15
    23ec:	1f 93       	push	r17
    23ee:	cf 93       	push	r28
    23f0:	df 93       	push	r29
    23f2:	ec 01       	movw	r28, r24
    23f4:	6a 01       	movw	r12, r20
    23f6:	7b 01       	movw	r14, r22
    23f8:	d5 dd       	rcall	.-1110   	; 0x1fa4 <vTaskSuspendAll>
    23fa:	80 90 aa 15 	lds	r8, 0x15AA	; 0x8015aa <xTickCount>
    23fe:	90 90 ab 15 	lds	r9, 0x15AB	; 0x8015ab <xTickCount+0x1>
    2402:	a0 90 ac 15 	lds	r10, 0x15AC	; 0x8015ac <xTickCount+0x2>
    2406:	b0 90 ad 15 	lds	r11, 0x15AD	; 0x8015ad <xTickCount+0x3>
    240a:	88 81       	ld	r24, Y
    240c:	99 81       	ldd	r25, Y+1	; 0x01
    240e:	aa 81       	ldd	r26, Y+2	; 0x02
    2410:	bb 81       	ldd	r27, Y+3	; 0x03
    2412:	ac 01       	movw	r20, r24
    2414:	bd 01       	movw	r22, r26
    2416:	4c 0d       	add	r20, r12
    2418:	5d 1d       	adc	r21, r13
    241a:	6e 1d       	adc	r22, r14
    241c:	7f 1d       	adc	r23, r15
    241e:	88 16       	cp	r8, r24
    2420:	99 06       	cpc	r9, r25
    2422:	aa 06       	cpc	r10, r26
    2424:	bb 06       	cpc	r11, r27
    2426:	60 f4       	brcc	.+24     	; 0x2440 <xTaskDelayUntil+0x64>
    2428:	48 17       	cp	r20, r24
    242a:	59 07       	cpc	r21, r25
    242c:	6a 07       	cpc	r22, r26
    242e:	7b 07       	cpc	r23, r27
    2430:	98 f4       	brcc	.+38     	; 0x2458 <xTaskDelayUntil+0x7c>
    2432:	84 16       	cp	r8, r20
    2434:	95 06       	cpc	r9, r21
    2436:	a6 06       	cpc	r10, r22
    2438:	b7 06       	cpc	r11, r23
    243a:	80 f0       	brcs	.+32     	; 0x245c <xTaskDelayUntil+0x80>
    243c:	10 e0       	ldi	r17, 0x00	; 0
    243e:	13 c0       	rjmp	.+38     	; 0x2466 <xTaskDelayUntil+0x8a>
    2440:	48 17       	cp	r20, r24
    2442:	59 07       	cpc	r21, r25
    2444:	6a 07       	cpc	r22, r26
    2446:	7b 07       	cpc	r23, r27
    2448:	58 f0       	brcs	.+22     	; 0x2460 <xTaskDelayUntil+0x84>
    244a:	84 16       	cp	r8, r20
    244c:	95 06       	cpc	r9, r21
    244e:	a6 06       	cpc	r10, r22
    2450:	b7 06       	cpc	r11, r23
    2452:	40 f0       	brcs	.+16     	; 0x2464 <xTaskDelayUntil+0x88>
    2454:	10 e0       	ldi	r17, 0x00	; 0
    2456:	07 c0       	rjmp	.+14     	; 0x2466 <xTaskDelayUntil+0x8a>
    2458:	10 e0       	ldi	r17, 0x00	; 0
    245a:	05 c0       	rjmp	.+10     	; 0x2466 <xTaskDelayUntil+0x8a>
    245c:	11 e0       	ldi	r17, 0x01	; 1
    245e:	03 c0       	rjmp	.+6      	; 0x2466 <xTaskDelayUntil+0x8a>
    2460:	11 e0       	ldi	r17, 0x01	; 1
    2462:	01 c0       	rjmp	.+2      	; 0x2466 <xTaskDelayUntil+0x8a>
    2464:	11 e0       	ldi	r17, 0x01	; 1
    2466:	48 83       	st	Y, r20
    2468:	59 83       	std	Y+1, r21	; 0x01
    246a:	6a 83       	std	Y+2, r22	; 0x02
    246c:	7b 83       	std	Y+3, r23	; 0x03
    246e:	11 23       	and	r17, r17
    2470:	41 f0       	breq	.+16     	; 0x2482 <xTaskDelayUntil+0xa6>
    2472:	cb 01       	movw	r24, r22
    2474:	ba 01       	movw	r22, r20
    2476:	68 19       	sub	r22, r8
    2478:	79 09       	sbc	r23, r9
    247a:	8a 09       	sbc	r24, r10
    247c:	9b 09       	sbc	r25, r11
    247e:	40 e0       	ldi	r20, 0x00	; 0
    2480:	ac dc       	rcall	.-1704   	; 0x1dda <prvAddCurrentTaskToDelayedList>
    2482:	d0 de       	rcall	.-608    	; 0x2224 <xTaskResumeAll>
    2484:	81 11       	cpse	r24, r1
    2486:	02 c0       	rjmp	.+4      	; 0x248c <xTaskDelayUntil+0xb0>
    2488:	0e 94 1c 07 	call	0xe38	; 0xe38 <vPortYield>
    248c:	81 2f       	mov	r24, r17
    248e:	df 91       	pop	r29
    2490:	cf 91       	pop	r28
    2492:	1f 91       	pop	r17
    2494:	ff 90       	pop	r15
    2496:	ef 90       	pop	r14
    2498:	df 90       	pop	r13
    249a:	cf 90       	pop	r12
    249c:	bf 90       	pop	r11
    249e:	af 90       	pop	r10
    24a0:	9f 90       	pop	r9
    24a2:	8f 90       	pop	r8
    24a4:	08 95       	ret

000024a6 <vTaskDelay>:
    24a6:	cf 92       	push	r12
    24a8:	df 92       	push	r13
    24aa:	ef 92       	push	r14
    24ac:	ff 92       	push	r15
    24ae:	6b 01       	movw	r12, r22
    24b0:	7c 01       	movw	r14, r24
    24b2:	67 2b       	or	r22, r23
    24b4:	68 2b       	or	r22, r24
    24b6:	69 2b       	or	r22, r25
    24b8:	39 f0       	breq	.+14     	; 0x24c8 <vTaskDelay+0x22>
    24ba:	74 dd       	rcall	.-1304   	; 0x1fa4 <vTaskSuspendAll>
    24bc:	40 e0       	ldi	r20, 0x00	; 0
    24be:	c7 01       	movw	r24, r14
    24c0:	b6 01       	movw	r22, r12
    24c2:	8b dc       	rcall	.-1770   	; 0x1dda <prvAddCurrentTaskToDelayedList>
    24c4:	af de       	rcall	.-674    	; 0x2224 <xTaskResumeAll>
    24c6:	01 c0       	rjmp	.+2      	; 0x24ca <vTaskDelay+0x24>
    24c8:	80 e0       	ldi	r24, 0x00	; 0
    24ca:	81 11       	cpse	r24, r1
    24cc:	02 c0       	rjmp	.+4      	; 0x24d2 <vTaskDelay+0x2c>
    24ce:	0e 94 1c 07 	call	0xe38	; 0xe38 <vPortYield>
    24d2:	ff 90       	pop	r15
    24d4:	ef 90       	pop	r14
    24d6:	df 90       	pop	r13
    24d8:	cf 90       	pop	r12
    24da:	08 95       	ret

000024dc <vTaskSwitchContext>:
    24dc:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    24e0:	88 23       	and	r24, r24
    24e2:	21 f0       	breq	.+8      	; 0x24ec <vTaskSwitchContext+0x10>
    24e4:	81 e0       	ldi	r24, 0x01	; 1
    24e6:	80 93 a3 15 	sts	0x15A3, r24	; 0x8015a3 <xYieldPending>
    24ea:	08 95       	ret
    24ec:	10 92 a3 15 	sts	0x15A3, r1	; 0x8015a3 <xYieldPending>
    24f0:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    24f4:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    24f8:	20 81       	ld	r18, Z
    24fa:	31 81       	ldd	r19, Z+1	; 0x01
    24fc:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2500:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2504:	83 8d       	ldd	r24, Z+27	; 0x1b
    2506:	94 8d       	ldd	r25, Z+28	; 0x1c
    2508:	82 17       	cp	r24, r18
    250a:	93 07       	cpc	r25, r19
    250c:	60 f0       	brcs	.+24     	; 0x2526 <vTaskSwitchContext+0x4a>
    250e:	60 91 4e 16 	lds	r22, 0x164E	; 0x80164e <pxCurrentTCB>
    2512:	70 91 4f 16 	lds	r23, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2516:	63 5e       	subi	r22, 0xE3	; 227
    2518:	7f 4f       	sbci	r23, 0xFF	; 255
    251a:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    251e:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2522:	0e 94 ab 1a 	call	0x3556	; 0x3556 <vApplicationStackOverflowHook>
    2526:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    252a:	01 c0       	rjmp	.+2      	; 0x252e <vTaskSwitchContext+0x52>
    252c:	81 50       	subi	r24, 0x01	; 1
    252e:	28 2f       	mov	r18, r24
    2530:	30 e0       	ldi	r19, 0x00	; 0
    2532:	9b e0       	ldi	r25, 0x0B	; 11
    2534:	92 9f       	mul	r25, r18
    2536:	f0 01       	movw	r30, r0
    2538:	93 9f       	mul	r25, r19
    253a:	f0 0d       	add	r31, r0
    253c:	11 24       	eor	r1, r1
    253e:	e0 52       	subi	r30, 0x20	; 32
    2540:	fa 4e       	sbci	r31, 0xEA	; 234
    2542:	90 81       	ld	r25, Z
    2544:	99 23       	and	r25, r25
    2546:	91 f3       	breq	.-28     	; 0x252c <vTaskSwitchContext+0x50>
    2548:	9b e0       	ldi	r25, 0x0B	; 11
    254a:	92 9f       	mul	r25, r18
    254c:	a0 01       	movw	r20, r0
    254e:	93 9f       	mul	r25, r19
    2550:	50 0d       	add	r21, r0
    2552:	11 24       	eor	r1, r1
    2554:	df 01       	movw	r26, r30
    2556:	01 80       	ldd	r0, Z+1	; 0x01
    2558:	f2 81       	ldd	r31, Z+2	; 0x02
    255a:	e0 2d       	mov	r30, r0
    255c:	04 80       	ldd	r0, Z+4	; 0x04
    255e:	f5 81       	ldd	r31, Z+5	; 0x05
    2560:	e0 2d       	mov	r30, r0
    2562:	12 96       	adiw	r26, 0x02	; 2
    2564:	fc 93       	st	X, r31
    2566:	ee 93       	st	-X, r30
    2568:	11 97       	sbiw	r26, 0x01	; 1
    256a:	4d 51       	subi	r20, 0x1D	; 29
    256c:	5a 4e       	sbci	r21, 0xEA	; 234
    256e:	e4 17       	cp	r30, r20
    2570:	f5 07       	cpc	r31, r21
    2572:	29 f4       	brne	.+10     	; 0x257e <vTaskSwitchContext+0xa2>
    2574:	44 81       	ldd	r20, Z+4	; 0x04
    2576:	55 81       	ldd	r21, Z+5	; 0x05
    2578:	fd 01       	movw	r30, r26
    257a:	52 83       	std	Z+2, r21	; 0x02
    257c:	41 83       	std	Z+1, r20	; 0x01
    257e:	9b e0       	ldi	r25, 0x0B	; 11
    2580:	92 9f       	mul	r25, r18
    2582:	f0 01       	movw	r30, r0
    2584:	93 9f       	mul	r25, r19
    2586:	f0 0d       	add	r31, r0
    2588:	11 24       	eor	r1, r1
    258a:	e0 52       	subi	r30, 0x20	; 32
    258c:	fa 4e       	sbci	r31, 0xEA	; 234
    258e:	01 80       	ldd	r0, Z+1	; 0x01
    2590:	f2 81       	ldd	r31, Z+2	; 0x02
    2592:	e0 2d       	mov	r30, r0
    2594:	20 85       	ldd	r18, Z+8	; 0x08
    2596:	31 85       	ldd	r19, Z+9	; 0x09
    2598:	30 93 4f 16 	sts	0x164F, r19	; 0x80164f <pxCurrentTCB+0x1>
    259c:	20 93 4e 16 	sts	0x164E, r18	; 0x80164e <pxCurrentTCB>
    25a0:	80 93 a9 15 	sts	0x15A9, r24	; 0x8015a9 <uxTopReadyPriority>
    25a4:	08 95       	ret

000025a6 <vTaskPlaceOnEventList>:
    25a6:	cf 92       	push	r12
    25a8:	df 92       	push	r13
    25aa:	ef 92       	push	r14
    25ac:	ff 92       	push	r15
    25ae:	6a 01       	movw	r12, r20
    25b0:	7b 01       	movw	r14, r22
    25b2:	60 91 4e 16 	lds	r22, 0x164E	; 0x80164e <pxCurrentTCB>
    25b6:	70 91 4f 16 	lds	r23, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    25ba:	62 5f       	subi	r22, 0xF2	; 242
    25bc:	7f 4f       	sbci	r23, 0xFF	; 255
    25be:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vListInsert>
    25c2:	41 e0       	ldi	r20, 0x01	; 1
    25c4:	c7 01       	movw	r24, r14
    25c6:	b6 01       	movw	r22, r12
    25c8:	08 dc       	rcall	.-2032   	; 0x1dda <prvAddCurrentTaskToDelayedList>
    25ca:	ff 90       	pop	r15
    25cc:	ef 90       	pop	r14
    25ce:	df 90       	pop	r13
    25d0:	cf 90       	pop	r12
    25d2:	08 95       	ret

000025d4 <vTaskPlaceOnUnorderedEventList>:
    25d4:	0f 93       	push	r16
    25d6:	1f 93       	push	r17
    25d8:	cf 93       	push	r28
    25da:	df 93       	push	r29
    25dc:	fc 01       	movw	r30, r24
    25de:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
    25e2:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    25e6:	70 68       	ori	r23, 0x80	; 128
    25e8:	1e 96       	adiw	r26, 0x0e	; 14
    25ea:	4d 93       	st	X+, r20
    25ec:	5d 93       	st	X+, r21
    25ee:	6d 93       	st	X+, r22
    25f0:	7c 93       	st	X, r23
    25f2:	51 97       	sbiw	r26, 0x11	; 17
    25f4:	a1 81       	ldd	r26, Z+1	; 0x01
    25f6:	b2 81       	ldd	r27, Z+2	; 0x02
    25f8:	c0 91 4e 16 	lds	r28, 0x164E	; 0x80164e <pxCurrentTCB>
    25fc:	d0 91 4f 16 	lds	r29, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2600:	bb 8b       	std	Y+19, r27	; 0x13
    2602:	aa 8b       	std	Y+18, r26	; 0x12
    2604:	c0 91 4e 16 	lds	r28, 0x164E	; 0x80164e <pxCurrentTCB>
    2608:	d0 91 4f 16 	lds	r29, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    260c:	16 96       	adiw	r26, 0x06	; 6
    260e:	8d 91       	ld	r24, X+
    2610:	9c 91       	ld	r25, X
    2612:	17 97       	sbiw	r26, 0x07	; 7
    2614:	9d 8b       	std	Y+21, r25	; 0x15
    2616:	8c 8b       	std	Y+20, r24	; 0x14
    2618:	16 96       	adiw	r26, 0x06	; 6
    261a:	cd 91       	ld	r28, X+
    261c:	dc 91       	ld	r29, X
    261e:	17 97       	sbiw	r26, 0x07	; 7
    2620:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    2624:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2628:	0e 96       	adiw	r24, 0x0e	; 14
    262a:	9d 83       	std	Y+5, r25	; 0x05
    262c:	8c 83       	std	Y+4, r24	; 0x04
    262e:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    2632:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2636:	0e 96       	adiw	r24, 0x0e	; 14
    2638:	17 96       	adiw	r26, 0x07	; 7
    263a:	9c 93       	st	X, r25
    263c:	8e 93       	st	-X, r24
    263e:	16 97       	sbiw	r26, 0x06	; 6
    2640:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
    2644:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2648:	59 96       	adiw	r26, 0x19	; 25
    264a:	fc 93       	st	X, r31
    264c:	ee 93       	st	-X, r30
    264e:	58 97       	sbiw	r26, 0x18	; 24
    2650:	80 81       	ld	r24, Z
    2652:	8f 5f       	subi	r24, 0xFF	; 255
    2654:	80 83       	st	Z, r24
    2656:	41 e0       	ldi	r20, 0x01	; 1
    2658:	c9 01       	movw	r24, r18
    265a:	b8 01       	movw	r22, r16
    265c:	be db       	rcall	.-2180   	; 0x1dda <prvAddCurrentTaskToDelayedList>
    265e:	df 91       	pop	r29
    2660:	cf 91       	pop	r28
    2662:	1f 91       	pop	r17
    2664:	0f 91       	pop	r16
    2666:	08 95       	ret

00002668 <vTaskPlaceOnEventListRestricted>:
    2668:	cf 93       	push	r28
    266a:	df 93       	push	r29
    266c:	fc 01       	movw	r30, r24
    266e:	cb 01       	movw	r24, r22
    2670:	ba 01       	movw	r22, r20
    2672:	a1 81       	ldd	r26, Z+1	; 0x01
    2674:	b2 81       	ldd	r27, Z+2	; 0x02
    2676:	c0 91 4e 16 	lds	r28, 0x164E	; 0x80164e <pxCurrentTCB>
    267a:	d0 91 4f 16 	lds	r29, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    267e:	bb 8b       	std	Y+19, r27	; 0x13
    2680:	aa 8b       	std	Y+18, r26	; 0x12
    2682:	c0 91 4e 16 	lds	r28, 0x164E	; 0x80164e <pxCurrentTCB>
    2686:	d0 91 4f 16 	lds	r29, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    268a:	16 96       	adiw	r26, 0x06	; 6
    268c:	4d 91       	ld	r20, X+
    268e:	5c 91       	ld	r21, X
    2690:	17 97       	sbiw	r26, 0x07	; 7
    2692:	5d 8b       	std	Y+21, r21	; 0x15
    2694:	4c 8b       	std	Y+20, r20	; 0x14
    2696:	16 96       	adiw	r26, 0x06	; 6
    2698:	cd 91       	ld	r28, X+
    269a:	dc 91       	ld	r29, X
    269c:	17 97       	sbiw	r26, 0x07	; 7
    269e:	40 91 4e 16 	lds	r20, 0x164E	; 0x80164e <pxCurrentTCB>
    26a2:	50 91 4f 16 	lds	r21, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    26a6:	42 5f       	subi	r20, 0xF2	; 242
    26a8:	5f 4f       	sbci	r21, 0xFF	; 255
    26aa:	5d 83       	std	Y+5, r21	; 0x05
    26ac:	4c 83       	std	Y+4, r20	; 0x04
    26ae:	40 91 4e 16 	lds	r20, 0x164E	; 0x80164e <pxCurrentTCB>
    26b2:	50 91 4f 16 	lds	r21, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    26b6:	42 5f       	subi	r20, 0xF2	; 242
    26b8:	5f 4f       	sbci	r21, 0xFF	; 255
    26ba:	17 96       	adiw	r26, 0x07	; 7
    26bc:	5c 93       	st	X, r21
    26be:	4e 93       	st	-X, r20
    26c0:	16 97       	sbiw	r26, 0x06	; 6
    26c2:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
    26c6:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    26ca:	59 96       	adiw	r26, 0x19	; 25
    26cc:	fc 93       	st	X, r31
    26ce:	ee 93       	st	-X, r30
    26d0:	58 97       	sbiw	r26, 0x18	; 24
    26d2:	30 81       	ld	r19, Z
    26d4:	3f 5f       	subi	r19, 0xFF	; 255
    26d6:	30 83       	st	Z, r19
    26d8:	22 23       	and	r18, r18
    26da:	19 f0       	breq	.+6      	; 0x26e2 <vTaskPlaceOnEventListRestricted+0x7a>
    26dc:	6f ef       	ldi	r22, 0xFF	; 255
    26de:	7f ef       	ldi	r23, 0xFF	; 255
    26e0:	cb 01       	movw	r24, r22
    26e2:	42 2f       	mov	r20, r18
    26e4:	7a db       	rcall	.-2316   	; 0x1dda <prvAddCurrentTaskToDelayedList>
    26e6:	df 91       	pop	r29
    26e8:	cf 91       	pop	r28
    26ea:	08 95       	ret

000026ec <xTaskRemoveFromEventList>:
    26ec:	cf 93       	push	r28
    26ee:	df 93       	push	r29
    26f0:	dc 01       	movw	r26, r24
    26f2:	17 96       	adiw	r26, 0x07	; 7
    26f4:	ed 91       	ld	r30, X+
    26f6:	fc 91       	ld	r31, X
    26f8:	18 97       	sbiw	r26, 0x08	; 8
    26fa:	00 84       	ldd	r0, Z+8	; 0x08
    26fc:	f1 85       	ldd	r31, Z+9	; 0x09
    26fe:	e0 2d       	mov	r30, r0
    2700:	a0 8d       	ldd	r26, Z+24	; 0x18
    2702:	b1 8d       	ldd	r27, Z+25	; 0x19
    2704:	c2 89       	ldd	r28, Z+18	; 0x12
    2706:	d3 89       	ldd	r29, Z+19	; 0x13
    2708:	84 89       	ldd	r24, Z+20	; 0x14
    270a:	95 89       	ldd	r25, Z+21	; 0x15
    270c:	9f 83       	std	Y+7, r25	; 0x07
    270e:	8e 83       	std	Y+6, r24	; 0x06
    2710:	c4 89       	ldd	r28, Z+20	; 0x14
    2712:	d5 89       	ldd	r29, Z+21	; 0x15
    2714:	82 89       	ldd	r24, Z+18	; 0x12
    2716:	93 89       	ldd	r25, Z+19	; 0x13
    2718:	9d 83       	std	Y+5, r25	; 0x05
    271a:	8c 83       	std	Y+4, r24	; 0x04
    271c:	11 96       	adiw	r26, 0x01	; 1
    271e:	8d 91       	ld	r24, X+
    2720:	9c 91       	ld	r25, X
    2722:	12 97       	sbiw	r26, 0x02	; 2
    2724:	9f 01       	movw	r18, r30
    2726:	22 5f       	subi	r18, 0xF2	; 242
    2728:	3f 4f       	sbci	r19, 0xFF	; 255
    272a:	82 17       	cp	r24, r18
    272c:	93 07       	cpc	r25, r19
    272e:	31 f4       	brne	.+12     	; 0x273c <xTaskRemoveFromEventList+0x50>
    2730:	84 89       	ldd	r24, Z+20	; 0x14
    2732:	95 89       	ldd	r25, Z+21	; 0x15
    2734:	12 96       	adiw	r26, 0x02	; 2
    2736:	9c 93       	st	X, r25
    2738:	8e 93       	st	-X, r24
    273a:	11 97       	sbiw	r26, 0x01	; 1
    273c:	11 8e       	std	Z+25, r1	; 0x19
    273e:	10 8e       	std	Z+24, r1	; 0x18
    2740:	8c 91       	ld	r24, X
    2742:	81 50       	subi	r24, 0x01	; 1
    2744:	8c 93       	st	X, r24
    2746:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    274a:	81 11       	cpse	r24, r1
    274c:	52 c0       	rjmp	.+164    	; 0x27f2 <xTaskRemoveFromEventList+0x106>
    274e:	a4 85       	ldd	r26, Z+12	; 0x0c
    2750:	b5 85       	ldd	r27, Z+13	; 0x0d
    2752:	c6 81       	ldd	r28, Z+6	; 0x06
    2754:	d7 81       	ldd	r29, Z+7	; 0x07
    2756:	80 85       	ldd	r24, Z+8	; 0x08
    2758:	91 85       	ldd	r25, Z+9	; 0x09
    275a:	9f 83       	std	Y+7, r25	; 0x07
    275c:	8e 83       	std	Y+6, r24	; 0x06
    275e:	c0 85       	ldd	r28, Z+8	; 0x08
    2760:	d1 85       	ldd	r29, Z+9	; 0x09
    2762:	86 81       	ldd	r24, Z+6	; 0x06
    2764:	97 81       	ldd	r25, Z+7	; 0x07
    2766:	9d 83       	std	Y+5, r25	; 0x05
    2768:	8c 83       	std	Y+4, r24	; 0x04
    276a:	11 96       	adiw	r26, 0x01	; 1
    276c:	8d 91       	ld	r24, X+
    276e:	9c 91       	ld	r25, X
    2770:	12 97       	sbiw	r26, 0x02	; 2
    2772:	9f 01       	movw	r18, r30
    2774:	2e 5f       	subi	r18, 0xFE	; 254
    2776:	3f 4f       	sbci	r19, 0xFF	; 255
    2778:	82 17       	cp	r24, r18
    277a:	93 07       	cpc	r25, r19
    277c:	31 f4       	brne	.+12     	; 0x278a <xTaskRemoveFromEventList+0x9e>
    277e:	80 85       	ldd	r24, Z+8	; 0x08
    2780:	91 85       	ldd	r25, Z+9	; 0x09
    2782:	12 96       	adiw	r26, 0x02	; 2
    2784:	9c 93       	st	X, r25
    2786:	8e 93       	st	-X, r24
    2788:	11 97       	sbiw	r26, 0x01	; 1
    278a:	15 86       	std	Z+13, r1	; 0x0d
    278c:	14 86       	std	Z+12, r1	; 0x0c
    278e:	8c 91       	ld	r24, X
    2790:	81 50       	subi	r24, 0x01	; 1
    2792:	8c 93       	st	X, r24
    2794:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2796:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    279a:	8a 17       	cp	r24, r26
    279c:	10 f4       	brcc	.+4      	; 0x27a2 <xTaskRemoveFromEventList+0xb6>
    279e:	a0 93 a9 15 	sts	0x15A9, r26	; 0x8015a9 <uxTopReadyPriority>
    27a2:	8b e0       	ldi	r24, 0x0B	; 11
    27a4:	8a 9f       	mul	r24, r26
    27a6:	d0 01       	movw	r26, r0
    27a8:	11 24       	eor	r1, r1
    27aa:	a0 52       	subi	r26, 0x20	; 32
    27ac:	ba 4e       	sbci	r27, 0xEA	; 234
    27ae:	11 96       	adiw	r26, 0x01	; 1
    27b0:	0d 90       	ld	r0, X+
    27b2:	bc 91       	ld	r27, X
    27b4:	a0 2d       	mov	r26, r0
    27b6:	b7 83       	std	Z+7, r27	; 0x07
    27b8:	a6 83       	std	Z+6, r26	; 0x06
    27ba:	16 96       	adiw	r26, 0x06	; 6
    27bc:	4d 91       	ld	r20, X+
    27be:	5c 91       	ld	r21, X
    27c0:	17 97       	sbiw	r26, 0x07	; 7
    27c2:	51 87       	std	Z+9, r21	; 0x09
    27c4:	40 87       	std	Z+8, r20	; 0x08
    27c6:	16 96       	adiw	r26, 0x06	; 6
    27c8:	cd 91       	ld	r28, X+
    27ca:	dc 91       	ld	r29, X
    27cc:	17 97       	sbiw	r26, 0x07	; 7
    27ce:	3d 83       	std	Y+5, r19	; 0x05
    27d0:	2c 83       	std	Y+4, r18	; 0x04
    27d2:	17 96       	adiw	r26, 0x07	; 7
    27d4:	3c 93       	st	X, r19
    27d6:	2e 93       	st	-X, r18
    27d8:	16 97       	sbiw	r26, 0x06	; 6
    27da:	a2 8d       	ldd	r26, Z+26	; 0x1a
    27dc:	8a 9f       	mul	r24, r26
    27de:	d0 01       	movw	r26, r0
    27e0:	11 24       	eor	r1, r1
    27e2:	a0 52       	subi	r26, 0x20	; 32
    27e4:	ba 4e       	sbci	r27, 0xEA	; 234
    27e6:	b5 87       	std	Z+13, r27	; 0x0d
    27e8:	a4 87       	std	Z+12, r26	; 0x0c
    27ea:	8c 91       	ld	r24, X
    27ec:	8f 5f       	subi	r24, 0xFF	; 255
    27ee:	8c 93       	st	X, r24
    27f0:	1c c0       	rjmp	.+56     	; 0x282a <xTaskRemoveFromEventList+0x13e>
    27f2:	4b eb       	ldi	r20, 0xBB	; 187
    27f4:	55 e1       	ldi	r21, 0x15	; 21
    27f6:	da 01       	movw	r26, r20
    27f8:	11 96       	adiw	r26, 0x01	; 1
    27fa:	cd 91       	ld	r28, X+
    27fc:	dc 91       	ld	r29, X
    27fe:	12 97       	sbiw	r26, 0x02	; 2
    2800:	d3 8b       	std	Z+19, r29	; 0x13
    2802:	c2 8b       	std	Z+18, r28	; 0x12
    2804:	8e 81       	ldd	r24, Y+6	; 0x06
    2806:	9f 81       	ldd	r25, Y+7	; 0x07
    2808:	95 8b       	std	Z+21, r25	; 0x15
    280a:	84 8b       	std	Z+20, r24	; 0x14
    280c:	8e 81       	ldd	r24, Y+6	; 0x06
    280e:	9f 81       	ldd	r25, Y+7	; 0x07
    2810:	dc 01       	movw	r26, r24
    2812:	15 96       	adiw	r26, 0x05	; 5
    2814:	3c 93       	st	X, r19
    2816:	2e 93       	st	-X, r18
    2818:	14 97       	sbiw	r26, 0x04	; 4
    281a:	3f 83       	std	Y+7, r19	; 0x07
    281c:	2e 83       	std	Y+6, r18	; 0x06
    281e:	51 8f       	std	Z+25, r21	; 0x19
    2820:	40 8f       	std	Z+24, r20	; 0x18
    2822:	da 01       	movw	r26, r20
    2824:	8c 91       	ld	r24, X
    2826:	8f 5f       	subi	r24, 0xFF	; 255
    2828:	8c 93       	st	X, r24
    282a:	92 8d       	ldd	r25, Z+26	; 0x1a
    282c:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2830:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2834:	82 8d       	ldd	r24, Z+26	; 0x1a
    2836:	89 17       	cp	r24, r25
    2838:	20 f4       	brcc	.+8      	; 0x2842 <xTaskRemoveFromEventList+0x156>
    283a:	81 e0       	ldi	r24, 0x01	; 1
    283c:	80 93 a3 15 	sts	0x15A3, r24	; 0x8015a3 <xYieldPending>
    2840:	01 c0       	rjmp	.+2      	; 0x2844 <xTaskRemoveFromEventList+0x158>
    2842:	80 e0       	ldi	r24, 0x00	; 0
    2844:	df 91       	pop	r29
    2846:	cf 91       	pop	r28
    2848:	08 95       	ret

0000284a <vTaskRemoveFromUnorderedEventList>:
    284a:	cf 93       	push	r28
    284c:	df 93       	push	r29
    284e:	dc 01       	movw	r26, r24
    2850:	70 68       	ori	r23, 0x80	; 128
    2852:	4d 93       	st	X+, r20
    2854:	5d 93       	st	X+, r21
    2856:	6d 93       	st	X+, r22
    2858:	7c 93       	st	X, r23
    285a:	13 97       	sbiw	r26, 0x03	; 3
    285c:	18 96       	adiw	r26, 0x08	; 8
    285e:	ed 91       	ld	r30, X+
    2860:	fc 91       	ld	r31, X
    2862:	19 97       	sbiw	r26, 0x09	; 9
    2864:	1a 96       	adiw	r26, 0x0a	; 10
    2866:	4d 91       	ld	r20, X+
    2868:	5c 91       	ld	r21, X
    286a:	1b 97       	sbiw	r26, 0x0b	; 11
    286c:	14 96       	adiw	r26, 0x04	; 4
    286e:	8d 91       	ld	r24, X+
    2870:	9c 91       	ld	r25, X
    2872:	15 97       	sbiw	r26, 0x05	; 5
    2874:	16 96       	adiw	r26, 0x06	; 6
    2876:	2d 91       	ld	r18, X+
    2878:	3c 91       	ld	r19, X
    287a:	17 97       	sbiw	r26, 0x07	; 7
    287c:	ec 01       	movw	r28, r24
    287e:	3f 83       	std	Y+7, r19	; 0x07
    2880:	2e 83       	std	Y+6, r18	; 0x06
    2882:	16 96       	adiw	r26, 0x06	; 6
    2884:	8d 91       	ld	r24, X+
    2886:	9c 91       	ld	r25, X
    2888:	17 97       	sbiw	r26, 0x07	; 7
    288a:	14 96       	adiw	r26, 0x04	; 4
    288c:	2d 91       	ld	r18, X+
    288e:	3c 91       	ld	r19, X
    2890:	15 97       	sbiw	r26, 0x05	; 5
    2892:	ec 01       	movw	r28, r24
    2894:	3d 83       	std	Y+5, r19	; 0x05
    2896:	2c 83       	std	Y+4, r18	; 0x04
    2898:	ea 01       	movw	r28, r20
    289a:	89 81       	ldd	r24, Y+1	; 0x01
    289c:	9a 81       	ldd	r25, Y+2	; 0x02
    289e:	a8 17       	cp	r26, r24
    28a0:	b9 07       	cpc	r27, r25
    28a2:	31 f4       	brne	.+12     	; 0x28b0 <vTaskRemoveFromUnorderedEventList+0x66>
    28a4:	16 96       	adiw	r26, 0x06	; 6
    28a6:	8d 91       	ld	r24, X+
    28a8:	9c 91       	ld	r25, X
    28aa:	17 97       	sbiw	r26, 0x07	; 7
    28ac:	9a 83       	std	Y+2, r25	; 0x02
    28ae:	89 83       	std	Y+1, r24	; 0x01
    28b0:	1b 96       	adiw	r26, 0x0b	; 11
    28b2:	1c 92       	st	X, r1
    28b4:	1e 92       	st	-X, r1
    28b6:	1a 97       	sbiw	r26, 0x0a	; 10
    28b8:	da 01       	movw	r26, r20
    28ba:	8c 91       	ld	r24, X
    28bc:	81 50       	subi	r24, 0x01	; 1
    28be:	8c 93       	st	X, r24
    28c0:	a4 85       	ldd	r26, Z+12	; 0x0c
    28c2:	b5 85       	ldd	r27, Z+13	; 0x0d
    28c4:	c6 81       	ldd	r28, Z+6	; 0x06
    28c6:	d7 81       	ldd	r29, Z+7	; 0x07
    28c8:	80 85       	ldd	r24, Z+8	; 0x08
    28ca:	91 85       	ldd	r25, Z+9	; 0x09
    28cc:	9f 83       	std	Y+7, r25	; 0x07
    28ce:	8e 83       	std	Y+6, r24	; 0x06
    28d0:	c0 85       	ldd	r28, Z+8	; 0x08
    28d2:	d1 85       	ldd	r29, Z+9	; 0x09
    28d4:	86 81       	ldd	r24, Z+6	; 0x06
    28d6:	97 81       	ldd	r25, Z+7	; 0x07
    28d8:	9d 83       	std	Y+5, r25	; 0x05
    28da:	8c 83       	std	Y+4, r24	; 0x04
    28dc:	11 96       	adiw	r26, 0x01	; 1
    28de:	8d 91       	ld	r24, X+
    28e0:	9c 91       	ld	r25, X
    28e2:	12 97       	sbiw	r26, 0x02	; 2
    28e4:	9f 01       	movw	r18, r30
    28e6:	2e 5f       	subi	r18, 0xFE	; 254
    28e8:	3f 4f       	sbci	r19, 0xFF	; 255
    28ea:	82 17       	cp	r24, r18
    28ec:	93 07       	cpc	r25, r19
    28ee:	31 f4       	brne	.+12     	; 0x28fc <vTaskRemoveFromUnorderedEventList+0xb2>
    28f0:	80 85       	ldd	r24, Z+8	; 0x08
    28f2:	91 85       	ldd	r25, Z+9	; 0x09
    28f4:	12 96       	adiw	r26, 0x02	; 2
    28f6:	9c 93       	st	X, r25
    28f8:	8e 93       	st	-X, r24
    28fa:	11 97       	sbiw	r26, 0x01	; 1
    28fc:	15 86       	std	Z+13, r1	; 0x0d
    28fe:	14 86       	std	Z+12, r1	; 0x0c
    2900:	8c 91       	ld	r24, X
    2902:	81 50       	subi	r24, 0x01	; 1
    2904:	8c 93       	st	X, r24
    2906:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2908:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    290c:	8a 17       	cp	r24, r26
    290e:	10 f4       	brcc	.+4      	; 0x2914 <vTaskRemoveFromUnorderedEventList+0xca>
    2910:	a0 93 a9 15 	sts	0x15A9, r26	; 0x8015a9 <uxTopReadyPriority>
    2914:	8b e0       	ldi	r24, 0x0B	; 11
    2916:	8a 9f       	mul	r24, r26
    2918:	d0 01       	movw	r26, r0
    291a:	11 24       	eor	r1, r1
    291c:	a0 52       	subi	r26, 0x20	; 32
    291e:	ba 4e       	sbci	r27, 0xEA	; 234
    2920:	11 96       	adiw	r26, 0x01	; 1
    2922:	0d 90       	ld	r0, X+
    2924:	bc 91       	ld	r27, X
    2926:	a0 2d       	mov	r26, r0
    2928:	b7 83       	std	Z+7, r27	; 0x07
    292a:	a6 83       	std	Z+6, r26	; 0x06
    292c:	16 96       	adiw	r26, 0x06	; 6
    292e:	4d 91       	ld	r20, X+
    2930:	5c 91       	ld	r21, X
    2932:	17 97       	sbiw	r26, 0x07	; 7
    2934:	51 87       	std	Z+9, r21	; 0x09
    2936:	40 87       	std	Z+8, r20	; 0x08
    2938:	16 96       	adiw	r26, 0x06	; 6
    293a:	cd 91       	ld	r28, X+
    293c:	dc 91       	ld	r29, X
    293e:	17 97       	sbiw	r26, 0x07	; 7
    2940:	3d 83       	std	Y+5, r19	; 0x05
    2942:	2c 83       	std	Y+4, r18	; 0x04
    2944:	17 96       	adiw	r26, 0x07	; 7
    2946:	3c 93       	st	X, r19
    2948:	2e 93       	st	-X, r18
    294a:	16 97       	sbiw	r26, 0x06	; 6
    294c:	a2 8d       	ldd	r26, Z+26	; 0x1a
    294e:	8a 9f       	mul	r24, r26
    2950:	d0 01       	movw	r26, r0
    2952:	11 24       	eor	r1, r1
    2954:	a0 52       	subi	r26, 0x20	; 32
    2956:	ba 4e       	sbci	r27, 0xEA	; 234
    2958:	b5 87       	std	Z+13, r27	; 0x0d
    295a:	a4 87       	std	Z+12, r26	; 0x0c
    295c:	8c 91       	ld	r24, X
    295e:	8f 5f       	subi	r24, 0xFF	; 255
    2960:	8c 93       	st	X, r24
    2962:	92 8d       	ldd	r25, Z+26	; 0x1a
    2964:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2968:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    296c:	82 8d       	ldd	r24, Z+26	; 0x1a
    296e:	89 17       	cp	r24, r25
    2970:	18 f4       	brcc	.+6      	; 0x2978 <vTaskRemoveFromUnorderedEventList+0x12e>
    2972:	81 e0       	ldi	r24, 0x01	; 1
    2974:	80 93 a3 15 	sts	0x15A3, r24	; 0x8015a3 <xYieldPending>
    2978:	df 91       	pop	r29
    297a:	cf 91       	pop	r28
    297c:	08 95       	ret

0000297e <vTaskSetTimeOutState>:
    297e:	0f b6       	in	r0, 0x3f	; 63
    2980:	f8 94       	cli
    2982:	0f 92       	push	r0
    2984:	20 91 a2 15 	lds	r18, 0x15A2	; 0x8015a2 <xNumOfOverflows>
    2988:	fc 01       	movw	r30, r24
    298a:	20 83       	st	Z, r18
    298c:	40 91 aa 15 	lds	r20, 0x15AA	; 0x8015aa <xTickCount>
    2990:	50 91 ab 15 	lds	r21, 0x15AB	; 0x8015ab <xTickCount+0x1>
    2994:	60 91 ac 15 	lds	r22, 0x15AC	; 0x8015ac <xTickCount+0x2>
    2998:	70 91 ad 15 	lds	r23, 0x15AD	; 0x8015ad <xTickCount+0x3>
    299c:	41 83       	std	Z+1, r20	; 0x01
    299e:	52 83       	std	Z+2, r21	; 0x02
    29a0:	63 83       	std	Z+3, r22	; 0x03
    29a2:	74 83       	std	Z+4, r23	; 0x04
    29a4:	0f 90       	pop	r0
    29a6:	0f be       	out	0x3f, r0	; 63
    29a8:	08 95       	ret

000029aa <vTaskInternalSetTimeOutState>:
    29aa:	20 91 a2 15 	lds	r18, 0x15A2	; 0x8015a2 <xNumOfOverflows>
    29ae:	fc 01       	movw	r30, r24
    29b0:	20 83       	st	Z, r18
    29b2:	40 91 aa 15 	lds	r20, 0x15AA	; 0x8015aa <xTickCount>
    29b6:	50 91 ab 15 	lds	r21, 0x15AB	; 0x8015ab <xTickCount+0x1>
    29ba:	60 91 ac 15 	lds	r22, 0x15AC	; 0x8015ac <xTickCount+0x2>
    29be:	70 91 ad 15 	lds	r23, 0x15AD	; 0x8015ad <xTickCount+0x3>
    29c2:	41 83       	std	Z+1, r20	; 0x01
    29c4:	52 83       	std	Z+2, r21	; 0x02
    29c6:	63 83       	std	Z+3, r22	; 0x03
    29c8:	74 83       	std	Z+4, r23	; 0x04
    29ca:	08 95       	ret

000029cc <xTaskCheckForTimeOut>:
    29cc:	8f 92       	push	r8
    29ce:	9f 92       	push	r9
    29d0:	af 92       	push	r10
    29d2:	bf 92       	push	r11
    29d4:	cf 92       	push	r12
    29d6:	df 92       	push	r13
    29d8:	ef 92       	push	r14
    29da:	ff 92       	push	r15
    29dc:	0f 93       	push	r16
    29de:	1f 93       	push	r17
    29e0:	0f b6       	in	r0, 0x3f	; 63
    29e2:	f8 94       	cli
    29e4:	0f 92       	push	r0
    29e6:	c0 90 aa 15 	lds	r12, 0x15AA	; 0x8015aa <xTickCount>
    29ea:	d0 90 ab 15 	lds	r13, 0x15AB	; 0x8015ab <xTickCount+0x1>
    29ee:	e0 90 ac 15 	lds	r14, 0x15AC	; 0x8015ac <xTickCount+0x2>
    29f2:	f0 90 ad 15 	lds	r15, 0x15AD	; 0x8015ad <xTickCount+0x3>
    29f6:	fc 01       	movw	r30, r24
    29f8:	01 81       	ldd	r16, Z+1	; 0x01
    29fa:	12 81       	ldd	r17, Z+2	; 0x02
    29fc:	23 81       	ldd	r18, Z+3	; 0x03
    29fe:	34 81       	ldd	r19, Z+4	; 0x04
    2a00:	46 01       	movw	r8, r12
    2a02:	57 01       	movw	r10, r14
    2a04:	80 1a       	sub	r8, r16
    2a06:	91 0a       	sbc	r9, r17
    2a08:	a2 0a       	sbc	r10, r18
    2a0a:	b3 0a       	sbc	r11, r19
    2a0c:	50 81       	ld	r21, Z
    2a0e:	40 91 a2 15 	lds	r20, 0x15A2	; 0x8015a2 <xNumOfOverflows>
    2a12:	54 17       	cp	r21, r20
    2a14:	61 f0       	breq	.+24     	; 0x2a2e <xTaskCheckForTimeOut+0x62>
    2a16:	c0 16       	cp	r12, r16
    2a18:	d1 06       	cpc	r13, r17
    2a1a:	e2 06       	cpc	r14, r18
    2a1c:	f3 06       	cpc	r15, r19
    2a1e:	38 f0       	brcs	.+14     	; 0x2a2e <xTaskCheckForTimeOut+0x62>
    2a20:	fb 01       	movw	r30, r22
    2a22:	10 82       	st	Z, r1
    2a24:	11 82       	std	Z+1, r1	; 0x01
    2a26:	12 82       	std	Z+2, r1	; 0x02
    2a28:	13 82       	std	Z+3, r1	; 0x03
    2a2a:	81 e0       	ldi	r24, 0x01	; 1
    2a2c:	1b c0       	rjmp	.+54     	; 0x2a64 <xTaskCheckForTimeOut+0x98>
    2a2e:	fb 01       	movw	r30, r22
    2a30:	00 81       	ld	r16, Z
    2a32:	11 81       	ldd	r17, Z+1	; 0x01
    2a34:	22 81       	ldd	r18, Z+2	; 0x02
    2a36:	33 81       	ldd	r19, Z+3	; 0x03
    2a38:	80 16       	cp	r8, r16
    2a3a:	91 06       	cpc	r9, r17
    2a3c:	a2 06       	cpc	r10, r18
    2a3e:	b3 06       	cpc	r11, r19
    2a40:	58 f4       	brcc	.+22     	; 0x2a58 <xTaskCheckForTimeOut+0x8c>
    2a42:	08 19       	sub	r16, r8
    2a44:	19 09       	sbc	r17, r9
    2a46:	2a 09       	sbc	r18, r10
    2a48:	3b 09       	sbc	r19, r11
    2a4a:	00 83       	st	Z, r16
    2a4c:	11 83       	std	Z+1, r17	; 0x01
    2a4e:	22 83       	std	Z+2, r18	; 0x02
    2a50:	33 83       	std	Z+3, r19	; 0x03
    2a52:	ab df       	rcall	.-170    	; 0x29aa <vTaskInternalSetTimeOutState>
    2a54:	80 e0       	ldi	r24, 0x00	; 0
    2a56:	06 c0       	rjmp	.+12     	; 0x2a64 <xTaskCheckForTimeOut+0x98>
    2a58:	fb 01       	movw	r30, r22
    2a5a:	10 82       	st	Z, r1
    2a5c:	11 82       	std	Z+1, r1	; 0x01
    2a5e:	12 82       	std	Z+2, r1	; 0x02
    2a60:	13 82       	std	Z+3, r1	; 0x03
    2a62:	81 e0       	ldi	r24, 0x01	; 1
    2a64:	0f 90       	pop	r0
    2a66:	0f be       	out	0x3f, r0	; 63
    2a68:	1f 91       	pop	r17
    2a6a:	0f 91       	pop	r16
    2a6c:	ff 90       	pop	r15
    2a6e:	ef 90       	pop	r14
    2a70:	df 90       	pop	r13
    2a72:	cf 90       	pop	r12
    2a74:	bf 90       	pop	r11
    2a76:	af 90       	pop	r10
    2a78:	9f 90       	pop	r9
    2a7a:	8f 90       	pop	r8
    2a7c:	08 95       	ret

00002a7e <vTaskMissedYield>:
    2a7e:	81 e0       	ldi	r24, 0x01	; 1
    2a80:	80 93 a3 15 	sts	0x15A3, r24	; 0x8015a3 <xYieldPending>
    2a84:	08 95       	ret

00002a86 <xTaskGetCurrentTaskHandle>:
    2a86:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    2a8a:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2a8e:	08 95       	ret

00002a90 <xTaskGetSchedulerState>:
    2a90:	80 91 a8 15 	lds	r24, 0x15A8	; 0x8015a8 <xSchedulerRunning>
    2a94:	88 23       	and	r24, r24
    2a96:	31 f0       	breq	.+12     	; 0x2aa4 <xTaskGetSchedulerState+0x14>
    2a98:	80 91 9a 15 	lds	r24, 0x159A	; 0x80159a <uxSchedulerSuspended>
    2a9c:	81 11       	cpse	r24, r1
    2a9e:	04 c0       	rjmp	.+8      	; 0x2aa8 <xTaskGetSchedulerState+0x18>
    2aa0:	82 e0       	ldi	r24, 0x02	; 2
    2aa2:	08 95       	ret
    2aa4:	81 e0       	ldi	r24, 0x01	; 1
    2aa6:	08 95       	ret
    2aa8:	80 e0       	ldi	r24, 0x00	; 0
    2aaa:	08 95       	ret

00002aac <xTaskPriorityDisinherit>:
    2aac:	0f 93       	push	r16
    2aae:	1f 93       	push	r17
    2ab0:	cf 93       	push	r28
    2ab2:	df 93       	push	r29
    2ab4:	fc 01       	movw	r30, r24
    2ab6:	89 2b       	or	r24, r25
    2ab8:	09 f4       	brne	.+2      	; 0x2abc <xTaskPriorityDisinherit+0x10>
    2aba:	49 c0       	rjmp	.+146    	; 0x2b4e <xTaskPriorityDisinherit+0xa2>
    2abc:	86 a5       	ldd	r24, Z+46	; 0x2e
    2abe:	81 50       	subi	r24, 0x01	; 1
    2ac0:	86 a7       	std	Z+46, r24	; 0x2e
    2ac2:	22 8d       	ldd	r18, Z+26	; 0x1a
    2ac4:	95 a5       	ldd	r25, Z+45	; 0x2d
    2ac6:	29 17       	cp	r18, r25
    2ac8:	09 f4       	brne	.+2      	; 0x2acc <xTaskPriorityDisinherit+0x20>
    2aca:	43 c0       	rjmp	.+134    	; 0x2b52 <xTaskPriorityDisinherit+0xa6>
    2acc:	81 11       	cpse	r24, r1
    2ace:	43 c0       	rjmp	.+134    	; 0x2b56 <xTaskPriorityDisinherit+0xaa>
    2ad0:	ef 01       	movw	r28, r30
    2ad2:	8f 01       	movw	r16, r30
    2ad4:	0e 5f       	subi	r16, 0xFE	; 254
    2ad6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ad8:	c8 01       	movw	r24, r16
    2ada:	0e 94 a0 06 	call	0xd40	; 0xd40 <uxListRemove>
    2ade:	ed a5       	ldd	r30, Y+45	; 0x2d
    2ae0:	ea 8f       	std	Y+26, r30	; 0x1a
    2ae2:	8a e0       	ldi	r24, 0x0A	; 10
    2ae4:	90 e0       	ldi	r25, 0x00	; 0
    2ae6:	a0 e0       	ldi	r26, 0x00	; 0
    2ae8:	b0 e0       	ldi	r27, 0x00	; 0
    2aea:	8e 1b       	sub	r24, r30
    2aec:	91 09       	sbc	r25, r1
    2aee:	a1 09       	sbc	r26, r1
    2af0:	b1 09       	sbc	r27, r1
    2af2:	8e 87       	std	Y+14, r24	; 0x0e
    2af4:	9f 87       	std	Y+15, r25	; 0x0f
    2af6:	a8 8b       	std	Y+16, r26	; 0x10
    2af8:	b9 8b       	std	Y+17, r27	; 0x11
    2afa:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    2afe:	8e 17       	cp	r24, r30
    2b00:	10 f4       	brcc	.+4      	; 0x2b06 <xTaskPriorityDisinherit+0x5a>
    2b02:	e0 93 a9 15 	sts	0x15A9, r30	; 0x8015a9 <uxTopReadyPriority>
    2b06:	8b e0       	ldi	r24, 0x0B	; 11
    2b08:	8e 9f       	mul	r24, r30
    2b0a:	f0 01       	movw	r30, r0
    2b0c:	11 24       	eor	r1, r1
    2b0e:	e0 52       	subi	r30, 0x20	; 32
    2b10:	fa 4e       	sbci	r31, 0xEA	; 234
    2b12:	01 80       	ldd	r0, Z+1	; 0x01
    2b14:	f2 81       	ldd	r31, Z+2	; 0x02
    2b16:	e0 2d       	mov	r30, r0
    2b18:	ff 83       	std	Y+7, r31	; 0x07
    2b1a:	ee 83       	std	Y+6, r30	; 0x06
    2b1c:	26 81       	ldd	r18, Z+6	; 0x06
    2b1e:	37 81       	ldd	r19, Z+7	; 0x07
    2b20:	39 87       	std	Y+9, r19	; 0x09
    2b22:	28 87       	std	Y+8, r18	; 0x08
    2b24:	a6 81       	ldd	r26, Z+6	; 0x06
    2b26:	b7 81       	ldd	r27, Z+7	; 0x07
    2b28:	15 96       	adiw	r26, 0x05	; 5
    2b2a:	1c 93       	st	X, r17
    2b2c:	0e 93       	st	-X, r16
    2b2e:	14 97       	sbiw	r26, 0x04	; 4
    2b30:	17 83       	std	Z+7, r17	; 0x07
    2b32:	06 83       	std	Z+6, r16	; 0x06
    2b34:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2b36:	8e 9f       	mul	r24, r30
    2b38:	f0 01       	movw	r30, r0
    2b3a:	11 24       	eor	r1, r1
    2b3c:	e0 52       	subi	r30, 0x20	; 32
    2b3e:	fa 4e       	sbci	r31, 0xEA	; 234
    2b40:	fd 87       	std	Y+13, r31	; 0x0d
    2b42:	ec 87       	std	Y+12, r30	; 0x0c
    2b44:	80 81       	ld	r24, Z
    2b46:	8f 5f       	subi	r24, 0xFF	; 255
    2b48:	80 83       	st	Z, r24
    2b4a:	81 e0       	ldi	r24, 0x01	; 1
    2b4c:	05 c0       	rjmp	.+10     	; 0x2b58 <xTaskPriorityDisinherit+0xac>
    2b4e:	80 e0       	ldi	r24, 0x00	; 0
    2b50:	03 c0       	rjmp	.+6      	; 0x2b58 <xTaskPriorityDisinherit+0xac>
    2b52:	80 e0       	ldi	r24, 0x00	; 0
    2b54:	01 c0       	rjmp	.+2      	; 0x2b58 <xTaskPriorityDisinherit+0xac>
    2b56:	80 e0       	ldi	r24, 0x00	; 0
    2b58:	df 91       	pop	r29
    2b5a:	cf 91       	pop	r28
    2b5c:	1f 91       	pop	r17
    2b5e:	0f 91       	pop	r16
    2b60:	08 95       	ret

00002b62 <uxTaskResetEventItemValue>:
    2b62:	cf 92       	push	r12
    2b64:	df 92       	push	r13
    2b66:	ef 92       	push	r14
    2b68:	ff 92       	push	r15
    2b6a:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2b6e:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2b72:	66 85       	ldd	r22, Z+14	; 0x0e
    2b74:	77 85       	ldd	r23, Z+15	; 0x0f
    2b76:	80 89       	ldd	r24, Z+16	; 0x10
    2b78:	91 89       	ldd	r25, Z+17	; 0x11
    2b7a:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2b7e:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2b82:	a0 91 4e 16 	lds	r26, 0x164E	; 0x80164e <pxCurrentTCB>
    2b86:	b0 91 4f 16 	lds	r27, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2b8a:	5a 96       	adiw	r26, 0x1a	; 26
    2b8c:	2c 91       	ld	r18, X
    2b8e:	0f 2e       	mov	r0, r31
    2b90:	fa e0       	ldi	r31, 0x0A	; 10
    2b92:	cf 2e       	mov	r12, r31
    2b94:	d1 2c       	mov	r13, r1
    2b96:	e1 2c       	mov	r14, r1
    2b98:	f1 2c       	mov	r15, r1
    2b9a:	f0 2d       	mov	r31, r0
    2b9c:	c2 1a       	sub	r12, r18
    2b9e:	d1 08       	sbc	r13, r1
    2ba0:	e1 08       	sbc	r14, r1
    2ba2:	f1 08       	sbc	r15, r1
    2ba4:	c6 86       	std	Z+14, r12	; 0x0e
    2ba6:	d7 86       	std	Z+15, r13	; 0x0f
    2ba8:	e0 8a       	std	Z+16, r14	; 0x10
    2baa:	f1 8a       	std	Z+17, r15	; 0x11
    2bac:	ff 90       	pop	r15
    2bae:	ef 90       	pop	r14
    2bb0:	df 90       	pop	r13
    2bb2:	cf 90       	pop	r12
    2bb4:	08 95       	ret

00002bb6 <xTaskGenericNotifyWait>:
    2bb6:	4f 92       	push	r4
    2bb8:	5f 92       	push	r5
    2bba:	6f 92       	push	r6
    2bbc:	7f 92       	push	r7
    2bbe:	af 92       	push	r10
    2bc0:	bf 92       	push	r11
    2bc2:	cf 92       	push	r12
    2bc4:	df 92       	push	r13
    2bc6:	ef 92       	push	r14
    2bc8:	ff 92       	push	r15
    2bca:	0f 93       	push	r16
    2bcc:	1f 93       	push	r17
    2bce:	cf 93       	push	r28
    2bd0:	df 93       	push	r29
    2bd2:	28 01       	movw	r4, r16
    2bd4:	39 01       	movw	r6, r18
    2bd6:	0f b6       	in	r0, 0x3f	; 63
    2bd8:	f8 94       	cli
    2bda:	0f 92       	push	r0
    2bdc:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2be0:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2be4:	c8 2f       	mov	r28, r24
    2be6:	d0 e0       	ldi	r29, 0x00	; 0
    2be8:	ec 0f       	add	r30, r28
    2bea:	fd 1f       	adc	r31, r29
    2bec:	83 a9       	ldd	r24, Z+51	; 0x33
    2bee:	82 30       	cpi	r24, 0x02	; 2
    2bf0:	71 f1       	breq	.+92     	; 0x2c4e <xTaskGenericNotifyWait+0x98>
    2bf2:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2bf6:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2bfa:	ce 01       	movw	r24, r28
    2bfc:	88 0f       	add	r24, r24
    2bfe:	99 1f       	adc	r25, r25
    2c00:	88 0f       	add	r24, r24
    2c02:	99 1f       	adc	r25, r25
    2c04:	e8 0f       	add	r30, r24
    2c06:	f9 1f       	adc	r31, r25
    2c08:	87 a5       	ldd	r24, Z+47	; 0x2f
    2c0a:	90 a9       	ldd	r25, Z+48	; 0x30
    2c0c:	a1 a9       	ldd	r26, Z+49	; 0x31
    2c0e:	b2 a9       	ldd	r27, Z+50	; 0x32
    2c10:	40 95       	com	r20
    2c12:	50 95       	com	r21
    2c14:	60 95       	com	r22
    2c16:	70 95       	com	r23
    2c18:	48 23       	and	r20, r24
    2c1a:	59 23       	and	r21, r25
    2c1c:	6a 23       	and	r22, r26
    2c1e:	7b 23       	and	r23, r27
    2c20:	47 a7       	std	Z+47, r20	; 0x2f
    2c22:	50 ab       	std	Z+48, r21	; 0x30
    2c24:	61 ab       	std	Z+49, r22	; 0x31
    2c26:	72 ab       	std	Z+50, r23	; 0x32
    2c28:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2c2c:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2c30:	ec 0f       	add	r30, r28
    2c32:	fd 1f       	adc	r31, r29
    2c34:	81 e0       	ldi	r24, 0x01	; 1
    2c36:	83 ab       	std	Z+51, r24	; 0x33
    2c38:	a1 14       	cp	r10, r1
    2c3a:	b1 04       	cpc	r11, r1
    2c3c:	c1 04       	cpc	r12, r1
    2c3e:	d1 04       	cpc	r13, r1
    2c40:	31 f0       	breq	.+12     	; 0x2c4e <xTaskGenericNotifyWait+0x98>
    2c42:	41 e0       	ldi	r20, 0x01	; 1
    2c44:	c6 01       	movw	r24, r12
    2c46:	b5 01       	movw	r22, r10
    2c48:	c8 d8       	rcall	.-3696   	; 0x1dda <prvAddCurrentTaskToDelayedList>
    2c4a:	0e 94 1c 07 	call	0xe38	; 0xe38 <vPortYield>
    2c4e:	0f 90       	pop	r0
    2c50:	0f be       	out	0x3f, r0	; 63
    2c52:	0f b6       	in	r0, 0x3f	; 63
    2c54:	f8 94       	cli
    2c56:	0f 92       	push	r0
    2c58:	e1 14       	cp	r14, r1
    2c5a:	f1 04       	cpc	r15, r1
    2c5c:	a1 f0       	breq	.+40     	; 0x2c86 <xTaskGenericNotifyWait+0xd0>
    2c5e:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2c62:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2c66:	ce 01       	movw	r24, r28
    2c68:	88 0f       	add	r24, r24
    2c6a:	99 1f       	adc	r25, r25
    2c6c:	88 0f       	add	r24, r24
    2c6e:	99 1f       	adc	r25, r25
    2c70:	e8 0f       	add	r30, r24
    2c72:	f9 1f       	adc	r31, r25
    2c74:	87 a5       	ldd	r24, Z+47	; 0x2f
    2c76:	90 a9       	ldd	r25, Z+48	; 0x30
    2c78:	a1 a9       	ldd	r26, Z+49	; 0x31
    2c7a:	b2 a9       	ldd	r27, Z+50	; 0x32
    2c7c:	f7 01       	movw	r30, r14
    2c7e:	80 83       	st	Z, r24
    2c80:	91 83       	std	Z+1, r25	; 0x01
    2c82:	a2 83       	std	Z+2, r26	; 0x02
    2c84:	b3 83       	std	Z+3, r27	; 0x03
    2c86:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2c8a:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2c8e:	ec 0f       	add	r30, r28
    2c90:	fd 1f       	adc	r31, r29
    2c92:	83 a9       	ldd	r24, Z+51	; 0x33
    2c94:	82 30       	cpi	r24, 0x02	; 2
    2c96:	e9 f4       	brne	.+58     	; 0x2cd2 <xTaskGenericNotifyWait+0x11c>
    2c98:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2c9c:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2ca0:	ce 01       	movw	r24, r28
    2ca2:	88 0f       	add	r24, r24
    2ca4:	99 1f       	adc	r25, r25
    2ca6:	88 0f       	add	r24, r24
    2ca8:	99 1f       	adc	r25, r25
    2caa:	e8 0f       	add	r30, r24
    2cac:	f9 1f       	adc	r31, r25
    2cae:	87 a5       	ldd	r24, Z+47	; 0x2f
    2cb0:	90 a9       	ldd	r25, Z+48	; 0x30
    2cb2:	a1 a9       	ldd	r26, Z+49	; 0x31
    2cb4:	b2 a9       	ldd	r27, Z+50	; 0x32
    2cb6:	40 94       	com	r4
    2cb8:	50 94       	com	r5
    2cba:	60 94       	com	r6
    2cbc:	70 94       	com	r7
    2cbe:	48 22       	and	r4, r24
    2cc0:	59 22       	and	r5, r25
    2cc2:	6a 22       	and	r6, r26
    2cc4:	7b 22       	and	r7, r27
    2cc6:	47 a6       	std	Z+47, r4	; 0x2f
    2cc8:	50 aa       	std	Z+48, r5	; 0x30
    2cca:	61 aa       	std	Z+49, r6	; 0x31
    2ccc:	72 aa       	std	Z+50, r7	; 0x32
    2cce:	81 e0       	ldi	r24, 0x01	; 1
    2cd0:	01 c0       	rjmp	.+2      	; 0x2cd4 <xTaskGenericNotifyWait+0x11e>
    2cd2:	80 e0       	ldi	r24, 0x00	; 0
    2cd4:	20 91 4e 16 	lds	r18, 0x164E	; 0x80164e <pxCurrentTCB>
    2cd8:	30 91 4f 16 	lds	r19, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2cdc:	c2 0f       	add	r28, r18
    2cde:	d3 1f       	adc	r29, r19
    2ce0:	1b aa       	std	Y+51, r1	; 0x33
    2ce2:	0f 90       	pop	r0
    2ce4:	0f be       	out	0x3f, r0	; 63
    2ce6:	df 91       	pop	r29
    2ce8:	cf 91       	pop	r28
    2cea:	1f 91       	pop	r17
    2cec:	0f 91       	pop	r16
    2cee:	ff 90       	pop	r15
    2cf0:	ef 90       	pop	r14
    2cf2:	df 90       	pop	r13
    2cf4:	cf 90       	pop	r12
    2cf6:	bf 90       	pop	r11
    2cf8:	af 90       	pop	r10
    2cfa:	7f 90       	pop	r7
    2cfc:	6f 90       	pop	r6
    2cfe:	5f 90       	pop	r5
    2d00:	4f 90       	pop	r4
    2d02:	08 95       	ret

00002d04 <xTaskGenericNotify>:
    2d04:	8f 92       	push	r8
    2d06:	9f 92       	push	r9
    2d08:	af 92       	push	r10
    2d0a:	bf 92       	push	r11
    2d0c:	ef 92       	push	r14
    2d0e:	ff 92       	push	r15
    2d10:	0f 93       	push	r16
    2d12:	cf 93       	push	r28
    2d14:	df 93       	push	r29
    2d16:	dc 01       	movw	r26, r24
    2d18:	0f b6       	in	r0, 0x3f	; 63
    2d1a:	f8 94       	cli
    2d1c:	0f 92       	push	r0
    2d1e:	e1 14       	cp	r14, r1
    2d20:	f1 04       	cpc	r15, r1
    2d22:	89 f0       	breq	.+34     	; 0x2d46 <xTaskGenericNotify+0x42>
    2d24:	e6 2f       	mov	r30, r22
    2d26:	f0 e0       	ldi	r31, 0x00	; 0
    2d28:	ee 0f       	add	r30, r30
    2d2a:	ff 1f       	adc	r31, r31
    2d2c:	ee 0f       	add	r30, r30
    2d2e:	ff 1f       	adc	r31, r31
    2d30:	e8 0f       	add	r30, r24
    2d32:	f9 1f       	adc	r31, r25
    2d34:	87 a4       	ldd	r8, Z+47	; 0x2f
    2d36:	90 a8       	ldd	r9, Z+48	; 0x30
    2d38:	a1 a8       	ldd	r10, Z+49	; 0x31
    2d3a:	b2 a8       	ldd	r11, Z+50	; 0x32
    2d3c:	f7 01       	movw	r30, r14
    2d3e:	80 82       	st	Z, r8
    2d40:	91 82       	std	Z+1, r9	; 0x01
    2d42:	a2 82       	std	Z+2, r10	; 0x02
    2d44:	b3 82       	std	Z+3, r11	; 0x03
    2d46:	70 e0       	ldi	r23, 0x00	; 0
    2d48:	fd 01       	movw	r30, r26
    2d4a:	e6 0f       	add	r30, r22
    2d4c:	f7 1f       	adc	r31, r23
    2d4e:	83 a9       	ldd	r24, Z+51	; 0x33
    2d50:	92 e0       	ldi	r25, 0x02	; 2
    2d52:	93 ab       	std	Z+51, r25	; 0x33
    2d54:	02 30       	cpi	r16, 0x02	; 2
    2d56:	01 f1       	breq	.+64     	; 0x2d98 <xTaskGenericNotify+0x94>
    2d58:	18 f4       	brcc	.+6      	; 0x2d60 <xTaskGenericNotify+0x5c>
    2d5a:	01 30       	cpi	r16, 0x01	; 1
    2d5c:	31 f0       	breq	.+12     	; 0x2d6a <xTaskGenericNotify+0x66>
    2d5e:	4d c0       	rjmp	.+154    	; 0x2dfa <xTaskGenericNotify+0xf6>
    2d60:	03 30       	cpi	r16, 0x03	; 3
    2d62:	79 f1       	breq	.+94     	; 0x2dc2 <xTaskGenericNotify+0xbe>
    2d64:	04 30       	cpi	r16, 0x04	; 4
    2d66:	d1 f1       	breq	.+116    	; 0x2ddc <xTaskGenericNotify+0xd8>
    2d68:	48 c0       	rjmp	.+144    	; 0x2dfa <xTaskGenericNotify+0xf6>
    2d6a:	66 0f       	add	r22, r22
    2d6c:	77 1f       	adc	r23, r23
    2d6e:	66 0f       	add	r22, r22
    2d70:	77 1f       	adc	r23, r23
    2d72:	fd 01       	movw	r30, r26
    2d74:	e6 0f       	add	r30, r22
    2d76:	f7 1f       	adc	r31, r23
    2d78:	87 a4       	ldd	r8, Z+47	; 0x2f
    2d7a:	90 a8       	ldd	r9, Z+48	; 0x30
    2d7c:	a1 a8       	ldd	r10, Z+49	; 0x31
    2d7e:	b2 a8       	ldd	r11, Z+50	; 0x32
    2d80:	ba 01       	movw	r22, r20
    2d82:	a9 01       	movw	r20, r18
    2d84:	48 29       	or	r20, r8
    2d86:	59 29       	or	r21, r9
    2d88:	6a 29       	or	r22, r10
    2d8a:	7b 29       	or	r23, r11
    2d8c:	47 a7       	std	Z+47, r20	; 0x2f
    2d8e:	50 ab       	std	Z+48, r21	; 0x30
    2d90:	61 ab       	std	Z+49, r22	; 0x31
    2d92:	72 ab       	std	Z+50, r23	; 0x32
    2d94:	01 e0       	ldi	r16, 0x01	; 1
    2d96:	34 c0       	rjmp	.+104    	; 0x2e00 <xTaskGenericNotify+0xfc>
    2d98:	66 0f       	add	r22, r22
    2d9a:	77 1f       	adc	r23, r23
    2d9c:	66 0f       	add	r22, r22
    2d9e:	77 1f       	adc	r23, r23
    2da0:	fd 01       	movw	r30, r26
    2da2:	e6 0f       	add	r30, r22
    2da4:	f7 1f       	adc	r31, r23
    2da6:	47 a5       	ldd	r20, Z+47	; 0x2f
    2da8:	50 a9       	ldd	r21, Z+48	; 0x30
    2daa:	61 a9       	ldd	r22, Z+49	; 0x31
    2dac:	72 a9       	ldd	r23, Z+50	; 0x32
    2dae:	4f 5f       	subi	r20, 0xFF	; 255
    2db0:	5f 4f       	sbci	r21, 0xFF	; 255
    2db2:	6f 4f       	sbci	r22, 0xFF	; 255
    2db4:	7f 4f       	sbci	r23, 0xFF	; 255
    2db6:	47 a7       	std	Z+47, r20	; 0x2f
    2db8:	50 ab       	std	Z+48, r21	; 0x30
    2dba:	61 ab       	std	Z+49, r22	; 0x31
    2dbc:	72 ab       	std	Z+50, r23	; 0x32
    2dbe:	01 e0       	ldi	r16, 0x01	; 1
    2dc0:	1f c0       	rjmp	.+62     	; 0x2e00 <xTaskGenericNotify+0xfc>
    2dc2:	66 0f       	add	r22, r22
    2dc4:	77 1f       	adc	r23, r23
    2dc6:	66 0f       	add	r22, r22
    2dc8:	77 1f       	adc	r23, r23
    2dca:	fd 01       	movw	r30, r26
    2dcc:	e6 0f       	add	r30, r22
    2dce:	f7 1f       	adc	r31, r23
    2dd0:	27 a7       	std	Z+47, r18	; 0x2f
    2dd2:	30 ab       	std	Z+48, r19	; 0x30
    2dd4:	41 ab       	std	Z+49, r20	; 0x31
    2dd6:	52 ab       	std	Z+50, r21	; 0x32
    2dd8:	01 e0       	ldi	r16, 0x01	; 1
    2dda:	12 c0       	rjmp	.+36     	; 0x2e00 <xTaskGenericNotify+0xfc>
    2ddc:	82 30       	cpi	r24, 0x02	; 2
    2dde:	79 f0       	breq	.+30     	; 0x2dfe <xTaskGenericNotify+0xfa>
    2de0:	66 0f       	add	r22, r22
    2de2:	77 1f       	adc	r23, r23
    2de4:	66 0f       	add	r22, r22
    2de6:	77 1f       	adc	r23, r23
    2de8:	fd 01       	movw	r30, r26
    2dea:	e6 0f       	add	r30, r22
    2dec:	f7 1f       	adc	r31, r23
    2dee:	27 a7       	std	Z+47, r18	; 0x2f
    2df0:	30 ab       	std	Z+48, r19	; 0x30
    2df2:	41 ab       	std	Z+49, r20	; 0x31
    2df4:	52 ab       	std	Z+50, r21	; 0x32
    2df6:	01 e0       	ldi	r16, 0x01	; 1
    2df8:	03 c0       	rjmp	.+6      	; 0x2e00 <xTaskGenericNotify+0xfc>
    2dfa:	01 e0       	ldi	r16, 0x01	; 1
    2dfc:	01 c0       	rjmp	.+2      	; 0x2e00 <xTaskGenericNotify+0xfc>
    2dfe:	00 e0       	ldi	r16, 0x00	; 0
    2e00:	81 30       	cpi	r24, 0x01	; 1
    2e02:	09 f0       	breq	.+2      	; 0x2e06 <xTaskGenericNotify+0x102>
    2e04:	69 c0       	rjmp	.+210    	; 0x2ed8 <xTaskGenericNotify+0x1d4>
    2e06:	1c 96       	adiw	r26, 0x0c	; 12
    2e08:	ed 91       	ld	r30, X+
    2e0a:	fc 91       	ld	r31, X
    2e0c:	1d 97       	sbiw	r26, 0x0d	; 13
    2e0e:	16 96       	adiw	r26, 0x06	; 6
    2e10:	cd 91       	ld	r28, X+
    2e12:	dc 91       	ld	r29, X
    2e14:	17 97       	sbiw	r26, 0x07	; 7
    2e16:	18 96       	adiw	r26, 0x08	; 8
    2e18:	8d 91       	ld	r24, X+
    2e1a:	9c 91       	ld	r25, X
    2e1c:	19 97       	sbiw	r26, 0x09	; 9
    2e1e:	9f 83       	std	Y+7, r25	; 0x07
    2e20:	8e 83       	std	Y+6, r24	; 0x06
    2e22:	18 96       	adiw	r26, 0x08	; 8
    2e24:	cd 91       	ld	r28, X+
    2e26:	dc 91       	ld	r29, X
    2e28:	19 97       	sbiw	r26, 0x09	; 9
    2e2a:	16 96       	adiw	r26, 0x06	; 6
    2e2c:	8d 91       	ld	r24, X+
    2e2e:	9c 91       	ld	r25, X
    2e30:	17 97       	sbiw	r26, 0x07	; 7
    2e32:	9d 83       	std	Y+5, r25	; 0x05
    2e34:	8c 83       	std	Y+4, r24	; 0x04
    2e36:	81 81       	ldd	r24, Z+1	; 0x01
    2e38:	92 81       	ldd	r25, Z+2	; 0x02
    2e3a:	9d 01       	movw	r18, r26
    2e3c:	2e 5f       	subi	r18, 0xFE	; 254
    2e3e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e40:	82 17       	cp	r24, r18
    2e42:	93 07       	cpc	r25, r19
    2e44:	31 f4       	brne	.+12     	; 0x2e52 <xTaskGenericNotify+0x14e>
    2e46:	18 96       	adiw	r26, 0x08	; 8
    2e48:	8d 91       	ld	r24, X+
    2e4a:	9c 91       	ld	r25, X
    2e4c:	19 97       	sbiw	r26, 0x09	; 9
    2e4e:	92 83       	std	Z+2, r25	; 0x02
    2e50:	81 83       	std	Z+1, r24	; 0x01
    2e52:	1d 96       	adiw	r26, 0x0d	; 13
    2e54:	1c 92       	st	X, r1
    2e56:	1e 92       	st	-X, r1
    2e58:	1c 97       	sbiw	r26, 0x0c	; 12
    2e5a:	80 81       	ld	r24, Z
    2e5c:	81 50       	subi	r24, 0x01	; 1
    2e5e:	80 83       	st	Z, r24
    2e60:	5a 96       	adiw	r26, 0x1a	; 26
    2e62:	ec 91       	ld	r30, X
    2e64:	5a 97       	sbiw	r26, 0x1a	; 26
    2e66:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <uxTopReadyPriority>
    2e6a:	8e 17       	cp	r24, r30
    2e6c:	10 f4       	brcc	.+4      	; 0x2e72 <xTaskGenericNotify+0x16e>
    2e6e:	e0 93 a9 15 	sts	0x15A9, r30	; 0x8015a9 <uxTopReadyPriority>
    2e72:	8b e0       	ldi	r24, 0x0B	; 11
    2e74:	8e 9f       	mul	r24, r30
    2e76:	f0 01       	movw	r30, r0
    2e78:	11 24       	eor	r1, r1
    2e7a:	e0 52       	subi	r30, 0x20	; 32
    2e7c:	fa 4e       	sbci	r31, 0xEA	; 234
    2e7e:	01 80       	ldd	r0, Z+1	; 0x01
    2e80:	f2 81       	ldd	r31, Z+2	; 0x02
    2e82:	e0 2d       	mov	r30, r0
    2e84:	17 96       	adiw	r26, 0x07	; 7
    2e86:	fc 93       	st	X, r31
    2e88:	ee 93       	st	-X, r30
    2e8a:	16 97       	sbiw	r26, 0x06	; 6
    2e8c:	46 81       	ldd	r20, Z+6	; 0x06
    2e8e:	57 81       	ldd	r21, Z+7	; 0x07
    2e90:	19 96       	adiw	r26, 0x09	; 9
    2e92:	5c 93       	st	X, r21
    2e94:	4e 93       	st	-X, r20
    2e96:	18 97       	sbiw	r26, 0x08	; 8
    2e98:	c6 81       	ldd	r28, Z+6	; 0x06
    2e9a:	d7 81       	ldd	r29, Z+7	; 0x07
    2e9c:	3d 83       	std	Y+5, r19	; 0x05
    2e9e:	2c 83       	std	Y+4, r18	; 0x04
    2ea0:	37 83       	std	Z+7, r19	; 0x07
    2ea2:	26 83       	std	Z+6, r18	; 0x06
    2ea4:	5a 96       	adiw	r26, 0x1a	; 26
    2ea6:	ec 91       	ld	r30, X
    2ea8:	5a 97       	sbiw	r26, 0x1a	; 26
    2eaa:	8e 9f       	mul	r24, r30
    2eac:	f0 01       	movw	r30, r0
    2eae:	11 24       	eor	r1, r1
    2eb0:	e0 52       	subi	r30, 0x20	; 32
    2eb2:	fa 4e       	sbci	r31, 0xEA	; 234
    2eb4:	1d 96       	adiw	r26, 0x0d	; 13
    2eb6:	fc 93       	st	X, r31
    2eb8:	ee 93       	st	-X, r30
    2eba:	1c 97       	sbiw	r26, 0x0c	; 12
    2ebc:	80 81       	ld	r24, Z
    2ebe:	8f 5f       	subi	r24, 0xFF	; 255
    2ec0:	80 83       	st	Z, r24
    2ec2:	5a 96       	adiw	r26, 0x1a	; 26
    2ec4:	9c 91       	ld	r25, X
    2ec6:	e0 91 4e 16 	lds	r30, 0x164E	; 0x80164e <pxCurrentTCB>
    2eca:	f0 91 4f 16 	lds	r31, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2ece:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ed0:	89 17       	cp	r24, r25
    2ed2:	10 f4       	brcc	.+4      	; 0x2ed8 <xTaskGenericNotify+0x1d4>
    2ed4:	0e 94 1c 07 	call	0xe38	; 0xe38 <vPortYield>
    2ed8:	0f 90       	pop	r0
    2eda:	0f be       	out	0x3f, r0	; 63
    2edc:	80 2f       	mov	r24, r16
    2ede:	df 91       	pop	r29
    2ee0:	cf 91       	pop	r28
    2ee2:	0f 91       	pop	r16
    2ee4:	ff 90       	pop	r15
    2ee6:	ef 90       	pop	r14
    2ee8:	bf 90       	pop	r11
    2eea:	af 90       	pop	r10
    2eec:	9f 90       	pop	r9
    2eee:	8f 90       	pop	r8
    2ef0:	08 95       	ret

00002ef2 <xTaskGenericNotifyStateClear>:
    2ef2:	00 97       	sbiw	r24, 0x00	; 0
    2ef4:	21 f4       	brne	.+8      	; 0x2efe <xTaskGenericNotifyStateClear+0xc>
    2ef6:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <pxCurrentTCB>
    2efa:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <pxCurrentTCB+0x1>
    2efe:	0f b6       	in	r0, 0x3f	; 63
    2f00:	f8 94       	cli
    2f02:	0f 92       	push	r0
    2f04:	70 e0       	ldi	r23, 0x00	; 0
    2f06:	fc 01       	movw	r30, r24
    2f08:	e6 0f       	add	r30, r22
    2f0a:	f7 1f       	adc	r31, r23
    2f0c:	23 a9       	ldd	r18, Z+51	; 0x33
    2f0e:	22 30       	cpi	r18, 0x02	; 2
    2f10:	31 f4       	brne	.+12     	; 0x2f1e <xTaskGenericNotifyStateClear+0x2c>
    2f12:	fc 01       	movw	r30, r24
    2f14:	e6 0f       	add	r30, r22
    2f16:	f7 1f       	adc	r31, r23
    2f18:	13 aa       	std	Z+51, r1	; 0x33
    2f1a:	81 e0       	ldi	r24, 0x01	; 1
    2f1c:	01 c0       	rjmp	.+2      	; 0x2f20 <xTaskGenericNotifyStateClear+0x2e>
    2f1e:	80 e0       	ldi	r24, 0x00	; 0
    2f20:	0f 90       	pop	r0
    2f22:	0f be       	out	0x3f, r0	; 63
    2f24:	08 95       	ret

00002f26 <prvGetNextExpireTime>:
    2f26:	dc 01       	movw	r26, r24
    2f28:	e0 91 5a 16 	lds	r30, 0x165A	; 0x80165a <pxCurrentTimerList>
    2f2c:	f0 91 5b 16 	lds	r31, 0x165B	; 0x80165b <pxCurrentTimerList+0x1>
    2f30:	80 81       	ld	r24, Z
    2f32:	91 e0       	ldi	r25, 0x01	; 1
    2f34:	81 11       	cpse	r24, r1
    2f36:	90 e0       	ldi	r25, 0x00	; 0
    2f38:	9c 93       	st	X, r25
    2f3a:	91 11       	cpse	r25, r1
    2f3c:	08 c0       	rjmp	.+16     	; 0x2f4e <prvGetNextExpireTime+0x28>
    2f3e:	07 80       	ldd	r0, Z+7	; 0x07
    2f40:	f0 85       	ldd	r31, Z+8	; 0x08
    2f42:	e0 2d       	mov	r30, r0
    2f44:	60 81       	ld	r22, Z
    2f46:	71 81       	ldd	r23, Z+1	; 0x01
    2f48:	82 81       	ldd	r24, Z+2	; 0x02
    2f4a:	93 81       	ldd	r25, Z+3	; 0x03
    2f4c:	08 95       	ret
    2f4e:	60 e0       	ldi	r22, 0x00	; 0
    2f50:	70 e0       	ldi	r23, 0x00	; 0
    2f52:	cb 01       	movw	r24, r22
    2f54:	08 95       	ret

00002f56 <prvInsertTimerInActiveList>:
    2f56:	cf 92       	push	r12
    2f58:	df 92       	push	r13
    2f5a:	ef 92       	push	r14
    2f5c:	ff 92       	push	r15
    2f5e:	0f 93       	push	r16
    2f60:	1f 93       	push	r17
    2f62:	fc 01       	movw	r30, r24
    2f64:	42 83       	std	Z+2, r20	; 0x02
    2f66:	53 83       	std	Z+3, r21	; 0x03
    2f68:	64 83       	std	Z+4, r22	; 0x04
    2f6a:	75 83       	std	Z+5, r23	; 0x05
    2f6c:	93 87       	std	Z+11, r25	; 0x0b
    2f6e:	82 87       	std	Z+10, r24	; 0x0a
    2f70:	04 17       	cp	r16, r20
    2f72:	15 07       	cpc	r17, r21
    2f74:	26 07       	cpc	r18, r22
    2f76:	37 07       	cpc	r19, r23
    2f78:	c0 f0       	brcs	.+48     	; 0x2faa <prvInsertTimerInActiveList+0x54>
    2f7a:	0c 19       	sub	r16, r12
    2f7c:	1d 09       	sbc	r17, r13
    2f7e:	2e 09       	sbc	r18, r14
    2f80:	3f 09       	sbc	r19, r15
    2f82:	86 85       	ldd	r24, Z+14	; 0x0e
    2f84:	97 85       	ldd	r25, Z+15	; 0x0f
    2f86:	a0 89       	ldd	r26, Z+16	; 0x10
    2f88:	b1 89       	ldd	r27, Z+17	; 0x11
    2f8a:	08 17       	cp	r16, r24
    2f8c:	19 07       	cpc	r17, r25
    2f8e:	2a 07       	cpc	r18, r26
    2f90:	3b 07       	cpc	r19, r27
    2f92:	00 f5       	brcc	.+64     	; 0x2fd4 <prvInsertTimerInActiveList+0x7e>
    2f94:	bf 01       	movw	r22, r30
    2f96:	6e 5f       	subi	r22, 0xFE	; 254
    2f98:	7f 4f       	sbci	r23, 0xFF	; 255
    2f9a:	80 91 58 16 	lds	r24, 0x1658	; 0x801658 <pxOverflowTimerList>
    2f9e:	90 91 59 16 	lds	r25, 0x1659	; 0x801659 <pxOverflowTimerList+0x1>
    2fa2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vListInsert>
    2fa6:	80 e0       	ldi	r24, 0x00	; 0
    2fa8:	18 c0       	rjmp	.+48     	; 0x2fda <prvInsertTimerInActiveList+0x84>
    2faa:	0c 15       	cp	r16, r12
    2fac:	1d 05       	cpc	r17, r13
    2fae:	2e 05       	cpc	r18, r14
    2fb0:	3f 05       	cpc	r19, r15
    2fb2:	28 f4       	brcc	.+10     	; 0x2fbe <prvInsertTimerInActiveList+0x68>
    2fb4:	4c 15       	cp	r20, r12
    2fb6:	5d 05       	cpc	r21, r13
    2fb8:	6e 05       	cpc	r22, r14
    2fba:	7f 05       	cpc	r23, r15
    2fbc:	68 f4       	brcc	.+26     	; 0x2fd8 <prvInsertTimerInActiveList+0x82>
    2fbe:	bf 01       	movw	r22, r30
    2fc0:	6e 5f       	subi	r22, 0xFE	; 254
    2fc2:	7f 4f       	sbci	r23, 0xFF	; 255
    2fc4:	80 91 5a 16 	lds	r24, 0x165A	; 0x80165a <pxCurrentTimerList>
    2fc8:	90 91 5b 16 	lds	r25, 0x165B	; 0x80165b <pxCurrentTimerList+0x1>
    2fcc:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vListInsert>
    2fd0:	80 e0       	ldi	r24, 0x00	; 0
    2fd2:	03 c0       	rjmp	.+6      	; 0x2fda <prvInsertTimerInActiveList+0x84>
    2fd4:	81 e0       	ldi	r24, 0x01	; 1
    2fd6:	01 c0       	rjmp	.+2      	; 0x2fda <prvInsertTimerInActiveList+0x84>
    2fd8:	81 e0       	ldi	r24, 0x01	; 1
    2fda:	1f 91       	pop	r17
    2fdc:	0f 91       	pop	r16
    2fde:	ff 90       	pop	r15
    2fe0:	ef 90       	pop	r14
    2fe2:	df 90       	pop	r13
    2fe4:	cf 90       	pop	r12
    2fe6:	08 95       	ret

00002fe8 <prvCheckForValidListAndQueue>:
    2fe8:	0f b6       	in	r0, 0x3f	; 63
    2fea:	f8 94       	cli
    2fec:	0f 92       	push	r0
    2fee:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <xTimerQueue>
    2ff2:	90 91 57 16 	lds	r25, 0x1657	; 0x801657 <xTimerQueue+0x1>
    2ff6:	89 2b       	or	r24, r25
    2ff8:	e9 f4       	brne	.+58     	; 0x3034 <prvCheckForValidListAndQueue+0x4c>
    2ffa:	87 e6       	ldi	r24, 0x67	; 103
    2ffc:	96 e1       	ldi	r25, 0x16	; 22
    2ffe:	0e 94 4e 06 	call	0xc9c	; 0xc9c <vListInitialise>
    3002:	8c e5       	ldi	r24, 0x5C	; 92
    3004:	96 e1       	ldi	r25, 0x16	; 22
    3006:	0e 94 4e 06 	call	0xc9c	; 0xc9c <vListInitialise>
    300a:	87 e6       	ldi	r24, 0x67	; 103
    300c:	96 e1       	ldi	r25, 0x16	; 22
    300e:	90 93 5b 16 	sts	0x165B, r25	; 0x80165b <pxCurrentTimerList+0x1>
    3012:	80 93 5a 16 	sts	0x165A, r24	; 0x80165a <pxCurrentTimerList>
    3016:	8c e5       	ldi	r24, 0x5C	; 92
    3018:	96 e1       	ldi	r25, 0x16	; 22
    301a:	90 93 59 16 	sts	0x1659, r25	; 0x801659 <pxOverflowTimerList+0x1>
    301e:	80 93 58 16 	sts	0x1658, r24	; 0x801658 <pxOverflowTimerList>
    3022:	40 e0       	ldi	r20, 0x00	; 0
    3024:	67 e0       	ldi	r22, 0x07	; 7
    3026:	8a e0       	ldi	r24, 0x0A	; 10
    3028:	0e 94 01 09 	call	0x1202	; 0x1202 <xQueueGenericCreate>
    302c:	90 93 57 16 	sts	0x1657, r25	; 0x801657 <xTimerQueue+0x1>
    3030:	80 93 56 16 	sts	0x1656, r24	; 0x801656 <xTimerQueue>
    3034:	0f 90       	pop	r0
    3036:	0f be       	out	0x3f, r0	; 63
    3038:	08 95       	ret

0000303a <xTimerCreateTimerTask>:
    303a:	ef 92       	push	r14
    303c:	ff 92       	push	r15
    303e:	0f 93       	push	r16
    3040:	d3 df       	rcall	.-90     	; 0x2fe8 <prvCheckForValidListAndQueue>
    3042:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <xTimerQueue>
    3046:	90 91 57 16 	lds	r25, 0x1657	; 0x801657 <xTimerQueue+0x1>
    304a:	89 2b       	or	r24, r25
    304c:	91 f0       	breq	.+36     	; 0x3072 <xTimerCreateTimerTask+0x38>
    304e:	0f 2e       	mov	r0, r31
    3050:	f4 e5       	ldi	r31, 0x54	; 84
    3052:	ef 2e       	mov	r14, r31
    3054:	f6 e1       	ldi	r31, 0x16	; 22
    3056:	ff 2e       	mov	r15, r31
    3058:	f0 2d       	mov	r31, r0
    305a:	03 e0       	ldi	r16, 0x03	; 3
    305c:	20 e0       	ldi	r18, 0x00	; 0
    305e:	30 e0       	ldi	r19, 0x00	; 0
    3060:	40 ec       	ldi	r20, 0xC0	; 192
    3062:	50 e0       	ldi	r21, 0x00	; 0
    3064:	6b ee       	ldi	r22, 0xEB	; 235
    3066:	74 e0       	ldi	r23, 0x04	; 4
    3068:	87 ed       	ldi	r24, 0xD7	; 215
    306a:	90 e0       	ldi	r25, 0x00	; 0
    306c:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <xTaskCreate>
    3070:	01 c0       	rjmp	.+2      	; 0x3074 <xTimerCreateTimerTask+0x3a>
    3072:	80 e0       	ldi	r24, 0x00	; 0
    3074:	0f 91       	pop	r16
    3076:	ff 90       	pop	r15
    3078:	ef 90       	pop	r14
    307a:	08 95       	ret

0000307c <xTimerGenericCommand>:
    307c:	8f 92       	push	r8
    307e:	9f 92       	push	r9
    3080:	af 92       	push	r10
    3082:	bf 92       	push	r11
    3084:	cf 92       	push	r12
    3086:	df 92       	push	r13
    3088:	ef 92       	push	r14
    308a:	ff 92       	push	r15
    308c:	0f 93       	push	r16
    308e:	1f 93       	push	r17
    3090:	cf 93       	push	r28
    3092:	df 93       	push	r29
    3094:	cd b7       	in	r28, 0x3d	; 61
    3096:	de b7       	in	r29, 0x3e	; 62
    3098:	27 97       	sbiw	r28, 0x07	; 7
    309a:	0f b6       	in	r0, 0x3f	; 63
    309c:	f8 94       	cli
    309e:	de bf       	out	0x3e, r29	; 62
    30a0:	0f be       	out	0x3f, r0	; 63
    30a2:	cd bf       	out	0x3d, r28	; 61
    30a4:	e0 91 56 16 	lds	r30, 0x1656	; 0x801656 <xTimerQueue>
    30a8:	f0 91 57 16 	lds	r31, 0x1657	; 0x801657 <xTimerQueue+0x1>
    30ac:	30 97       	sbiw	r30, 0x00	; 0
    30ae:	81 f1       	breq	.+96     	; 0x3110 <xTimerGenericCommand+0x94>
    30b0:	69 83       	std	Y+1, r22	; 0x01
    30b2:	2a 83       	std	Y+2, r18	; 0x02
    30b4:	3b 83       	std	Y+3, r19	; 0x03
    30b6:	4c 83       	std	Y+4, r20	; 0x04
    30b8:	5d 83       	std	Y+5, r21	; 0x05
    30ba:	9f 83       	std	Y+7, r25	; 0x07
    30bc:	8e 83       	std	Y+6, r24	; 0x06
    30be:	66 30       	cpi	r22, 0x06	; 6
    30c0:	f4 f4       	brge	.+60     	; 0x30fe <xTimerGenericCommand+0x82>
    30c2:	e6 dc       	rcall	.-1588   	; 0x2a90 <xTaskGetSchedulerState>
    30c4:	82 30       	cpi	r24, 0x02	; 2
    30c6:	69 f4       	brne	.+26     	; 0x30e2 <xTimerGenericCommand+0x66>
    30c8:	00 e0       	ldi	r16, 0x00	; 0
    30ca:	a7 01       	movw	r20, r14
    30cc:	96 01       	movw	r18, r12
    30ce:	be 01       	movw	r22, r28
    30d0:	6f 5f       	subi	r22, 0xFF	; 255
    30d2:	7f 4f       	sbci	r23, 0xFF	; 255
    30d4:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <xTimerQueue>
    30d8:	90 91 57 16 	lds	r25, 0x1657	; 0x801657 <xTimerQueue+0x1>
    30dc:	0e 94 24 09 	call	0x1248	; 0x1248 <xQueueGenericSend>
    30e0:	18 c0       	rjmp	.+48     	; 0x3112 <xTimerGenericCommand+0x96>
    30e2:	00 e0       	ldi	r16, 0x00	; 0
    30e4:	20 e0       	ldi	r18, 0x00	; 0
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	a9 01       	movw	r20, r18
    30ea:	be 01       	movw	r22, r28
    30ec:	6f 5f       	subi	r22, 0xFF	; 255
    30ee:	7f 4f       	sbci	r23, 0xFF	; 255
    30f0:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <xTimerQueue>
    30f4:	90 91 57 16 	lds	r25, 0x1657	; 0x801657 <xTimerQueue+0x1>
    30f8:	0e 94 24 09 	call	0x1248	; 0x1248 <xQueueGenericSend>
    30fc:	0a c0       	rjmp	.+20     	; 0x3112 <xTimerGenericCommand+0x96>
    30fe:	20 e0       	ldi	r18, 0x00	; 0
    3100:	a8 01       	movw	r20, r16
    3102:	be 01       	movw	r22, r28
    3104:	6f 5f       	subi	r22, 0xFF	; 255
    3106:	7f 4f       	sbci	r23, 0xFF	; 255
    3108:	cf 01       	movw	r24, r30
    310a:	0e 94 b3 09 	call	0x1366	; 0x1366 <xQueueGenericSendFromISR>
    310e:	01 c0       	rjmp	.+2      	; 0x3112 <xTimerGenericCommand+0x96>
    3110:	80 e0       	ldi	r24, 0x00	; 0
    3112:	27 96       	adiw	r28, 0x07	; 7
    3114:	0f b6       	in	r0, 0x3f	; 63
    3116:	f8 94       	cli
    3118:	de bf       	out	0x3e, r29	; 62
    311a:	0f be       	out	0x3f, r0	; 63
    311c:	cd bf       	out	0x3d, r28	; 61
    311e:	df 91       	pop	r29
    3120:	cf 91       	pop	r28
    3122:	1f 91       	pop	r17
    3124:	0f 91       	pop	r16
    3126:	ff 90       	pop	r15
    3128:	ef 90       	pop	r14
    312a:	df 90       	pop	r13
    312c:	cf 90       	pop	r12
    312e:	bf 90       	pop	r11
    3130:	af 90       	pop	r10
    3132:	9f 90       	pop	r9
    3134:	8f 90       	pop	r8
    3136:	08 95       	ret

00003138 <prvSwitchTimerLists>:
    3138:	8f 92       	push	r8
    313a:	9f 92       	push	r9
    313c:	af 92       	push	r10
    313e:	bf 92       	push	r11
    3140:	cf 92       	push	r12
    3142:	df 92       	push	r13
    3144:	ef 92       	push	r14
    3146:	ff 92       	push	r15
    3148:	0f 93       	push	r16
    314a:	1f 93       	push	r17
    314c:	cf 93       	push	r28
    314e:	df 93       	push	r29
    3150:	3b c0       	rjmp	.+118    	; 0x31c8 <prvSwitchTimerLists+0x90>
    3152:	07 80       	ldd	r0, Z+7	; 0x07
    3154:	f0 85       	ldd	r31, Z+8	; 0x08
    3156:	e0 2d       	mov	r30, r0
    3158:	80 80       	ld	r8, Z
    315a:	91 80       	ldd	r9, Z+1	; 0x01
    315c:	a2 80       	ldd	r10, Z+2	; 0x02
    315e:	b3 80       	ldd	r11, Z+3	; 0x03
    3160:	c0 85       	ldd	r28, Z+8	; 0x08
    3162:	d1 85       	ldd	r29, Z+9	; 0x09
    3164:	8e 01       	movw	r16, r28
    3166:	0e 5f       	subi	r16, 0xFE	; 254
    3168:	1f 4f       	sbci	r17, 0xFF	; 255
    316a:	c8 01       	movw	r24, r16
    316c:	0e 94 a0 06 	call	0xd40	; 0xd40 <uxListRemove>
    3170:	ec 89       	ldd	r30, Y+20	; 0x14
    3172:	fd 89       	ldd	r31, Y+21	; 0x15
    3174:	ce 01       	movw	r24, r28
    3176:	19 95       	eicall
    3178:	8e 89       	ldd	r24, Y+22	; 0x16
    317a:	82 ff       	sbrs	r24, 2
    317c:	25 c0       	rjmp	.+74     	; 0x31c8 <prvSwitchTimerLists+0x90>
    317e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3180:	9f 85       	ldd	r25, Y+15	; 0x0f
    3182:	a8 89       	ldd	r26, Y+16	; 0x10
    3184:	b9 89       	ldd	r27, Y+17	; 0x11
    3186:	88 0d       	add	r24, r8
    3188:	99 1d       	adc	r25, r9
    318a:	aa 1d       	adc	r26, r10
    318c:	bb 1d       	adc	r27, r11
    318e:	88 16       	cp	r8, r24
    3190:	99 06       	cpc	r9, r25
    3192:	aa 06       	cpc	r10, r26
    3194:	bb 06       	cpc	r11, r27
    3196:	70 f4       	brcc	.+28     	; 0x31b4 <prvSwitchTimerLists+0x7c>
    3198:	8a 83       	std	Y+2, r24	; 0x02
    319a:	9b 83       	std	Y+3, r25	; 0x03
    319c:	ac 83       	std	Y+4, r26	; 0x04
    319e:	bd 83       	std	Y+5, r27	; 0x05
    31a0:	db 87       	std	Y+11, r29	; 0x0b
    31a2:	ca 87       	std	Y+10, r28	; 0x0a
    31a4:	b8 01       	movw	r22, r16
    31a6:	80 91 5a 16 	lds	r24, 0x165A	; 0x80165a <pxCurrentTimerList>
    31aa:	90 91 5b 16 	lds	r25, 0x165B	; 0x80165b <pxCurrentTimerList+0x1>
    31ae:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vListInsert>
    31b2:	0a c0       	rjmp	.+20     	; 0x31c8 <prvSwitchTimerLists+0x90>
    31b4:	c1 2c       	mov	r12, r1
    31b6:	d1 2c       	mov	r13, r1
    31b8:	76 01       	movw	r14, r12
    31ba:	00 e0       	ldi	r16, 0x00	; 0
    31bc:	10 e0       	ldi	r17, 0x00	; 0
    31be:	a5 01       	movw	r20, r10
    31c0:	94 01       	movw	r18, r8
    31c2:	60 e0       	ldi	r22, 0x00	; 0
    31c4:	ce 01       	movw	r24, r28
    31c6:	5a df       	rcall	.-332    	; 0x307c <xTimerGenericCommand>
    31c8:	e0 91 5a 16 	lds	r30, 0x165A	; 0x80165a <pxCurrentTimerList>
    31cc:	f0 91 5b 16 	lds	r31, 0x165B	; 0x80165b <pxCurrentTimerList+0x1>
    31d0:	80 81       	ld	r24, Z
    31d2:	81 11       	cpse	r24, r1
    31d4:	be cf       	rjmp	.-132    	; 0x3152 <prvSwitchTimerLists+0x1a>
    31d6:	80 91 58 16 	lds	r24, 0x1658	; 0x801658 <pxOverflowTimerList>
    31da:	90 91 59 16 	lds	r25, 0x1659	; 0x801659 <pxOverflowTimerList+0x1>
    31de:	90 93 5b 16 	sts	0x165B, r25	; 0x80165b <pxCurrentTimerList+0x1>
    31e2:	80 93 5a 16 	sts	0x165A, r24	; 0x80165a <pxCurrentTimerList>
    31e6:	f0 93 59 16 	sts	0x1659, r31	; 0x801659 <pxOverflowTimerList+0x1>
    31ea:	e0 93 58 16 	sts	0x1658, r30	; 0x801658 <pxOverflowTimerList>
    31ee:	df 91       	pop	r29
    31f0:	cf 91       	pop	r28
    31f2:	1f 91       	pop	r17
    31f4:	0f 91       	pop	r16
    31f6:	ff 90       	pop	r15
    31f8:	ef 90       	pop	r14
    31fa:	df 90       	pop	r13
    31fc:	cf 90       	pop	r12
    31fe:	bf 90       	pop	r11
    3200:	af 90       	pop	r10
    3202:	9f 90       	pop	r9
    3204:	8f 90       	pop	r8
    3206:	08 95       	ret

00003208 <prvSampleTimeNow>:
    3208:	cf 92       	push	r12
    320a:	df 92       	push	r13
    320c:	ef 92       	push	r14
    320e:	ff 92       	push	r15
    3210:	cf 93       	push	r28
    3212:	df 93       	push	r29
    3214:	ec 01       	movw	r28, r24
    3216:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <xTaskGetTickCount>
    321a:	6b 01       	movw	r12, r22
    321c:	7c 01       	movw	r14, r24
    321e:	80 91 50 16 	lds	r24, 0x1650	; 0x801650 <xLastTime.2436>
    3222:	90 91 51 16 	lds	r25, 0x1651	; 0x801651 <xLastTime.2436+0x1>
    3226:	a0 91 52 16 	lds	r26, 0x1652	; 0x801652 <xLastTime.2436+0x2>
    322a:	b0 91 53 16 	lds	r27, 0x1653	; 0x801653 <xLastTime.2436+0x3>
    322e:	c8 16       	cp	r12, r24
    3230:	d9 06       	cpc	r13, r25
    3232:	ea 06       	cpc	r14, r26
    3234:	fb 06       	cpc	r15, r27
    3236:	20 f4       	brcc	.+8      	; 0x3240 <prvSampleTimeNow+0x38>
    3238:	7f df       	rcall	.-258    	; 0x3138 <prvSwitchTimerLists>
    323a:	81 e0       	ldi	r24, 0x01	; 1
    323c:	88 83       	st	Y, r24
    323e:	01 c0       	rjmp	.+2      	; 0x3242 <prvSampleTimeNow+0x3a>
    3240:	18 82       	st	Y, r1
    3242:	c0 92 50 16 	sts	0x1650, r12	; 0x801650 <xLastTime.2436>
    3246:	d0 92 51 16 	sts	0x1651, r13	; 0x801651 <xLastTime.2436+0x1>
    324a:	e0 92 52 16 	sts	0x1652, r14	; 0x801652 <xLastTime.2436+0x2>
    324e:	f0 92 53 16 	sts	0x1653, r15	; 0x801653 <xLastTime.2436+0x3>
    3252:	c7 01       	movw	r24, r14
    3254:	b6 01       	movw	r22, r12
    3256:	df 91       	pop	r29
    3258:	cf 91       	pop	r28
    325a:	ff 90       	pop	r15
    325c:	ef 90       	pop	r14
    325e:	df 90       	pop	r13
    3260:	cf 90       	pop	r12
    3262:	08 95       	ret

00003264 <prvProcessExpiredTimer>:
    3264:	4f 92       	push	r4
    3266:	5f 92       	push	r5
    3268:	6f 92       	push	r6
    326a:	7f 92       	push	r7
    326c:	8f 92       	push	r8
    326e:	9f 92       	push	r9
    3270:	af 92       	push	r10
    3272:	bf 92       	push	r11
    3274:	cf 92       	push	r12
    3276:	df 92       	push	r13
    3278:	ef 92       	push	r14
    327a:	ff 92       	push	r15
    327c:	0f 93       	push	r16
    327e:	1f 93       	push	r17
    3280:	cf 93       	push	r28
    3282:	df 93       	push	r29
    3284:	4b 01       	movw	r8, r22
    3286:	5c 01       	movw	r10, r24
    3288:	29 01       	movw	r4, r18
    328a:	3a 01       	movw	r6, r20
    328c:	e0 91 5a 16 	lds	r30, 0x165A	; 0x80165a <pxCurrentTimerList>
    3290:	f0 91 5b 16 	lds	r31, 0x165B	; 0x80165b <pxCurrentTimerList+0x1>
    3294:	07 80       	ldd	r0, Z+7	; 0x07
    3296:	f0 85       	ldd	r31, Z+8	; 0x08
    3298:	e0 2d       	mov	r30, r0
    329a:	c0 85       	ldd	r28, Z+8	; 0x08
    329c:	d1 85       	ldd	r29, Z+9	; 0x09
    329e:	ce 01       	movw	r24, r28
    32a0:	02 96       	adiw	r24, 0x02	; 2
    32a2:	0e 94 a0 06 	call	0xd40	; 0xd40 <uxListRemove>
    32a6:	8e 89       	ldd	r24, Y+22	; 0x16
    32a8:	82 ff       	sbrs	r24, 2
    32aa:	1b c0       	rjmp	.+54     	; 0x32e2 <prvProcessExpiredTimer+0x7e>
    32ac:	4e 85       	ldd	r20, Y+14	; 0x0e
    32ae:	5f 85       	ldd	r21, Y+15	; 0x0f
    32b0:	68 89       	ldd	r22, Y+16	; 0x10
    32b2:	79 89       	ldd	r23, Y+17	; 0x11
    32b4:	48 0d       	add	r20, r8
    32b6:	59 1d       	adc	r21, r9
    32b8:	6a 1d       	adc	r22, r10
    32ba:	7b 1d       	adc	r23, r11
    32bc:	75 01       	movw	r14, r10
    32be:	64 01       	movw	r12, r8
    32c0:	93 01       	movw	r18, r6
    32c2:	82 01       	movw	r16, r4
    32c4:	ce 01       	movw	r24, r28
    32c6:	47 de       	rcall	.-882    	; 0x2f56 <prvInsertTimerInActiveList>
    32c8:	88 23       	and	r24, r24
    32ca:	69 f0       	breq	.+26     	; 0x32e6 <prvProcessExpiredTimer+0x82>
    32cc:	c1 2c       	mov	r12, r1
    32ce:	d1 2c       	mov	r13, r1
    32d0:	76 01       	movw	r14, r12
    32d2:	00 e0       	ldi	r16, 0x00	; 0
    32d4:	10 e0       	ldi	r17, 0x00	; 0
    32d6:	a5 01       	movw	r20, r10
    32d8:	94 01       	movw	r18, r8
    32da:	60 e0       	ldi	r22, 0x00	; 0
    32dc:	ce 01       	movw	r24, r28
    32de:	ce de       	rcall	.-612    	; 0x307c <xTimerGenericCommand>
    32e0:	02 c0       	rjmp	.+4      	; 0x32e6 <prvProcessExpiredTimer+0x82>
    32e2:	8e 7f       	andi	r24, 0xFE	; 254
    32e4:	8e 8b       	std	Y+22, r24	; 0x16
    32e6:	ec 89       	ldd	r30, Y+20	; 0x14
    32e8:	fd 89       	ldd	r31, Y+21	; 0x15
    32ea:	ce 01       	movw	r24, r28
    32ec:	19 95       	eicall
    32ee:	df 91       	pop	r29
    32f0:	cf 91       	pop	r28
    32f2:	1f 91       	pop	r17
    32f4:	0f 91       	pop	r16
    32f6:	ff 90       	pop	r15
    32f8:	ef 90       	pop	r14
    32fa:	df 90       	pop	r13
    32fc:	cf 90       	pop	r12
    32fe:	bf 90       	pop	r11
    3300:	af 90       	pop	r10
    3302:	9f 90       	pop	r9
    3304:	8f 90       	pop	r8
    3306:	7f 90       	pop	r7
    3308:	6f 90       	pop	r6
    330a:	5f 90       	pop	r5
    330c:	4f 90       	pop	r4
    330e:	08 95       	ret

00003310 <prvProcessTimerOrBlockTask>:
    3310:	8f 92       	push	r8
    3312:	9f 92       	push	r9
    3314:	af 92       	push	r10
    3316:	bf 92       	push	r11
    3318:	cf 92       	push	r12
    331a:	df 92       	push	r13
    331c:	ef 92       	push	r14
    331e:	ff 92       	push	r15
    3320:	1f 93       	push	r17
    3322:	cf 93       	push	r28
    3324:	df 93       	push	r29
    3326:	1f 92       	push	r1
    3328:	cd b7       	in	r28, 0x3d	; 61
    332a:	de b7       	in	r29, 0x3e	; 62
    332c:	6b 01       	movw	r12, r22
    332e:	7c 01       	movw	r14, r24
    3330:	14 2f       	mov	r17, r20
    3332:	0e 94 d2 0f 	call	0x1fa4	; 0x1fa4 <vTaskSuspendAll>
    3336:	ce 01       	movw	r24, r28
    3338:	01 96       	adiw	r24, 0x01	; 1
    333a:	66 df       	rcall	.-308    	; 0x3208 <prvSampleTimeNow>
    333c:	4b 01       	movw	r8, r22
    333e:	5c 01       	movw	r10, r24
    3340:	89 81       	ldd	r24, Y+1	; 0x01
    3342:	81 11       	cpse	r24, r1
    3344:	2d c0       	rjmp	.+90     	; 0x33a0 <prvProcessTimerOrBlockTask+0x90>
    3346:	11 11       	cpse	r17, r1
    3348:	0d c0       	rjmp	.+26     	; 0x3364 <prvProcessTimerOrBlockTask+0x54>
    334a:	8c 14       	cp	r8, r12
    334c:	9d 04       	cpc	r9, r13
    334e:	ae 04       	cpc	r10, r14
    3350:	bf 04       	cpc	r11, r15
    3352:	40 f0       	brcs	.+16     	; 0x3364 <prvProcessTimerOrBlockTask+0x54>
    3354:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
    3358:	a5 01       	movw	r20, r10
    335a:	94 01       	movw	r18, r8
    335c:	c7 01       	movw	r24, r14
    335e:	b6 01       	movw	r22, r12
    3360:	81 df       	rcall	.-254    	; 0x3264 <prvProcessExpiredTimer>
    3362:	20 c0       	rjmp	.+64     	; 0x33a4 <prvProcessTimerOrBlockTask+0x94>
    3364:	11 23       	and	r17, r17
    3366:	41 f0       	breq	.+16     	; 0x3378 <prvProcessTimerOrBlockTask+0x68>
    3368:	e0 91 58 16 	lds	r30, 0x1658	; 0x801658 <pxOverflowTimerList>
    336c:	f0 91 59 16 	lds	r31, 0x1659	; 0x801659 <pxOverflowTimerList+0x1>
    3370:	80 81       	ld	r24, Z
    3372:	11 e0       	ldi	r17, 0x01	; 1
    3374:	81 11       	cpse	r24, r1
    3376:	10 e0       	ldi	r17, 0x00	; 0
    3378:	b7 01       	movw	r22, r14
    337a:	a6 01       	movw	r20, r12
    337c:	48 19       	sub	r20, r8
    337e:	59 09       	sbc	r21, r9
    3380:	6a 09       	sbc	r22, r10
    3382:	7b 09       	sbc	r23, r11
    3384:	21 2f       	mov	r18, r17
    3386:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <xTimerQueue>
    338a:	90 91 57 16 	lds	r25, 0x1657	; 0x801657 <xTimerQueue+0x1>
    338e:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <vQueueWaitForMessageRestricted>
    3392:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
    3396:	81 11       	cpse	r24, r1
    3398:	05 c0       	rjmp	.+10     	; 0x33a4 <prvProcessTimerOrBlockTask+0x94>
    339a:	0e 94 1c 07 	call	0xe38	; 0xe38 <vPortYield>
    339e:	02 c0       	rjmp	.+4      	; 0x33a4 <prvProcessTimerOrBlockTask+0x94>
    33a0:	0e 94 12 11 	call	0x2224	; 0x2224 <xTaskResumeAll>
    33a4:	0f 90       	pop	r0
    33a6:	df 91       	pop	r29
    33a8:	cf 91       	pop	r28
    33aa:	1f 91       	pop	r17
    33ac:	ff 90       	pop	r15
    33ae:	ef 90       	pop	r14
    33b0:	df 90       	pop	r13
    33b2:	cf 90       	pop	r12
    33b4:	bf 90       	pop	r11
    33b6:	af 90       	pop	r10
    33b8:	9f 90       	pop	r9
    33ba:	8f 90       	pop	r8
    33bc:	08 95       	ret

000033be <prvProcessReceivedCommands>:
    33be:	af 92       	push	r10
    33c0:	bf 92       	push	r11
    33c2:	cf 92       	push	r12
    33c4:	df 92       	push	r13
    33c6:	ef 92       	push	r14
    33c8:	ff 92       	push	r15
    33ca:	0f 93       	push	r16
    33cc:	1f 93       	push	r17
    33ce:	cf 93       	push	r28
    33d0:	df 93       	push	r29
    33d2:	cd b7       	in	r28, 0x3d	; 61
    33d4:	de b7       	in	r29, 0x3e	; 62
    33d6:	28 97       	sbiw	r28, 0x08	; 8
    33d8:	0f b6       	in	r0, 0x3f	; 63
    33da:	f8 94       	cli
    33dc:	de bf       	out	0x3e, r29	; 62
    33de:	0f be       	out	0x3f, r0	; 63
    33e0:	cd bf       	out	0x3d, r28	; 61
    33e2:	82 c0       	rjmp	.+260    	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    33e4:	89 81       	ldd	r24, Y+1	; 0x01
    33e6:	88 23       	and	r24, r24
    33e8:	0c f4       	brge	.+2      	; 0x33ec <prvProcessReceivedCommands+0x2e>
    33ea:	7e c0       	rjmp	.+252    	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    33ec:	ae 80       	ldd	r10, Y+6	; 0x06
    33ee:	bf 80       	ldd	r11, Y+7	; 0x07
    33f0:	d5 01       	movw	r26, r10
    33f2:	1c 96       	adiw	r26, 0x0c	; 12
    33f4:	8d 91       	ld	r24, X+
    33f6:	9c 91       	ld	r25, X
    33f8:	1d 97       	sbiw	r26, 0x0d	; 13
    33fa:	89 2b       	or	r24, r25
    33fc:	21 f0       	breq	.+8      	; 0x3406 <prvProcessReceivedCommands+0x48>
    33fe:	c5 01       	movw	r24, r10
    3400:	02 96       	adiw	r24, 0x02	; 2
    3402:	0e 94 a0 06 	call	0xd40	; 0xd40 <uxListRemove>
    3406:	ce 01       	movw	r24, r28
    3408:	08 96       	adiw	r24, 0x08	; 8
    340a:	fe de       	rcall	.-516    	; 0x3208 <prvSampleTimeNow>
    340c:	8b 01       	movw	r16, r22
    340e:	9c 01       	movw	r18, r24
    3410:	e9 81       	ldd	r30, Y+1	; 0x01
    3412:	0e 2e       	mov	r0, r30
    3414:	00 0c       	add	r0, r0
    3416:	ff 0b       	sbc	r31, r31
    3418:	ea 30       	cpi	r30, 0x0A	; 10
    341a:	f1 05       	cpc	r31, r1
    341c:	08 f0       	brcs	.+2      	; 0x3420 <prvProcessReceivedCommands+0x62>
    341e:	64 c0       	rjmp	.+200    	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    3420:	88 27       	eor	r24, r24
    3422:	ee 58       	subi	r30, 0x8E	; 142
    3424:	ff 4f       	sbci	r31, 0xFF	; 255
    3426:	8f 4f       	sbci	r24, 0xFF	; 255
    3428:	0c 94 cf 28 	jmp	0x519e	; 0x519e <__tablejump2__>
    342c:	f5 01       	movw	r30, r10
    342e:	86 89       	ldd	r24, Z+22	; 0x16
    3430:	81 60       	ori	r24, 0x01	; 1
    3432:	86 8b       	std	Z+22, r24	; 0x16
    3434:	ca 80       	ldd	r12, Y+2	; 0x02
    3436:	db 80       	ldd	r13, Y+3	; 0x03
    3438:	ec 80       	ldd	r14, Y+4	; 0x04
    343a:	fd 80       	ldd	r15, Y+5	; 0x05
    343c:	46 85       	ldd	r20, Z+14	; 0x0e
    343e:	57 85       	ldd	r21, Z+15	; 0x0f
    3440:	60 89       	ldd	r22, Z+16	; 0x10
    3442:	71 89       	ldd	r23, Z+17	; 0x11
    3444:	4c 0d       	add	r20, r12
    3446:	5d 1d       	adc	r21, r13
    3448:	6e 1d       	adc	r22, r14
    344a:	7f 1d       	adc	r23, r15
    344c:	c5 01       	movw	r24, r10
    344e:	83 dd       	rcall	.-1274   	; 0x2f56 <prvInsertTimerInActiveList>
    3450:	88 23       	and	r24, r24
    3452:	09 f4       	brne	.+2      	; 0x3456 <prvProcessReceivedCommands+0x98>
    3454:	49 c0       	rjmp	.+146    	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    3456:	d5 01       	movw	r26, r10
    3458:	54 96       	adiw	r26, 0x14	; 20
    345a:	ed 91       	ld	r30, X+
    345c:	fc 91       	ld	r31, X
    345e:	55 97       	sbiw	r26, 0x15	; 21
    3460:	c5 01       	movw	r24, r10
    3462:	19 95       	eicall
    3464:	f5 01       	movw	r30, r10
    3466:	86 89       	ldd	r24, Z+22	; 0x16
    3468:	82 ff       	sbrs	r24, 2
    346a:	3e c0       	rjmp	.+124    	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    346c:	4a 81       	ldd	r20, Y+2	; 0x02
    346e:	5b 81       	ldd	r21, Y+3	; 0x03
    3470:	6c 81       	ldd	r22, Y+4	; 0x04
    3472:	7d 81       	ldd	r23, Y+5	; 0x05
    3474:	86 85       	ldd	r24, Z+14	; 0x0e
    3476:	97 85       	ldd	r25, Z+15	; 0x0f
    3478:	a0 89       	ldd	r26, Z+16	; 0x10
    347a:	b1 89       	ldd	r27, Z+17	; 0x11
    347c:	9a 01       	movw	r18, r20
    347e:	ab 01       	movw	r20, r22
    3480:	28 0f       	add	r18, r24
    3482:	39 1f       	adc	r19, r25
    3484:	4a 1f       	adc	r20, r26
    3486:	5b 1f       	adc	r21, r27
    3488:	c1 2c       	mov	r12, r1
    348a:	d1 2c       	mov	r13, r1
    348c:	76 01       	movw	r14, r12
    348e:	00 e0       	ldi	r16, 0x00	; 0
    3490:	10 e0       	ldi	r17, 0x00	; 0
    3492:	60 e0       	ldi	r22, 0x00	; 0
    3494:	c5 01       	movw	r24, r10
    3496:	f2 dd       	rcall	.-1052   	; 0x307c <xTimerGenericCommand>
    3498:	27 c0       	rjmp	.+78     	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    349a:	d5 01       	movw	r26, r10
    349c:	56 96       	adiw	r26, 0x16	; 22
    349e:	8c 91       	ld	r24, X
    34a0:	56 97       	sbiw	r26, 0x16	; 22
    34a2:	8e 7f       	andi	r24, 0xFE	; 254
    34a4:	56 96       	adiw	r26, 0x16	; 22
    34a6:	8c 93       	st	X, r24
    34a8:	1f c0       	rjmp	.+62     	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    34aa:	f5 01       	movw	r30, r10
    34ac:	86 89       	ldd	r24, Z+22	; 0x16
    34ae:	81 60       	ori	r24, 0x01	; 1
    34b0:	86 8b       	std	Z+22, r24	; 0x16
    34b2:	4a 81       	ldd	r20, Y+2	; 0x02
    34b4:	5b 81       	ldd	r21, Y+3	; 0x03
    34b6:	6c 81       	ldd	r22, Y+4	; 0x04
    34b8:	7d 81       	ldd	r23, Y+5	; 0x05
    34ba:	46 87       	std	Z+14, r20	; 0x0e
    34bc:	57 87       	std	Z+15, r21	; 0x0f
    34be:	60 8b       	std	Z+16, r22	; 0x10
    34c0:	71 8b       	std	Z+17, r23	; 0x11
    34c2:	40 0f       	add	r20, r16
    34c4:	51 1f       	adc	r21, r17
    34c6:	62 1f       	adc	r22, r18
    34c8:	73 1f       	adc	r23, r19
    34ca:	68 01       	movw	r12, r16
    34cc:	79 01       	movw	r14, r18
    34ce:	c5 01       	movw	r24, r10
    34d0:	42 dd       	rcall	.-1404   	; 0x2f56 <prvInsertTimerInActiveList>
    34d2:	0a c0       	rjmp	.+20     	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    34d4:	f5 01       	movw	r30, r10
    34d6:	86 89       	ldd	r24, Z+22	; 0x16
    34d8:	81 fd       	sbrc	r24, 1
    34da:	04 c0       	rjmp	.+8      	; 0x34e4 <prvProcessReceivedCommands+0x126>
    34dc:	c5 01       	movw	r24, r10
    34de:	0e 94 11 06 	call	0xc22	; 0xc22 <vPortFree>
    34e2:	02 c0       	rjmp	.+4      	; 0x34e8 <prvProcessReceivedCommands+0x12a>
    34e4:	8e 7f       	andi	r24, 0xFE	; 254
    34e6:	86 8b       	std	Z+22, r24	; 0x16
    34e8:	20 e0       	ldi	r18, 0x00	; 0
    34ea:	30 e0       	ldi	r19, 0x00	; 0
    34ec:	a9 01       	movw	r20, r18
    34ee:	be 01       	movw	r22, r28
    34f0:	6f 5f       	subi	r22, 0xFF	; 255
    34f2:	7f 4f       	sbci	r23, 0xFF	; 255
    34f4:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <xTimerQueue>
    34f8:	90 91 57 16 	lds	r25, 0x1657	; 0x801657 <xTimerQueue+0x1>
    34fc:	0e 94 ee 09 	call	0x13dc	; 0x13dc <xQueueReceive>
    3500:	81 11       	cpse	r24, r1
    3502:	70 cf       	rjmp	.-288    	; 0x33e4 <prvProcessReceivedCommands+0x26>
    3504:	28 96       	adiw	r28, 0x08	; 8
    3506:	0f b6       	in	r0, 0x3f	; 63
    3508:	f8 94       	cli
    350a:	de bf       	out	0x3e, r29	; 62
    350c:	0f be       	out	0x3f, r0	; 63
    350e:	cd bf       	out	0x3d, r28	; 61
    3510:	df 91       	pop	r29
    3512:	cf 91       	pop	r28
    3514:	1f 91       	pop	r17
    3516:	0f 91       	pop	r16
    3518:	ff 90       	pop	r15
    351a:	ef 90       	pop	r14
    351c:	df 90       	pop	r13
    351e:	cf 90       	pop	r12
    3520:	bf 90       	pop	r11
    3522:	af 90       	pop	r10
    3524:	08 95       	ret

00003526 <vApplicationIdleHook>:
    3526:	08 95       	ret

00003528 <prvSetMainLedOn>:
    3528:	84 b1       	in	r24, 0x04	; 4
    352a:	80 68       	ori	r24, 0x80	; 128
    352c:	84 b9       	out	0x04, r24	; 4
    352e:	85 b1       	in	r24, 0x05	; 5
    3530:	80 68       	ori	r24, 0x80	; 128
    3532:	85 b9       	out	0x05, r24	; 5
    3534:	08 95       	ret

00003536 <prvBlinkMainLed>:
    3536:	83 b1       	in	r24, 0x03	; 3
    3538:	80 68       	ori	r24, 0x80	; 128
    353a:	83 b9       	out	0x03, r24	; 3
    353c:	08 95       	ret

0000353e <vApplicationMallocFailedHook>:
    353e:	f4 df       	rcall	.-24     	; 0x3528 <prvSetMainLedOn>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3540:	2f ef       	ldi	r18, 0xFF	; 255
    3542:	80 e7       	ldi	r24, 0x70	; 112
    3544:	92 e0       	ldi	r25, 0x02	; 2
    3546:	21 50       	subi	r18, 0x01	; 1
    3548:	80 40       	sbci	r24, 0x00	; 0
    354a:	90 40       	sbci	r25, 0x00	; 0
    354c:	e1 f7       	brne	.-8      	; 0x3546 <vApplicationMallocFailedHook+0x8>
    354e:	00 c0       	rjmp	.+0      	; 0x3550 <vApplicationMallocFailedHook+0x12>
    3550:	00 00       	nop
    3552:	f1 df       	rcall	.-30     	; 0x3536 <prvBlinkMainLed>
    3554:	f5 cf       	rjmp	.-22     	; 0x3540 <vApplicationMallocFailedHook+0x2>

00003556 <vApplicationStackOverflowHook>:
    3556:	e8 df       	rcall	.-48     	; 0x3528 <prvSetMainLedOn>
    3558:	2f ef       	ldi	r18, 0xFF	; 255
    355a:	87 ea       	ldi	r24, 0xA7	; 167
    355c:	91 e6       	ldi	r25, 0x61	; 97
    355e:	21 50       	subi	r18, 0x01	; 1
    3560:	80 40       	sbci	r24, 0x00	; 0
    3562:	90 40       	sbci	r25, 0x00	; 0
    3564:	e1 f7       	brne	.-8      	; 0x355e <vApplicationStackOverflowHook+0x8>
    3566:	00 c0       	rjmp	.+0      	; 0x3568 <vApplicationStackOverflowHook+0x12>
    3568:	00 00       	nop
    356a:	e5 df       	rcall	.-54     	; 0x3536 <prvBlinkMainLed>
    356c:	f5 cf       	rjmp	.-22     	; 0x3558 <vApplicationStackOverflowHook+0x2>

0000356e <initializeUsedData>:
#include "Setup.h"
#include "UpLinkHandler.h"

void initializeUsedData()
{
	initializeEventGroup();
    356e:	0e 94 ee 02 	call	0x5dc	; 0x5dc <initializeEventGroup>
	
	createUpLinkMessageBuffer();
    3572:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <createUpLinkMessageBuffer>
    3576:	08 95       	ret

00003578 <create_tasks>:
	//lora_driver_initialise(ser_USART1, downlinkMessageBuffer);
}

void create_tasks(void)
{
	createTempAndHumTask(1);
    3578:	81 e0       	ldi	r24, 0x01	; 1
    357a:	0e 94 7e 03 	call	0x6fc	; 0x6fc <createTempAndHumTask>
	createApplicationTask(2);
    357e:	82 e0       	ldi	r24, 0x02	; 2
    3580:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <createApplicationTask>
    lora_handler_uplink_payload(3);
    3584:	83 e0       	ldi	r24, 0x03	; 3
    3586:	0c 94 b8 01 	jmp	0x370	; 0x370 <lora_handler_uplink_payload>
    358a:	08 95       	ret

0000358c <initialiseSystem>:
}

void initialiseSystem()
{
	// Set output ports for leds used in the example
	DDRA |= _BV(DDA0) | _BV(DDA7);
    358c:	81 b1       	in	r24, 0x01	; 1
    358e:	81 68       	ori	r24, 0x81	; 129
    3590:	81 b9       	out	0x01, r24	; 1

	// Make it possible to use stdio on COM port 0 (USB) on Arduino board - Setting 57600,8,N,1
	initializeUsedData();
    3592:	ed df       	rcall	.-38     	; 0x356e <initializeUsedData>
	stdio_initialise(ser_USART0);
    3594:	80 e0       	ldi	r24, 0x00	; 0
    3596:	0e 94 28 23 	call	0x4650	; 0x4650 <stdio_initialise>
	// Let's create some tasks
	create_tasks();
    359a:	ee df       	rcall	.-36     	; 0x3578 <create_tasks>

	// vvvvvvvvvvvvvvvvv BELOW IS LoRaWAN initialisation vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	// Status Leds driver
	status_leds_initialise(5); // Priority 5 for internal task
    359c:	85 e0       	ldi	r24, 0x05	; 5
    359e:	0c 94 2f 24 	jmp	0x485e	; 0x485e <status_leds_initialise>
    35a2:	08 95       	ret

000035a4 <main>:
}

/*-----------------------------------------------------------*/
int main(void)
{
	initialiseSystem(); // Must be done as the very first thing!!
    35a4:	f3 df       	rcall	.-26     	; 0x358c <initialiseSystem>
	printf("Program Started!!\n");
    35a6:	83 ef       	ldi	r24, 0xF3	; 243
    35a8:	94 e0       	ldi	r25, 0x04	; 4
    35aa:	0e 94 6e 2a 	call	0x54dc	; 0x54dc <puts>
	vTaskStartScheduler(); // Initialise and run the freeRTOS scheduler. Execution should never return from here.
    35ae:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <vTaskStartScheduler>
    35b2:	ff cf       	rjmp	.-2      	; 0x35b2 <main+0xe>

000035b4 <_hihTwiCallback>:
    35b4:	65 30       	cpi	r22, 0x05	; 5
    35b6:	f1 f4       	brne	.+60     	; 0x35f4 <_hihTwiCallback+0x40>
    35b8:	fa 01       	movw	r30, r20
    35ba:	80 81       	ld	r24, Z
    35bc:	8f 73       	andi	r24, 0x3F	; 63
    35be:	90 e0       	ldi	r25, 0x00	; 0
    35c0:	98 2f       	mov	r25, r24
    35c2:	88 27       	eor	r24, r24
    35c4:	21 81       	ldd	r18, Z+1	; 0x01
    35c6:	82 2b       	or	r24, r18
    35c8:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <_hum+0x1>
    35cc:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_hum>
    35d0:	82 81       	ldd	r24, Z+2	; 0x02
    35d2:	f0 e4       	ldi	r31, 0x40	; 64
    35d4:	8f 9f       	mul	r24, r31
    35d6:	c0 01       	movw	r24, r0
    35d8:	11 24       	eor	r1, r1
    35da:	fa 01       	movw	r30, r20
    35dc:	23 81       	ldd	r18, Z+3	; 0x03
    35de:	26 95       	lsr	r18
    35e0:	26 95       	lsr	r18
    35e2:	82 2b       	or	r24, r18
    35e4:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <_temp+0x1>
    35e8:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_temp>
    35ec:	81 e0       	ldi	r24, 0x01	; 1
    35ee:	80 93 72 16 	sts	0x1672, r24	; 0x801672 <_measuringIsReady>
    35f2:	08 95       	ret
    35f4:	64 30       	cpi	r22, 0x04	; 4
    35f6:	51 f0       	breq	.+20     	; 0x360c <_hihTwiCallback+0x58>
    35f8:	80 e0       	ldi	r24, 0x00	; 0
    35fa:	90 e4       	ldi	r25, 0x40	; 64
    35fc:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <_temp+0x1>
    3600:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_temp>
    3604:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <_hum+0x1>
    3608:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_hum>
    360c:	08 95       	ret

0000360e <hih8120_initialise>:
    360e:	0f 93       	push	r16
    3610:	1f 93       	push	r17
    3612:	0a ed       	ldi	r16, 0xDA	; 218
    3614:	1a e1       	ldi	r17, 0x1A	; 26
    3616:	20 e0       	ldi	r18, 0x00	; 0
    3618:	34 e2       	ldi	r19, 0x24	; 36
    361a:	44 ef       	ldi	r20, 0xF4	; 244
    361c:	50 e0       	ldi	r21, 0x00	; 0
    361e:	60 e0       	ldi	r22, 0x00	; 0
    3620:	87 e2       	ldi	r24, 0x27	; 39
    3622:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <twiCreate>
    3626:	90 93 74 16 	sts	0x1674, r25	; 0x801674 <_hih8120Handler+0x1>
    362a:	80 93 73 16 	sts	0x1673, r24	; 0x801673 <_hih8120Handler>
    362e:	21 e0       	ldi	r18, 0x01	; 1
    3630:	89 2b       	or	r24, r25
    3632:	09 f0       	breq	.+2      	; 0x3636 <hih8120_initialise+0x28>
    3634:	20 e0       	ldi	r18, 0x00	; 0
    3636:	82 2f       	mov	r24, r18
    3638:	1f 91       	pop	r17
    363a:	0f 91       	pop	r16
    363c:	08 95       	ret

0000363e <hih8120_wakeup>:
    363e:	80 91 73 16 	lds	r24, 0x1673	; 0x801673 <_hih8120Handler>
    3642:	90 91 74 16 	lds	r25, 0x1674	; 0x801674 <_hih8120Handler+0x1>
    3646:	00 97       	sbiw	r24, 0x00	; 0
    3648:	59 f0       	breq	.+22     	; 0x3660 <hih8120_wakeup+0x22>
    364a:	40 e0       	ldi	r20, 0x00	; 0
    364c:	60 e0       	ldi	r22, 0x00	; 0
    364e:	70 e0       	ldi	r23, 0x00	; 0
    3650:	0e 94 66 25 	call	0x4acc	; 0x4acc <twiTransmit>
    3654:	84 30       	cpi	r24, 0x04	; 4
    3656:	31 f4       	brne	.+12     	; 0x3664 <hih8120_wakeup+0x26>
    3658:	10 92 72 16 	sts	0x1672, r1	; 0x801672 <_measuringIsReady>
    365c:	80 e0       	ldi	r24, 0x00	; 0
    365e:	08 95       	ret
    3660:	82 e0       	ldi	r24, 0x02	; 2
    3662:	08 95       	ret
    3664:	83 e0       	ldi	r24, 0x03	; 3
    3666:	08 95       	ret

00003668 <hih8120_measure>:
    3668:	80 91 73 16 	lds	r24, 0x1673	; 0x801673 <_hih8120Handler>
    366c:	90 91 74 16 	lds	r25, 0x1674	; 0x801674 <_hih8120Handler+0x1>
    3670:	00 97       	sbiw	r24, 0x00	; 0
    3672:	39 f0       	breq	.+14     	; 0x3682 <hih8120_measure+0x1a>
    3674:	64 e0       	ldi	r22, 0x04	; 4
    3676:	0e 94 b2 25 	call	0x4b64	; 0x4b64 <twiReceive>
    367a:	85 30       	cpi	r24, 0x05	; 5
    367c:	21 f0       	breq	.+8      	; 0x3686 <hih8120_measure+0x1e>
    367e:	83 e0       	ldi	r24, 0x03	; 3
    3680:	08 95       	ret
    3682:	82 e0       	ldi	r24, 0x02	; 2
    3684:	08 95       	ret
    3686:	80 e0       	ldi	r24, 0x00	; 0
    3688:	08 95       	ret

0000368a <hih8120_getHumidity>:
    368a:	60 91 09 02 	lds	r22, 0x0209	; 0x800209 <_hum>
    368e:	70 91 0a 02 	lds	r23, 0x020A	; 0x80020a <_hum+0x1>
    3692:	80 e0       	ldi	r24, 0x00	; 0
    3694:	90 e0       	ldi	r25, 0x00	; 0
    3696:	0e 94 bc 27 	call	0x4f78	; 0x4f78 <__floatunsisf>
    369a:	20 e0       	ldi	r18, 0x00	; 0
    369c:	30 e0       	ldi	r19, 0x00	; 0
    369e:	48 ec       	ldi	r20, 0xC8	; 200
    36a0:	52 e4       	ldi	r21, 0x42	; 66
    36a2:	0e 94 4a 28 	call	0x5094	; 0x5094 <__mulsf3>
    36a6:	20 e0       	ldi	r18, 0x00	; 0
    36a8:	38 ef       	ldi	r19, 0xF8	; 248
    36aa:	4f e7       	ldi	r20, 0x7F	; 127
    36ac:	56 e4       	ldi	r21, 0x46	; 70
    36ae:	0c 94 23 27 	jmp	0x4e46	; 0x4e46 <__divsf3>
    36b2:	08 95       	ret

000036b4 <hih8120_getHumidityPercent_x10>:
    36b4:	ea df       	rcall	.-44     	; 0x368a <hih8120_getHumidity>
    36b6:	20 e0       	ldi	r18, 0x00	; 0
    36b8:	30 e0       	ldi	r19, 0x00	; 0
    36ba:	40 e2       	ldi	r20, 0x20	; 32
    36bc:	51 e4       	ldi	r21, 0x41	; 65
    36be:	0e 94 4a 28 	call	0x5094	; 0x5094 <__mulsf3>
    36c2:	0e 94 90 27 	call	0x4f20	; 0x4f20 <__fixunssfsi>
    36c6:	cb 01       	movw	r24, r22
    36c8:	08 95       	ret

000036ca <hih8120_getTemperature>:
    36ca:	60 91 07 02 	lds	r22, 0x0207	; 0x800207 <_temp>
    36ce:	70 91 08 02 	lds	r23, 0x0208	; 0x800208 <_temp+0x1>
    36d2:	80 e0       	ldi	r24, 0x00	; 0
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	0e 94 bc 27 	call	0x4f78	; 0x4f78 <__floatunsisf>
    36da:	20 e0       	ldi	r18, 0x00	; 0
    36dc:	30 e0       	ldi	r19, 0x00	; 0
    36de:	45 e2       	ldi	r20, 0x25	; 37
    36e0:	53 e4       	ldi	r21, 0x43	; 67
    36e2:	0e 94 4a 28 	call	0x5094	; 0x5094 <__mulsf3>
    36e6:	20 e0       	ldi	r18, 0x00	; 0
    36e8:	38 ef       	ldi	r19, 0xF8	; 248
    36ea:	4f e7       	ldi	r20, 0x7F	; 127
    36ec:	56 e4       	ldi	r21, 0x46	; 70
    36ee:	0e 94 23 27 	call	0x4e46	; 0x4e46 <__divsf3>
    36f2:	20 e0       	ldi	r18, 0x00	; 0
    36f4:	30 e0       	ldi	r19, 0x00	; 0
    36f6:	40 e2       	ldi	r20, 0x20	; 32
    36f8:	52 e4       	ldi	r21, 0x42	; 66
    36fa:	0c 94 be 26 	jmp	0x4d7c	; 0x4d7c <__subsf3>
    36fe:	08 95       	ret

00003700 <hih8120_getTemperature_x10>:
    3700:	e4 df       	rcall	.-56     	; 0x36ca <hih8120_getTemperature>
    3702:	20 e0       	ldi	r18, 0x00	; 0
    3704:	30 e0       	ldi	r19, 0x00	; 0
    3706:	40 e2       	ldi	r20, 0x20	; 32
    3708:	51 e4       	ldi	r21, 0x41	; 65
    370a:	0e 94 4a 28 	call	0x5094	; 0x5094 <__mulsf3>
    370e:	0e 94 8b 27 	call	0x4f16	; 0x4f16 <__fixsfsi>
    3712:	cb 01       	movw	r24, r22
    3714:	08 95       	ret

00003716 <_uploadMessage>:
    3716:	0f 93       	push	r16
    3718:	1f 93       	push	r17
    371a:	cf 93       	push	r28
    371c:	df 93       	push	r29
    371e:	8c 01       	movw	r16, r24
    3720:	eb 01       	movw	r28, r22
    3722:	80 91 ae 16 	lds	r24, 0x16AE	; 0x8016ae <_serialReplyBufferHandle>
    3726:	90 91 af 16 	lds	r25, 0x16AF	; 0x8016af <_serialReplyBufferHandle+0x1>
    372a:	0e 94 0e 0c 	call	0x181c	; 0x181c <xStreamBufferReset>
    372e:	b8 01       	movw	r22, r16
    3730:	85 e7       	ldi	r24, 0x75	; 117
    3732:	96 e1       	ldi	r25, 0x16	; 22
    3734:	0e 94 3c 2a 	call	0x5478	; 0x5478 <strcpy>
    3738:	20 97       	sbiw	r28, 0x00	; 0
    373a:	79 f0       	breq	.+30     	; 0x375a <_uploadMessage+0x44>
    373c:	e5 e7       	ldi	r30, 0x75	; 117
    373e:	f6 e1       	ldi	r31, 0x16	; 22
    3740:	01 90       	ld	r0, Z+
    3742:	00 20       	and	r0, r0
    3744:	e9 f7       	brne	.-6      	; 0x3740 <_uploadMessage+0x2a>
    3746:	31 97       	sbiw	r30, 0x01	; 1
    3748:	80 e2       	ldi	r24, 0x20	; 32
    374a:	90 e0       	ldi	r25, 0x00	; 0
    374c:	91 83       	std	Z+1, r25	; 0x01
    374e:	80 83       	st	Z, r24
    3750:	be 01       	movw	r22, r28
    3752:	85 e7       	ldi	r24, 0x75	; 117
    3754:	96 e1       	ldi	r25, 0x16	; 22
    3756:	0e 94 31 2a 	call	0x5462	; 0x5462 <strcat>
    375a:	e5 e7       	ldi	r30, 0x75	; 117
    375c:	f6 e1       	ldi	r31, 0x16	; 22
    375e:	df 01       	movw	r26, r30
    3760:	0d 90       	ld	r0, X+
    3762:	00 20       	and	r0, r0
    3764:	e9 f7       	brne	.-6      	; 0x3760 <_uploadMessage+0x4a>
    3766:	11 97       	sbiw	r26, 0x01	; 1
    3768:	8d e0       	ldi	r24, 0x0D	; 13
    376a:	9a e0       	ldi	r25, 0x0A	; 10
    376c:	11 96       	adiw	r26, 0x01	; 1
    376e:	9c 93       	st	X, r25
    3770:	8e 93       	st	-X, r24
    3772:	12 96       	adiw	r26, 0x02	; 2
    3774:	1c 92       	st	X, r1
    3776:	01 90       	ld	r0, Z+
    3778:	00 20       	and	r0, r0
    377a:	e9 f7       	brne	.-6      	; 0x3776 <_uploadMessage+0x60>
    377c:	31 97       	sbiw	r30, 0x01	; 1
    377e:	e5 57       	subi	r30, 0x75	; 117
    3780:	f6 41       	sbci	r31, 0x16	; 22
    3782:	ae 2f       	mov	r26, r30
    3784:	85 e7       	ldi	r24, 0x75	; 117
    3786:	96 e1       	ldi	r25, 0x16	; 22
    3788:	ac 01       	movw	r20, r24
    378a:	6a 2f       	mov	r22, r26
    378c:	80 91 b0 16 	lds	r24, 0x16B0	; 0x8016b0 <_rn2483_serial>
    3790:	90 91 b1 16 	lds	r25, 0x16B1	; 0x8016b1 <_rn2483_serial+0x1>
    3794:	72 d4       	rcall	.+2276   	; 0x407a <serial_sendBytes>
    3796:	81 11       	cpse	r24, r1
    3798:	11 c0       	rjmp	.+34     	; 0x37bc <_uploadMessage+0xa6>
    379a:	08 e2       	ldi	r16, 0x28	; 40
    379c:	15 e0       	ldi	r17, 0x05	; 5
    379e:	20 e0       	ldi	r18, 0x00	; 0
    37a0:	30 e0       	ldi	r19, 0x00	; 0
    37a2:	4d e2       	ldi	r20, 0x2D	; 45
    37a4:	50 e0       	ldi	r21, 0x00	; 0
    37a6:	6a e0       	ldi	r22, 0x0A	; 10
    37a8:	77 e1       	ldi	r23, 0x17	; 23
    37aa:	80 91 ae 16 	lds	r24, 0x16AE	; 0x8016ae <_serialReplyBufferHandle>
    37ae:	90 91 af 16 	lds	r25, 0x16AF	; 0x8016af <_serialReplyBufferHandle+0x1>
    37b2:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <xStreamBufferReceive>
    37b6:	8a e0       	ldi	r24, 0x0A	; 10
    37b8:	97 e1       	ldi	r25, 0x17	; 23
    37ba:	02 c0       	rjmp	.+4      	; 0x37c0 <_uploadMessage+0xaa>
    37bc:	80 e0       	ldi	r24, 0x00	; 0
    37be:	90 e0       	ldi	r25, 0x00	; 0
    37c0:	df 91       	pop	r29
    37c2:	cf 91       	pop	r28
    37c4:	1f 91       	pop	r17
    37c6:	0f 91       	pop	r16
    37c8:	08 95       	ret

000037ca <_reply2ReturnCode>:
    37ca:	2f 92       	push	r2
    37cc:	3f 92       	push	r3
    37ce:	4f 92       	push	r4
    37d0:	5f 92       	push	r5
    37d2:	6f 92       	push	r6
    37d4:	7f 92       	push	r7
    37d6:	8f 92       	push	r8
    37d8:	9f 92       	push	r9
    37da:	af 92       	push	r10
    37dc:	bf 92       	push	r11
    37de:	cf 92       	push	r12
    37e0:	df 92       	push	r13
    37e2:	ef 92       	push	r14
    37e4:	ff 92       	push	r15
    37e6:	0f 93       	push	r16
    37e8:	1f 93       	push	r17
    37ea:	cf 93       	push	r28
    37ec:	df 93       	push	r29
    37ee:	5c 01       	movw	r10, r24
    37f0:	fc 01       	movw	r30, r24
    37f2:	01 90       	ld	r0, Z+
    37f4:	00 20       	and	r0, r0
    37f6:	e9 f7       	brne	.-6      	; 0x37f2 <_reply2ReturnCode+0x28>
    37f8:	31 97       	sbiw	r30, 0x01	; 1
    37fa:	6f 01       	movw	r12, r30
    37fc:	c8 1a       	sub	r12, r24
    37fe:	d9 0a       	sbc	r13, r25
    3800:	5c 2c       	mov	r5, r12
    3802:	0f 2e       	mov	r0, r31
    3804:	fe e9       	ldi	r31, 0x9E	; 158
    3806:	8f 2e       	mov	r8, r31
    3808:	f7 e0       	ldi	r31, 0x07	; 7
    380a:	9f 2e       	mov	r9, r31
    380c:	f0 2d       	mov	r31, r0
    380e:	e1 2c       	mov	r14, r1
    3810:	f1 2c       	mov	r15, r1
    3812:	4c 2c       	mov	r4, r12
    3814:	37 01       	movw	r6, r14
    3816:	f4 01       	movw	r30, r8
    3818:	01 81       	ldd	r16, Z+1	; 0x01
    381a:	12 81       	ldd	r17, Z+2	; 0x02
    381c:	e8 01       	movw	r28, r16
    381e:	09 90       	ld	r0, Y+
    3820:	00 20       	and	r0, r0
    3822:	e9 f7       	brne	.-6      	; 0x381e <_reply2ReturnCode+0x54>
    3824:	21 97       	sbiw	r28, 0x01	; 1
    3826:	c0 1b       	sub	r28, r16
    3828:	d1 0b       	sbc	r29, r17
    382a:	3c 2e       	mov	r3, r28
    382c:	f9 e0       	ldi	r31, 0x09	; 9
    382e:	cf 16       	cp	r12, r31
    3830:	d1 04       	cpc	r13, r1
    3832:	58 f0       	brcs	.+22     	; 0x384a <_reply2ReturnCode+0x80>
    3834:	f4 01       	movw	r30, r8
    3836:	20 80       	ld	r2, Z
    3838:	fe e0       	ldi	r31, 0x0E	; 14
    383a:	2f 12       	cpse	r2, r31
    383c:	06 c0       	rjmp	.+12     	; 0x384a <_reply2ReturnCode+0x80>
    383e:	b8 01       	movw	r22, r16
    3840:	c5 01       	movw	r24, r10
    3842:	0e 94 0c 2a 	call	0x5418	; 0x5418 <strcasestr>
    3846:	89 2b       	or	r24, r25
    3848:	09 f5       	brne	.+66     	; 0x388c <_reply2ReturnCode+0xc2>
    384a:	44 2d       	mov	r20, r4
    384c:	35 14       	cp	r3, r5
    384e:	08 f4       	brcc	.+2      	; 0x3852 <_reply2ReturnCode+0x88>
    3850:	4c 2f       	mov	r20, r28
    3852:	50 e0       	ldi	r21, 0x00	; 0
    3854:	b8 01       	movw	r22, r16
    3856:	c5 01       	movw	r24, r10
    3858:	0e 94 43 2a 	call	0x5486	; 0x5486 <strncasecmp>
    385c:	89 2b       	or	r24, r25
    385e:	49 f4       	brne	.+18     	; 0x3872 <_reply2ReturnCode+0xa8>
    3860:	f3 01       	movw	r30, r6
    3862:	ee 0f       	add	r30, r30
    3864:	ff 1f       	adc	r31, r31
    3866:	e6 0d       	add	r30, r6
    3868:	f7 1d       	adc	r31, r7
    386a:	e2 56       	subi	r30, 0x62	; 98
    386c:	f8 4f       	sbci	r31, 0xF8	; 248
    386e:	20 80       	ld	r2, Z
    3870:	0d c0       	rjmp	.+26     	; 0x388c <_reply2ReturnCode+0xc2>
    3872:	8f ef       	ldi	r24, 0xFF	; 255
    3874:	e8 1a       	sub	r14, r24
    3876:	f8 0a       	sbc	r15, r24
    3878:	e3 e0       	ldi	r30, 0x03	; 3
    387a:	8e 0e       	add	r8, r30
    387c:	91 1c       	adc	r9, r1
    387e:	f1 e1       	ldi	r31, 0x11	; 17
    3880:	ef 16       	cp	r14, r31
    3882:	f1 04       	cpc	r15, r1
    3884:	39 f6       	brne	.-114    	; 0x3814 <_reply2ReturnCode+0x4a>
    3886:	68 94       	set
    3888:	22 24       	eor	r2, r2
    388a:	24 f8       	bld	r2, 4
    388c:	82 2d       	mov	r24, r2
    388e:	df 91       	pop	r29
    3890:	cf 91       	pop	r28
    3892:	1f 91       	pop	r17
    3894:	0f 91       	pop	r16
    3896:	ff 90       	pop	r15
    3898:	ef 90       	pop	r14
    389a:	df 90       	pop	r13
    389c:	cf 90       	pop	r12
    389e:	bf 90       	pop	r11
    38a0:	af 90       	pop	r10
    38a2:	9f 90       	pop	r9
    38a4:	8f 90       	pop	r8
    38a6:	7f 90       	pop	r7
    38a8:	6f 90       	pop	r6
    38aa:	5f 90       	pop	r5
    38ac:	4f 90       	pop	r4
    38ae:	3f 90       	pop	r3
    38b0:	2f 90       	pop	r2
    38b2:	08 95       	ret

000038b4 <_uploadMessageRc>:
    38b4:	30 df       	rcall	.-416    	; 0x3716 <_uploadMessage>
    38b6:	89 cf       	rjmp	.-238    	; 0x37ca <_reply2ReturnCode>
    38b8:	08 95       	ret

000038ba <lora_driver_flushBuffers>:
    38ba:	80 91 ae 16 	lds	r24, 0x16AE	; 0x8016ae <_serialReplyBufferHandle>
    38be:	90 91 af 16 	lds	r25, 0x16AF	; 0x8016af <_serialReplyBufferHandle+0x1>
    38c2:	0c 94 0e 0c 	jmp	0x181c	; 0x181c <xStreamBufferReset>
    38c6:	08 95       	ret

000038c8 <lora_driver_resetRn2483>:
    38c8:	88 23       	and	r24, r24
    38ca:	31 f0       	breq	.+12     	; 0x38d8 <lora_driver_resetRn2483+0x10>
    38cc:	e8 e0       	ldi	r30, 0x08	; 8
    38ce:	f1 e0       	ldi	r31, 0x01	; 1
    38d0:	80 81       	ld	r24, Z
    38d2:	8f 7e       	andi	r24, 0xEF	; 239
    38d4:	80 83       	st	Z, r24
    38d6:	08 95       	ret
    38d8:	e8 e0       	ldi	r30, 0x08	; 8
    38da:	f1 e0       	ldi	r31, 0x01	; 1
    38dc:	80 81       	ld	r24, Z
    38de:	80 61       	ori	r24, 0x10	; 16
    38e0:	80 83       	st	Z, r24
    38e2:	08 95       	ret

000038e4 <lora_driver_rn2483FactoryReset>:
    38e4:	60 e0       	ldi	r22, 0x00	; 0
    38e6:	70 e0       	ldi	r23, 0x00	; 0
    38e8:	84 e2       	ldi	r24, 0x24	; 36
    38ea:	95 e0       	ldi	r25, 0x05	; 5
    38ec:	14 df       	rcall	.-472    	; 0x3716 <_uploadMessage>
    38ee:	ea e0       	ldi	r30, 0x0A	; 10
    38f0:	f7 e1       	ldi	r31, 0x17	; 23
    38f2:	01 90       	ld	r0, Z+
    38f4:	00 20       	and	r0, r0
    38f6:	e9 f7       	brne	.-6      	; 0x38f2 <lora_driver_rn2483FactoryReset+0xe>
    38f8:	31 97       	sbiw	r30, 0x01	; 1
    38fa:	ea 50       	subi	r30, 0x0A	; 10
    38fc:	f7 41       	sbci	r31, 0x17	; 23
    38fe:	81 e0       	ldi	r24, 0x01	; 1
    3900:	75 97       	sbiw	r30, 0x15	; 21
    3902:	08 f0       	brcs	.+2      	; 0x3906 <lora_driver_rn2483FactoryReset+0x22>
    3904:	80 e0       	ldi	r24, 0x00	; 0
    3906:	08 95       	ret

00003908 <lora_driver_getRn2483Hweui>:
    3908:	cf 93       	push	r28
    390a:	df 93       	push	r29
    390c:	ec 01       	movw	r28, r24
    390e:	60 e0       	ldi	r22, 0x00	; 0
    3910:	70 e0       	ldi	r23, 0x00	; 0
    3912:	85 e3       	ldi	r24, 0x35	; 53
    3914:	95 e0       	ldi	r25, 0x05	; 5
    3916:	ff de       	rcall	.-514    	; 0x3716 <_uploadMessage>
    3918:	ea e0       	ldi	r30, 0x0A	; 10
    391a:	f7 e1       	ldi	r31, 0x17	; 23
    391c:	01 90       	ld	r0, Z+
    391e:	00 20       	and	r0, r0
    3920:	e9 f7       	brne	.-6      	; 0x391c <lora_driver_getRn2483Hweui+0x14>
    3922:	eb 51       	subi	r30, 0x1B	; 27
    3924:	f7 41       	sbci	r31, 0x17	; 23
    3926:	39 f4       	brne	.+14     	; 0x3936 <lora_driver_getRn2483Hweui+0x2e>
    3928:	6a e0       	ldi	r22, 0x0A	; 10
    392a:	77 e1       	ldi	r23, 0x17	; 23
    392c:	ce 01       	movw	r24, r28
    392e:	0e 94 3c 2a 	call	0x5478	; 0x5478 <strcpy>
    3932:	80 e0       	ldi	r24, 0x00	; 0
    3934:	02 c0       	rjmp	.+4      	; 0x393a <lora_driver_getRn2483Hweui+0x32>
    3936:	18 82       	st	Y, r1
    3938:	81 e0       	ldi	r24, 0x01	; 1
    393a:	df 91       	pop	r29
    393c:	cf 91       	pop	r28
    393e:	08 95       	ret

00003940 <lora_driver_setDeviceIdentifier>:
    3940:	fc 01       	movw	r30, r24
    3942:	01 90       	ld	r0, Z+
    3944:	00 20       	and	r0, r0
    3946:	e9 f7       	brne	.-6      	; 0x3942 <lora_driver_setDeviceIdentifier+0x2>
    3948:	9f 01       	movw	r18, r30
    394a:	21 51       	subi	r18, 0x11	; 17
    394c:	31 09       	sbc	r19, r1
    394e:	28 17       	cp	r18, r24
    3950:	39 07       	cpc	r19, r25
    3952:	29 f4       	brne	.+10     	; 0x395e <lora_driver_setDeviceIdentifier+0x1e>
    3954:	bc 01       	movw	r22, r24
    3956:	83 e6       	ldi	r24, 0x63	; 99
    3958:	95 e0       	ldi	r25, 0x05	; 5
    395a:	ac cf       	rjmp	.-168    	; 0x38b4 <_uploadMessageRc>
    395c:	08 95       	ret
    395e:	89 e0       	ldi	r24, 0x09	; 9
    3960:	08 95       	ret

00003962 <lora_driver_setApplicationIdentifier>:
    3962:	fc 01       	movw	r30, r24
    3964:	01 90       	ld	r0, Z+
    3966:	00 20       	and	r0, r0
    3968:	e9 f7       	brne	.-6      	; 0x3964 <lora_driver_setApplicationIdentifier+0x2>
    396a:	9f 01       	movw	r18, r30
    396c:	21 51       	subi	r18, 0x11	; 17
    396e:	31 09       	sbc	r19, r1
    3970:	28 17       	cp	r18, r24
    3972:	39 07       	cpc	r19, r25
    3974:	29 f4       	brne	.+10     	; 0x3980 <lora_driver_setApplicationIdentifier+0x1e>
    3976:	bc 01       	movw	r22, r24
    3978:	82 e7       	ldi	r24, 0x72	; 114
    397a:	95 e0       	ldi	r25, 0x05	; 5
    397c:	9b cf       	rjmp	.-202    	; 0x38b4 <_uploadMessageRc>
    397e:	08 95       	ret
    3980:	89 e0       	ldi	r24, 0x09	; 9
    3982:	08 95       	ret

00003984 <lora_driver_setApplicationKey>:
    3984:	fc 01       	movw	r30, r24
    3986:	01 90       	ld	r0, Z+
    3988:	00 20       	and	r0, r0
    398a:	e9 f7       	brne	.-6      	; 0x3986 <lora_driver_setApplicationKey+0x2>
    398c:	9f 01       	movw	r18, r30
    398e:	21 52       	subi	r18, 0x21	; 33
    3990:	31 09       	sbc	r19, r1
    3992:	28 17       	cp	r18, r24
    3994:	39 07       	cpc	r19, r25
    3996:	29 f4       	brne	.+10     	; 0x39a2 <lora_driver_setApplicationKey+0x1e>
    3998:	bc 01       	movw	r22, r24
    399a:	81 e8       	ldi	r24, 0x81	; 129
    399c:	95 e0       	ldi	r25, 0x05	; 5
    399e:	8a cf       	rjmp	.-236    	; 0x38b4 <_uploadMessageRc>
    39a0:	08 95       	ret
    39a2:	89 e0       	ldi	r24, 0x09	; 9
    39a4:	08 95       	ret

000039a6 <lora_driver_saveMac>:
    39a6:	60 e0       	ldi	r22, 0x00	; 0
    39a8:	70 e0       	ldi	r23, 0x00	; 0
    39aa:	80 ec       	ldi	r24, 0xC0	; 192
    39ac:	95 e0       	ldi	r25, 0x05	; 5
    39ae:	82 cf       	rjmp	.-252    	; 0x38b4 <_uploadMessageRc>
    39b0:	08 95       	ret

000039b2 <lora_driver_join>:
    39b2:	0f 93       	push	r16
    39b4:	1f 93       	push	r17
    39b6:	e8 2f       	mov	r30, r24
    39b8:	f0 e0       	ldi	r31, 0x00	; 0
    39ba:	ee 0f       	add	r30, r30
    39bc:	ff 1f       	adc	r31, r31
    39be:	e6 56       	subi	r30, 0x66	; 102
    39c0:	f8 4f       	sbci	r31, 0xF8	; 248
    39c2:	60 81       	ld	r22, Z
    39c4:	71 81       	ldd	r23, Z+1	; 0x01
    39c6:	89 ec       	ldi	r24, 0xC9	; 201
    39c8:	95 e0       	ldi	r25, 0x05	; 5
    39ca:	74 df       	rcall	.-280    	; 0x38b4 <_uploadMessageRc>
    39cc:	81 11       	cpse	r24, r1
    39ce:	14 c0       	rjmp	.+40     	; 0x39f8 <lora_driver_join+0x46>
    39d0:	08 e2       	ldi	r16, 0x28	; 40
    39d2:	15 e0       	ldi	r17, 0x05	; 5
    39d4:	20 e0       	ldi	r18, 0x00	; 0
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	4d e2       	ldi	r20, 0x2D	; 45
    39da:	50 e0       	ldi	r21, 0x00	; 0
    39dc:	6a e0       	ldi	r22, 0x0A	; 10
    39de:	77 e1       	ldi	r23, 0x17	; 23
    39e0:	80 91 ae 16 	lds	r24, 0x16AE	; 0x8016ae <_serialReplyBufferHandle>
    39e4:	90 91 af 16 	lds	r25, 0x16AF	; 0x8016af <_serialReplyBufferHandle+0x1>
    39e8:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <xStreamBufferReceive>
    39ec:	88 23       	and	r24, r24
    39ee:	21 f0       	breq	.+8      	; 0x39f8 <lora_driver_join+0x46>
    39f0:	8a e0       	ldi	r24, 0x0A	; 10
    39f2:	97 e1       	ldi	r25, 0x17	; 23
    39f4:	ea de       	rcall	.-556    	; 0x37ca <_reply2ReturnCode>
    39f6:	03 c0       	rjmp	.+6      	; 0x39fe <lora_driver_join+0x4c>
    39f8:	8a e0       	ldi	r24, 0x0A	; 10
    39fa:	97 e1       	ldi	r25, 0x17	; 23
    39fc:	e6 de       	rcall	.-564    	; 0x37ca <_reply2ReturnCode>
    39fe:	1f 91       	pop	r17
    3a00:	0f 91       	pop	r16
    3a02:	08 95       	ret

00003a04 <lora_driver_sendUploadMessage>:
    3a04:	0f 93       	push	r16
    3a06:	1f 93       	push	r17
    3a08:	cf 93       	push	r28
    3a0a:	df 93       	push	r29
    3a0c:	1f 92       	push	r1
    3a0e:	cd b7       	in	r28, 0x3d	; 61
    3a10:	de b7       	in	r29, 0x3e	; 62
    3a12:	db 01       	movw	r26, r22
    3a14:	11 96       	adiw	r26, 0x01	; 1
    3a16:	9c 91       	ld	r25, X
    3a18:	11 97       	sbiw	r26, 0x01	; 1
    3a1a:	95 31       	cpi	r25, 0x15	; 21
    3a1c:	08 f0       	brcs	.+2      	; 0x3a20 <lora_driver_sendUploadMessage+0x1c>
    3a1e:	b4 c0       	rjmp	.+360    	; 0x3b88 <lora_driver_sendUploadMessage+0x184>
    3a20:	99 23       	and	r25, r25
    3a22:	81 f1       	breq	.+96     	; 0x3a84 <lora_driver_sendUploadMessage+0x80>
    3a24:	60 e0       	ldi	r22, 0x00	; 0
    3a26:	70 e0       	ldi	r23, 0x00	; 0
    3a28:	27 2f       	mov	r18, r23
    3a2a:	30 e0       	ldi	r19, 0x00	; 0
    3a2c:	46 2f       	mov	r20, r22
    3a2e:	50 e0       	ldi	r21, 0x00	; 0
    3a30:	fd 01       	movw	r30, r26
    3a32:	e4 0f       	add	r30, r20
    3a34:	f5 1f       	adc	r31, r21
    3a36:	92 81       	ldd	r25, Z+2	; 0x02
    3a38:	92 95       	swap	r25
    3a3a:	9f 70       	andi	r25, 0x0F	; 15
    3a3c:	9a 30       	cpi	r25, 0x0A	; 10
    3a3e:	10 f0       	brcs	.+4      	; 0x3a44 <lora_driver_sendUploadMessage+0x40>
    3a40:	99 5c       	subi	r25, 0xC9	; 201
    3a42:	01 c0       	rjmp	.+2      	; 0x3a46 <lora_driver_sendUploadMessage+0x42>
    3a44:	90 5d       	subi	r25, 0xD0	; 208
    3a46:	f9 01       	movw	r30, r18
    3a48:	e8 53       	subi	r30, 0x38	; 56
    3a4a:	f9 4e       	sbci	r31, 0xE9	; 233
    3a4c:	90 83       	st	Z, r25
    3a4e:	2f 5f       	subi	r18, 0xFF	; 255
    3a50:	3f 4f       	sbci	r19, 0xFF	; 255
    3a52:	fd 01       	movw	r30, r26
    3a54:	e4 0f       	add	r30, r20
    3a56:	f5 1f       	adc	r31, r21
    3a58:	92 81       	ldd	r25, Z+2	; 0x02
    3a5a:	9f 70       	andi	r25, 0x0F	; 15
    3a5c:	49 2f       	mov	r20, r25
    3a5e:	50 e0       	ldi	r21, 0x00	; 0
    3a60:	4a 30       	cpi	r20, 0x0A	; 10
    3a62:	51 05       	cpc	r21, r1
    3a64:	14 f0       	brlt	.+4      	; 0x3a6a <lora_driver_sendUploadMessage+0x66>
    3a66:	99 5c       	subi	r25, 0xC9	; 201
    3a68:	01 c0       	rjmp	.+2      	; 0x3a6c <lora_driver_sendUploadMessage+0x68>
    3a6a:	90 5d       	subi	r25, 0xD0	; 208
    3a6c:	f9 01       	movw	r30, r18
    3a6e:	e8 53       	subi	r30, 0x38	; 56
    3a70:	f9 4e       	sbci	r31, 0xE9	; 233
    3a72:	90 83       	st	Z, r25
    3a74:	7e 5f       	subi	r23, 0xFE	; 254
    3a76:	6f 5f       	subi	r22, 0xFF	; 255
    3a78:	11 96       	adiw	r26, 0x01	; 1
    3a7a:	9c 91       	ld	r25, X
    3a7c:	11 97       	sbiw	r26, 0x01	; 1
    3a7e:	69 17       	cp	r22, r25
    3a80:	98 f2       	brcs	.-90     	; 0x3a28 <lora_driver_sendUploadMessage+0x24>
    3a82:	01 c0       	rjmp	.+2      	; 0x3a86 <lora_driver_sendUploadMessage+0x82>
    3a84:	70 e0       	ldi	r23, 0x00	; 0
    3a86:	e7 2f       	mov	r30, r23
    3a88:	f0 e0       	ldi	r31, 0x00	; 0
    3a8a:	e8 53       	subi	r30, 0x38	; 56
    3a8c:	f9 4e       	sbci	r31, 0xE9	; 233
    3a8e:	10 82       	st	Z, r1
    3a90:	4c 91       	ld	r20, X
    3a92:	81 11       	cpse	r24, r1
    3a94:	03 c0       	rjmp	.+6      	; 0x3a9c <lora_driver_sendUploadMessage+0x98>
    3a96:	82 ed       	ldi	r24, 0xD2	; 210
    3a98:	95 e0       	ldi	r25, 0x05	; 5
    3a9a:	02 c0       	rjmp	.+4      	; 0x3aa0 <lora_driver_sendUploadMessage+0x9c>
    3a9c:	84 ed       	ldi	r24, 0xD4	; 212
    3a9e:	95 e0       	ldi	r25, 0x05	; 5
    3aa0:	28 ec       	ldi	r18, 0xC8	; 200
    3aa2:	36 e1       	ldi	r19, 0x16	; 22
    3aa4:	3f 93       	push	r19
    3aa6:	2f 93       	push	r18
    3aa8:	1f 92       	push	r1
    3aaa:	4f 93       	push	r20
    3aac:	9f 93       	push	r25
    3aae:	8f 93       	push	r24
    3ab0:	88 ed       	ldi	r24, 0xD8	; 216
    3ab2:	95 e0       	ldi	r25, 0x05	; 5
    3ab4:	9f 93       	push	r25
    3ab6:	8f 93       	push	r24
    3ab8:	8d ed       	ldi	r24, 0xDD	; 221
    3aba:	96 e1       	ldi	r25, 0x16	; 22
    3abc:	9f 93       	push	r25
    3abe:	8f 93       	push	r24
    3ac0:	0e 94 9e 2a 	call	0x553c	; 0x553c <sprintf>
    3ac4:	60 e0       	ldi	r22, 0x00	; 0
    3ac6:	70 e0       	ldi	r23, 0x00	; 0
    3ac8:	8d ed       	ldi	r24, 0xDD	; 221
    3aca:	96 e1       	ldi	r25, 0x16	; 22
    3acc:	f3 de       	rcall	.-538    	; 0x38b4 <_uploadMessageRc>
    3ace:	0f b6       	in	r0, 0x3f	; 63
    3ad0:	f8 94       	cli
    3ad2:	de bf       	out	0x3e, r29	; 62
    3ad4:	0f be       	out	0x3f, r0	; 63
    3ad6:	cd bf       	out	0x3d, r28	; 61
    3ad8:	81 11       	cpse	r24, r1
    3ada:	59 c0       	rjmp	.+178    	; 0x3b8e <lora_driver_sendUploadMessage+0x18a>
    3adc:	08 e2       	ldi	r16, 0x28	; 40
    3ade:	15 e0       	ldi	r17, 0x05	; 5
    3ae0:	20 e0       	ldi	r18, 0x00	; 0
    3ae2:	30 e0       	ldi	r19, 0x00	; 0
    3ae4:	4d e2       	ldi	r20, 0x2D	; 45
    3ae6:	50 e0       	ldi	r21, 0x00	; 0
    3ae8:	6a e0       	ldi	r22, 0x0A	; 10
    3aea:	77 e1       	ldi	r23, 0x17	; 23
    3aec:	80 91 ae 16 	lds	r24, 0x16AE	; 0x8016ae <_serialReplyBufferHandle>
    3af0:	90 91 af 16 	lds	r25, 0x16AF	; 0x8016af <_serialReplyBufferHandle+0x1>
    3af4:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <xStreamBufferReceive>
    3af8:	88 23       	and	r24, r24
    3afa:	09 f4       	brne	.+2      	; 0x3afe <lora_driver_sendUploadMessage+0xfa>
    3afc:	47 c0       	rjmp	.+142    	; 0x3b8c <lora_driver_sendUploadMessage+0x188>
    3afe:	8a e0       	ldi	r24, 0x0A	; 10
    3b00:	97 e1       	ldi	r25, 0x17	; 23
    3b02:	63 de       	rcall	.-826    	; 0x37ca <_reply2ReturnCode>
    3b04:	8e 30       	cpi	r24, 0x0E	; 14
    3b06:	09 f0       	breq	.+2      	; 0x3b0a <lora_driver_sendUploadMessage+0x106>
    3b08:	42 c0       	rjmp	.+132    	; 0x3b8e <lora_driver_sendUploadMessage+0x18a>
    3b0a:	87 e0       	ldi	r24, 0x07	; 7
    3b0c:	89 83       	std	Y+1, r24	; 0x01
    3b0e:	80 91 ac 16 	lds	r24, 0x16AC	; 0x8016ac <_downlinkMessageBuffer>
    3b12:	90 91 ad 16 	lds	r25, 0x16AD	; 0x8016ad <_downlinkMessageBuffer+0x1>
    3b16:	89 2b       	or	r24, r25
    3b18:	a9 f1       	breq	.+106    	; 0x3b84 <lora_driver_sendUploadMessage+0x180>
    3b1a:	be 01       	movw	r22, r28
    3b1c:	6f 5f       	subi	r22, 0xFF	; 255
    3b1e:	7f 4f       	sbci	r23, 0xFF	; 255
    3b20:	8a e0       	ldi	r24, 0x0A	; 10
    3b22:	97 e1       	ldi	r25, 0x17	; 23
    3b24:	68 d1       	rcall	.+720    	; 0x3df6 <decode_port_no>
    3b26:	80 93 b2 16 	sts	0x16B2, r24	; 0x8016b2 <_downlinkPayload>
    3b2a:	e9 81       	ldd	r30, Y+1	; 0x01
    3b2c:	f0 e0       	ldi	r31, 0x00	; 0
    3b2e:	e6 5f       	subi	r30, 0xF6	; 246
    3b30:	f8 4e       	sbci	r31, 0xE8	; 232
    3b32:	df 01       	movw	r26, r30
    3b34:	0d 90       	ld	r0, X+
    3b36:	00 20       	and	r0, r0
    3b38:	e9 f7       	brne	.-6      	; 0x3b34 <lora_driver_sendUploadMessage+0x130>
    3b3a:	11 97       	sbiw	r26, 0x01	; 1
    3b3c:	ae 1b       	sub	r26, r30
    3b3e:	bf 0b       	sbc	r27, r31
    3b40:	aa 23       	and	r26, r26
    3b42:	91 f0       	breq	.+36     	; 0x3b68 <lora_driver_sendUploadMessage+0x164>
    3b44:	bb 27       	eor	r27, r27
    3b46:	cd 01       	movw	r24, r26
    3b48:	01 97       	sbiw	r24, 0x01	; 1
    3b4a:	9c 01       	movw	r18, r24
    3b4c:	12 f4       	brpl	.+4      	; 0x3b52 <lora_driver_sendUploadMessage+0x14e>
    3b4e:	2f 5f       	subi	r18, 0xFF	; 255
    3b50:	3f 4f       	sbci	r19, 0xFF	; 255
    3b52:	35 95       	asr	r19
    3b54:	27 95       	ror	r18
    3b56:	20 93 b3 16 	sts	0x16B3, r18	; 0x8016b3 <_downlinkPayload+0x1>
    3b5a:	af 01       	movw	r20, r30
    3b5c:	4f 5f       	subi	r20, 0xFF	; 255
    3b5e:	5f 4f       	sbci	r21, 0xFF	; 255
    3b60:	64 e1       	ldi	r22, 0x14	; 20
    3b62:	84 eb       	ldi	r24, 0xB4	; 180
    3b64:	96 e1       	ldi	r25, 0x16	; 22
    3b66:	73 d1       	rcall	.+742    	; 0x3e4e <decode_hexadecimal_string_bytes>
    3b68:	01 e0       	ldi	r16, 0x01	; 1
    3b6a:	10 e0       	ldi	r17, 0x00	; 0
    3b6c:	20 e0       	ldi	r18, 0x00	; 0
    3b6e:	30 e0       	ldi	r19, 0x00	; 0
    3b70:	46 e1       	ldi	r20, 0x16	; 22
    3b72:	50 e0       	ldi	r21, 0x00	; 0
    3b74:	62 eb       	ldi	r22, 0xB2	; 178
    3b76:	76 e1       	ldi	r23, 0x16	; 22
    3b78:	80 91 ac 16 	lds	r24, 0x16AC	; 0x8016ac <_downlinkMessageBuffer>
    3b7c:	90 91 ad 16 	lds	r25, 0x16AD	; 0x8016ad <_downlinkMessageBuffer+0x1>
    3b80:	0e 94 3e 0c 	call	0x187c	; 0x187c <xStreamBufferSend>
    3b84:	8e e0       	ldi	r24, 0x0E	; 14
    3b86:	03 c0       	rjmp	.+6      	; 0x3b8e <lora_driver_sendUploadMessage+0x18a>
    3b88:	84 e1       	ldi	r24, 0x14	; 20
    3b8a:	01 c0       	rjmp	.+2      	; 0x3b8e <lora_driver_sendUploadMessage+0x18a>
    3b8c:	80 e0       	ldi	r24, 0x00	; 0
    3b8e:	0f 90       	pop	r0
    3b90:	df 91       	pop	r29
    3b92:	cf 91       	pop	r28
    3b94:	1f 91       	pop	r17
    3b96:	0f 91       	pop	r16
    3b98:	08 95       	ret

00003b9a <lora_driver_setAdaptiveDataRate>:
    3b9a:	81 30       	cpi	r24, 0x01	; 1
    3b9c:	19 f0       	breq	.+6      	; 0x3ba4 <lora_driver_setAdaptiveDataRate+0xa>
    3b9e:	68 ee       	ldi	r22, 0xE8	; 232
    3ba0:	75 e0       	ldi	r23, 0x05	; 5
    3ba2:	02 c0       	rjmp	.+4      	; 0x3ba8 <lora_driver_setAdaptiveDataRate+0xe>
    3ba4:	61 ec       	ldi	r22, 0xC1	; 193
    3ba6:	76 e0       	ldi	r23, 0x06	; 6
    3ba8:	8c ee       	ldi	r24, 0xEC	; 236
    3baa:	95 e0       	ldi	r25, 0x05	; 5
    3bac:	83 ce       	rjmp	.-762    	; 0x38b4 <_uploadMessageRc>
    3bae:	08 95       	ret

00003bb0 <lora_driver_setReceiveDelay>:
    3bb0:	9f 93       	push	r25
    3bb2:	8f 93       	push	r24
    3bb4:	8d e1       	ldi	r24, 0x1D	; 29
    3bb6:	96 e0       	ldi	r25, 0x06	; 6
    3bb8:	9f 93       	push	r25
    3bba:	8f 93       	push	r24
    3bbc:	8d ed       	ldi	r24, 0xDD	; 221
    3bbe:	96 e1       	ldi	r25, 0x16	; 22
    3bc0:	9f 93       	push	r25
    3bc2:	8f 93       	push	r24
    3bc4:	0e 94 9e 2a 	call	0x553c	; 0x553c <sprintf>
    3bc8:	60 e0       	ldi	r22, 0x00	; 0
    3bca:	70 e0       	ldi	r23, 0x00	; 0
    3bcc:	8d ed       	ldi	r24, 0xDD	; 221
    3bce:	96 e1       	ldi	r25, 0x16	; 22
    3bd0:	71 de       	rcall	.-798    	; 0x38b4 <_uploadMessageRc>
    3bd2:	0f 90       	pop	r0
    3bd4:	0f 90       	pop	r0
    3bd6:	0f 90       	pop	r0
    3bd8:	0f 90       	pop	r0
    3bda:	0f 90       	pop	r0
    3bdc:	0f 90       	pop	r0
    3bde:	08 95       	ret

00003be0 <lora_driver_configureToEu868>:
    3be0:	2f 92       	push	r2
    3be2:	3f 92       	push	r3
    3be4:	4f 92       	push	r4
    3be6:	5f 92       	push	r5
    3be8:	6f 92       	push	r6
    3bea:	7f 92       	push	r7
    3bec:	8f 92       	push	r8
    3bee:	9f 92       	push	r9
    3bf0:	af 92       	push	r10
    3bf2:	bf 92       	push	r11
    3bf4:	cf 92       	push	r12
    3bf6:	df 92       	push	r13
    3bf8:	ef 92       	push	r14
    3bfa:	ff 92       	push	r15
    3bfc:	0f 93       	push	r16
    3bfe:	1f 93       	push	r17
    3c00:	cf 93       	push	r28
    3c02:	df 93       	push	r29
    3c04:	cd b7       	in	r28, 0x3d	; 61
    3c06:	de b7       	in	r29, 0x3e	; 62
    3c08:	a0 97       	sbiw	r28, 0x20	; 32
    3c0a:	0f b6       	in	r0, 0x3f	; 63
    3c0c:	f8 94       	cli
    3c0e:	de bf       	out	0x3e, r29	; 62
    3c10:	0f be       	out	0x3f, r0	; 63
    3c12:	cd bf       	out	0x3d, r28	; 61
    3c14:	6a e4       	ldi	r22, 0x4A	; 74
    3c16:	76 e0       	ldi	r23, 0x06	; 6
    3c18:	86 e5       	ldi	r24, 0x56	; 86
    3c1a:	96 e0       	ldi	r25, 0x06	; 6
    3c1c:	7c dd       	rcall	.-1288   	; 0x3716 <_uploadMessage>
    3c1e:	d5 dd       	rcall	.-1110   	; 0x37ca <_reply2ReturnCode>
    3c20:	81 11       	cpse	r24, r1
    3c22:	a3 c0       	rjmp	.+326    	; 0x3d6a <lora_driver_configureToEu868+0x18a>
    3c24:	80 e2       	ldi	r24, 0x20	; 32
    3c26:	e2 e2       	ldi	r30, 0x22	; 34
    3c28:	f2 e0       	ldi	r31, 0x02	; 2
    3c2a:	de 01       	movw	r26, r28
    3c2c:	11 96       	adiw	r26, 0x01	; 1
    3c2e:	01 90       	ld	r0, Z+
    3c30:	0d 92       	st	X+, r0
    3c32:	8a 95       	dec	r24
    3c34:	e1 f7       	brne	.-8      	; 0x3c2e <lora_driver_configureToEu868+0x4e>
    3c36:	9e 01       	movw	r18, r28
    3c38:	2f 5f       	subi	r18, 0xFF	; 255
    3c3a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c3c:	69 01       	movw	r12, r18
    3c3e:	e1 2c       	mov	r14, r1
    3c40:	f1 2c       	mov	r15, r1
    3c42:	0f 2e       	mov	r0, r31
    3c44:	f2 e6       	ldi	r31, 0x62	; 98
    3c46:	af 2e       	mov	r10, r31
    3c48:	f6 e0       	ldi	r31, 0x06	; 6
    3c4a:	bf 2e       	mov	r11, r31
    3c4c:	f0 2d       	mov	r31, r0
    3c4e:	0d ed       	ldi	r16, 0xDD	; 221
    3c50:	16 e1       	ldi	r17, 0x16	; 22
    3c52:	0f 2e       	mov	r0, r31
    3c54:	fb e7       	ldi	r31, 0x7B	; 123
    3c56:	4f 2e       	mov	r4, r31
    3c58:	f6 e0       	ldi	r31, 0x06	; 6
    3c5a:	5f 2e       	mov	r5, r31
    3c5c:	f0 2d       	mov	r31, r0
    3c5e:	0f 2e       	mov	r0, r31
    3c60:	f2 e9       	ldi	r31, 0x92	; 146
    3c62:	8f 2e       	mov	r8, r31
    3c64:	f6 e0       	ldi	r31, 0x06	; 6
    3c66:	9f 2e       	mov	r9, r31
    3c68:	f0 2d       	mov	r31, r0
    3c6a:	0f 2e       	mov	r0, r31
    3c6c:	fc ea       	ldi	r31, 0xAC	; 172
    3c6e:	6f 2e       	mov	r6, r31
    3c70:	f6 e0       	ldi	r31, 0x06	; 6
    3c72:	7f 2e       	mov	r7, r31
    3c74:	f0 2d       	mov	r31, r0
    3c76:	3e 2c       	mov	r3, r14
    3c78:	2f 2c       	mov	r2, r15
    3c7a:	ff 92       	push	r15
    3c7c:	ef 92       	push	r14
    3c7e:	bf 92       	push	r11
    3c80:	af 92       	push	r10
    3c82:	1f 93       	push	r17
    3c84:	0f 93       	push	r16
    3c86:	0e 94 9e 2a 	call	0x553c	; 0x553c <sprintf>
    3c8a:	60 e0       	ldi	r22, 0x00	; 0
    3c8c:	70 e0       	ldi	r23, 0x00	; 0
    3c8e:	c8 01       	movw	r24, r16
    3c90:	42 dd       	rcall	.-1404   	; 0x3716 <_uploadMessage>
    3c92:	9b dd       	rcall	.-1226   	; 0x37ca <_reply2ReturnCode>
    3c94:	0f 90       	pop	r0
    3c96:	0f 90       	pop	r0
    3c98:	0f 90       	pop	r0
    3c9a:	0f 90       	pop	r0
    3c9c:	0f 90       	pop	r0
    3c9e:	0f 90       	pop	r0
    3ca0:	81 11       	cpse	r24, r1
    3ca2:	63 c0       	rjmp	.+198    	; 0x3d6a <lora_driver_configureToEu868+0x18a>
    3ca4:	32 e0       	ldi	r19, 0x02	; 2
    3ca6:	3e 15       	cp	r19, r14
    3ca8:	e8 f4       	brcc	.+58     	; 0x3ce4 <lora_driver_configureToEu868+0x104>
    3caa:	f6 01       	movw	r30, r12
    3cac:	83 81       	ldd	r24, Z+3	; 0x03
    3cae:	8f 93       	push	r24
    3cb0:	82 81       	ldd	r24, Z+2	; 0x02
    3cb2:	8f 93       	push	r24
    3cb4:	81 81       	ldd	r24, Z+1	; 0x01
    3cb6:	8f 93       	push	r24
    3cb8:	80 81       	ld	r24, Z
    3cba:	8f 93       	push	r24
    3cbc:	ff 92       	push	r15
    3cbe:	ef 92       	push	r14
    3cc0:	5f 92       	push	r5
    3cc2:	4f 92       	push	r4
    3cc4:	1f 93       	push	r17
    3cc6:	0f 93       	push	r16
    3cc8:	0e 94 9e 2a 	call	0x553c	; 0x553c <sprintf>
    3ccc:	60 e0       	ldi	r22, 0x00	; 0
    3cce:	70 e0       	ldi	r23, 0x00	; 0
    3cd0:	c8 01       	movw	r24, r16
    3cd2:	21 dd       	rcall	.-1470   	; 0x3716 <_uploadMessage>
    3cd4:	7a dd       	rcall	.-1292   	; 0x37ca <_reply2ReturnCode>
    3cd6:	0f b6       	in	r0, 0x3f	; 63
    3cd8:	f8 94       	cli
    3cda:	de bf       	out	0x3e, r29	; 62
    3cdc:	0f be       	out	0x3f, r0	; 63
    3cde:	cd bf       	out	0x3d, r28	; 61
    3ce0:	81 11       	cpse	r24, r1
    3ce2:	43 c0       	rjmp	.+134    	; 0x3d6a <lora_driver_configureToEu868+0x18a>
    3ce4:	2f 92       	push	r2
    3ce6:	3f 92       	push	r3
    3ce8:	9f 92       	push	r9
    3cea:	8f 92       	push	r8
    3cec:	1f 93       	push	r17
    3cee:	0f 93       	push	r16
    3cf0:	0e 94 9e 2a 	call	0x553c	; 0x553c <sprintf>
    3cf4:	60 e0       	ldi	r22, 0x00	; 0
    3cf6:	70 e0       	ldi	r23, 0x00	; 0
    3cf8:	c8 01       	movw	r24, r16
    3cfa:	0d dd       	rcall	.-1510   	; 0x3716 <_uploadMessage>
    3cfc:	66 dd       	rcall	.-1332   	; 0x37ca <_reply2ReturnCode>
    3cfe:	0f 90       	pop	r0
    3d00:	0f 90       	pop	r0
    3d02:	0f 90       	pop	r0
    3d04:	0f 90       	pop	r0
    3d06:	0f 90       	pop	r0
    3d08:	0f 90       	pop	r0
    3d0a:	81 11       	cpse	r24, r1
    3d0c:	2e c0       	rjmp	.+92     	; 0x3d6a <lora_driver_configureToEu868+0x18a>
    3d0e:	2f 92       	push	r2
    3d10:	3f 92       	push	r3
    3d12:	7f 92       	push	r7
    3d14:	6f 92       	push	r6
    3d16:	1f 93       	push	r17
    3d18:	0f 93       	push	r16
    3d1a:	0e 94 9e 2a 	call	0x553c	; 0x553c <sprintf>
    3d1e:	60 e0       	ldi	r22, 0x00	; 0
    3d20:	70 e0       	ldi	r23, 0x00	; 0
    3d22:	c8 01       	movw	r24, r16
    3d24:	f8 dc       	rcall	.-1552   	; 0x3716 <_uploadMessage>
    3d26:	51 dd       	rcall	.-1374   	; 0x37ca <_reply2ReturnCode>
    3d28:	0f 90       	pop	r0
    3d2a:	0f 90       	pop	r0
    3d2c:	0f 90       	pop	r0
    3d2e:	0f 90       	pop	r0
    3d30:	0f 90       	pop	r0
    3d32:	0f 90       	pop	r0
    3d34:	81 11       	cpse	r24, r1
    3d36:	19 c0       	rjmp	.+50     	; 0x3d6a <lora_driver_configureToEu868+0x18a>
    3d38:	3f ef       	ldi	r19, 0xFF	; 255
    3d3a:	e3 1a       	sub	r14, r19
    3d3c:	f3 0a       	sbc	r15, r19
    3d3e:	84 e0       	ldi	r24, 0x04	; 4
    3d40:	c8 0e       	add	r12, r24
    3d42:	d1 1c       	adc	r13, r1
    3d44:	98 e0       	ldi	r25, 0x08	; 8
    3d46:	e9 16       	cp	r14, r25
    3d48:	f1 04       	cpc	r15, r1
    3d4a:	09 f0       	breq	.+2      	; 0x3d4e <lora_driver_configureToEu868+0x16e>
    3d4c:	94 cf       	rjmp	.-216    	; 0x3c76 <lora_driver_configureToEu868+0x96>
    3d4e:	60 e0       	ldi	r22, 0x00	; 0
    3d50:	70 e0       	ldi	r23, 0x00	; 0
    3d52:	84 ec       	ldi	r24, 0xC4	; 196
    3d54:	96 e0       	ldi	r25, 0x06	; 6
    3d56:	df dc       	rcall	.-1602   	; 0x3716 <_uploadMessage>
    3d58:	38 dd       	rcall	.-1424   	; 0x37ca <_reply2ReturnCode>
    3d5a:	81 11       	cpse	r24, r1
    3d5c:	06 c0       	rjmp	.+12     	; 0x3d6a <lora_driver_configureToEu868+0x18a>
    3d5e:	60 e0       	ldi	r22, 0x00	; 0
    3d60:	70 e0       	ldi	r23, 0x00	; 0
    3d62:	85 ed       	ldi	r24, 0xD5	; 213
    3d64:	96 e0       	ldi	r25, 0x06	; 6
    3d66:	d7 dc       	rcall	.-1618   	; 0x3716 <_uploadMessage>
    3d68:	30 dd       	rcall	.-1440   	; 0x37ca <_reply2ReturnCode>
    3d6a:	a0 96       	adiw	r28, 0x20	; 32
    3d6c:	0f b6       	in	r0, 0x3f	; 63
    3d6e:	f8 94       	cli
    3d70:	de bf       	out	0x3e, r29	; 62
    3d72:	0f be       	out	0x3f, r0	; 63
    3d74:	cd bf       	out	0x3d, r28	; 61
    3d76:	df 91       	pop	r29
    3d78:	cf 91       	pop	r28
    3d7a:	1f 91       	pop	r17
    3d7c:	0f 91       	pop	r16
    3d7e:	ff 90       	pop	r15
    3d80:	ef 90       	pop	r14
    3d82:	df 90       	pop	r13
    3d84:	cf 90       	pop	r12
    3d86:	bf 90       	pop	r11
    3d88:	af 90       	pop	r10
    3d8a:	9f 90       	pop	r9
    3d8c:	8f 90       	pop	r8
    3d8e:	7f 90       	pop	r7
    3d90:	6f 90       	pop	r6
    3d92:	5f 90       	pop	r5
    3d94:	4f 90       	pop	r4
    3d96:	3f 90       	pop	r3
    3d98:	2f 90       	pop	r2
    3d9a:	08 95       	ret

00003d9c <lora_driver_setOtaaIdentity>:
    3d9c:	ef 92       	push	r14
    3d9e:	ff 92       	push	r15
    3da0:	0f 93       	push	r16
    3da2:	1f 93       	push	r17
    3da4:	cf 93       	push	r28
    3da6:	df 93       	push	r29
    3da8:	ec 01       	movw	r28, r24
    3daa:	8b 01       	movw	r16, r22
    3dac:	7a 01       	movw	r14, r20
    3dae:	81 e0       	ldi	r24, 0x01	; 1
    3db0:	f4 de       	rcall	.-536    	; 0x3b9a <lora_driver_setAdaptiveDataRate>
    3db2:	81 11       	cpse	r24, r1
    3db4:	0d c0       	rjmp	.+26     	; 0x3dd0 <lora_driver_setOtaaIdentity+0x34>
    3db6:	ce 01       	movw	r24, r28
    3db8:	d4 dd       	rcall	.-1112   	; 0x3962 <lora_driver_setApplicationIdentifier>
    3dba:	81 11       	cpse	r24, r1
    3dbc:	09 c0       	rjmp	.+18     	; 0x3dd0 <lora_driver_setOtaaIdentity+0x34>
    3dbe:	c8 01       	movw	r24, r16
    3dc0:	e1 dd       	rcall	.-1086   	; 0x3984 <lora_driver_setApplicationKey>
    3dc2:	81 11       	cpse	r24, r1
    3dc4:	05 c0       	rjmp	.+10     	; 0x3dd0 <lora_driver_setOtaaIdentity+0x34>
    3dc6:	c7 01       	movw	r24, r14
    3dc8:	bb dd       	rcall	.-1162   	; 0x3940 <lora_driver_setDeviceIdentifier>
    3dca:	81 11       	cpse	r24, r1
    3dcc:	01 c0       	rjmp	.+2      	; 0x3dd0 <lora_driver_setOtaaIdentity+0x34>
    3dce:	eb dd       	rcall	.-1066   	; 0x39a6 <lora_driver_saveMac>
    3dd0:	df 91       	pop	r29
    3dd2:	cf 91       	pop	r28
    3dd4:	1f 91       	pop	r17
    3dd6:	0f 91       	pop	r16
    3dd8:	ff 90       	pop	r15
    3dda:	ef 90       	pop	r14
    3ddc:	08 95       	ret

00003dde <lora_driver_mapReturnCodeToText>:
    3dde:	90 e0       	ldi	r25, 0x00	; 0
    3de0:	fc 01       	movw	r30, r24
    3de2:	ee 0f       	add	r30, r30
    3de4:	ff 1f       	adc	r31, r31
    3de6:	8e 0f       	add	r24, r30
    3de8:	9f 1f       	adc	r25, r31
    3dea:	fc 01       	movw	r30, r24
    3dec:	e2 56       	subi	r30, 0x62	; 98
    3dee:	f8 4f       	sbci	r31, 0xF8	; 248
    3df0:	81 81       	ldd	r24, Z+1	; 0x01
    3df2:	92 81       	ldd	r25, Z+2	; 0x02
    3df4:	08 95       	ret

00003df6 <decode_port_no>:
    3df6:	dc 01       	movw	r26, r24
    3df8:	00 97       	sbiw	r24, 0x00	; 0
    3dfa:	29 f1       	breq	.+74     	; 0x3e46 <decode_port_no+0x50>
    3dfc:	fb 01       	movw	r30, r22
    3dfe:	20 81       	ld	r18, Z
    3e00:	fc 01       	movw	r30, r24
    3e02:	01 90       	ld	r0, Z+
    3e04:	00 20       	and	r0, r0
    3e06:	e9 f7       	brne	.-6      	; 0x3e02 <decode_port_no+0xc>
    3e08:	31 97       	sbiw	r30, 0x01	; 1
    3e0a:	e8 1b       	sub	r30, r24
    3e0c:	f9 0b       	sbc	r31, r25
    3e0e:	82 2f       	mov	r24, r18
    3e10:	90 e0       	ldi	r25, 0x00	; 0
    3e12:	e8 17       	cp	r30, r24
    3e14:	f9 07       	cpc	r31, r25
    3e16:	c8 f0       	brcs	.+50     	; 0x3e4a <decode_port_no+0x54>
    3e18:	80 e0       	ldi	r24, 0x00	; 0
    3e1a:	08 c0       	rjmp	.+16     	; 0x3e2c <decode_port_no+0x36>
    3e1c:	88 0f       	add	r24, r24
    3e1e:	38 2f       	mov	r19, r24
    3e20:	33 0f       	add	r19, r19
    3e22:	33 0f       	add	r19, r19
    3e24:	83 0f       	add	r24, r19
    3e26:	80 53       	subi	r24, 0x30	; 48
    3e28:	89 0f       	add	r24, r25
    3e2a:	2f 5f       	subi	r18, 0xFF	; 255
    3e2c:	fd 01       	movw	r30, r26
    3e2e:	e2 0f       	add	r30, r18
    3e30:	f1 1d       	adc	r31, r1
    3e32:	90 81       	ld	r25, Z
    3e34:	30 ed       	ldi	r19, 0xD0	; 208
    3e36:	39 0f       	add	r19, r25
    3e38:	3a 30       	cpi	r19, 0x0A	; 10
    3e3a:	10 f4       	brcc	.+4      	; 0x3e40 <decode_port_no+0x4a>
    3e3c:	91 11       	cpse	r25, r1
    3e3e:	ee cf       	rjmp	.-36     	; 0x3e1c <decode_port_no+0x26>
    3e40:	fb 01       	movw	r30, r22
    3e42:	20 83       	st	Z, r18
    3e44:	08 95       	ret
    3e46:	80 e0       	ldi	r24, 0x00	; 0
    3e48:	08 95       	ret
    3e4a:	80 e0       	ldi	r24, 0x00	; 0
    3e4c:	08 95       	ret

00003e4e <decode_hexadecimal_string_bytes>:
    3e4e:	0f 93       	push	r16
    3e50:	1f 93       	push	r17
    3e52:	cf 93       	push	r28
    3e54:	df 93       	push	r29
    3e56:	dc 01       	movw	r26, r24
    3e58:	ea 01       	movw	r28, r20
    3e5a:	20 97       	sbiw	r28, 0x00	; 0
    3e5c:	e1 f1       	breq	.+120    	; 0x3ed6 <decode_hexadecimal_string_bytes+0x88>
    3e5e:	fa 01       	movw	r30, r20
    3e60:	01 90       	ld	r0, Z+
    3e62:	00 20       	and	r0, r0
    3e64:	e9 f7       	brne	.-6      	; 0x3e60 <decode_hexadecimal_string_bytes+0x12>
    3e66:	31 97       	sbiw	r30, 0x01	; 1
    3e68:	e4 1b       	sub	r30, r20
    3e6a:	f5 0b       	sbc	r31, r21
    3e6c:	32 97       	sbiw	r30, 0x02	; 2
    3e6e:	10 f5       	brcc	.+68     	; 0x3eb4 <decode_hexadecimal_string_bytes+0x66>
    3e70:	32 c0       	rjmp	.+100    	; 0x3ed6 <decode_hexadecimal_string_bytes+0x88>
    3e72:	8d 01       	movw	r16, r26
    3e74:	04 0f       	add	r16, r20
    3e76:	15 1f       	adc	r17, r21
    3e78:	30 e0       	ldi	r19, 0x00	; 0
    3e7a:	ae 01       	movw	r20, r28
    3e7c:	42 0f       	add	r20, r18
    3e7e:	53 1f       	adc	r21, r19
    3e80:	fa 01       	movw	r30, r20
    3e82:	90 81       	ld	r25, Z
    3e84:	91 34       	cpi	r25, 0x41	; 65
    3e86:	28 f0       	brcs	.+10     	; 0x3e92 <decode_hexadecimal_string_bytes+0x44>
    3e88:	97 53       	subi	r25, 0x37	; 55
    3e8a:	59 2f       	mov	r21, r25
    3e8c:	52 95       	swap	r21
    3e8e:	50 7f       	andi	r21, 0xF0	; 240
    3e90:	03 c0       	rjmp	.+6      	; 0x3e98 <decode_hexadecimal_string_bytes+0x4a>
    3e92:	59 2f       	mov	r21, r25
    3e94:	52 95       	swap	r21
    3e96:	50 7f       	andi	r21, 0xF0	; 240
    3e98:	2c 0f       	add	r18, r28
    3e9a:	3d 1f       	adc	r19, r29
    3e9c:	f9 01       	movw	r30, r18
    3e9e:	91 81       	ldd	r25, Z+1	; 0x01
    3ea0:	91 34       	cpi	r25, 0x41	; 65
    3ea2:	10 f0       	brcs	.+4      	; 0x3ea8 <decode_hexadecimal_string_bytes+0x5a>
    3ea4:	97 53       	subi	r25, 0x37	; 55
    3ea6:	01 c0       	rjmp	.+2      	; 0x3eaa <decode_hexadecimal_string_bytes+0x5c>
    3ea8:	90 53       	subi	r25, 0x30	; 48
    3eaa:	95 0f       	add	r25, r21
    3eac:	f8 01       	movw	r30, r16
    3eae:	90 83       	st	Z, r25
    3eb0:	8f 5f       	subi	r24, 0xFF	; 255
    3eb2:	01 c0       	rjmp	.+2      	; 0x3eb6 <decode_hexadecimal_string_bytes+0x68>
    3eb4:	80 e0       	ldi	r24, 0x00	; 0
    3eb6:	28 2f       	mov	r18, r24
    3eb8:	22 0f       	add	r18, r18
    3eba:	48 2f       	mov	r20, r24
    3ebc:	50 e0       	ldi	r21, 0x00	; 0
    3ebe:	fe 01       	movw	r30, r28
    3ec0:	01 90       	ld	r0, Z+
    3ec2:	00 20       	and	r0, r0
    3ec4:	e9 f7       	brne	.-6      	; 0x3ec0 <decode_hexadecimal_string_bytes+0x72>
    3ec6:	31 97       	sbiw	r30, 0x01	; 1
    3ec8:	ec 1b       	sub	r30, r28
    3eca:	fd 0b       	sbc	r31, r29
    3ecc:	4e 17       	cp	r20, r30
    3ece:	5f 07       	cpc	r21, r31
    3ed0:	10 f4       	brcc	.+4      	; 0x3ed6 <decode_hexadecimal_string_bytes+0x88>
    3ed2:	86 13       	cpse	r24, r22
    3ed4:	ce cf       	rjmp	.-100    	; 0x3e72 <decode_hexadecimal_string_bytes+0x24>
    3ed6:	df 91       	pop	r29
    3ed8:	cf 91       	pop	r28
    3eda:	1f 91       	pop	r17
    3edc:	0f 91       	pop	r16
    3ede:	08 95       	ret

00003ee0 <serial_create>:
    3ee0:	2f 92       	push	r2
    3ee2:	3f 92       	push	r3
    3ee4:	4f 92       	push	r4
    3ee6:	5f 92       	push	r5
    3ee8:	6f 92       	push	r6
    3eea:	7f 92       	push	r7
    3eec:	8f 92       	push	r8
    3eee:	9f 92       	push	r9
    3ef0:	af 92       	push	r10
    3ef2:	cf 92       	push	r12
    3ef4:	ef 92       	push	r14
    3ef6:	ff 92       	push	r15
    3ef8:	0f 93       	push	r16
    3efa:	1f 93       	push	r17
    3efc:	cf 93       	push	r28
    3efe:	df 93       	push	r29
    3f00:	cd b7       	in	r28, 0x3d	; 61
    3f02:	de b7       	in	r29, 0x3e	; 62
    3f04:	f8 2e       	mov	r15, r24
    3f06:	2a 01       	movw	r4, r20
    3f08:	3b 01       	movw	r6, r22
    3f0a:	88 e0       	ldi	r24, 0x08	; 8
    3f0c:	90 e0       	ldi	r25, 0x00	; 0
    3f0e:	0e 94 d7 28 	call	0x51ae	; 0x51ae <malloc>
    3f12:	8c 01       	movw	r16, r24
    3f14:	8f 2d       	mov	r24, r15
    3f16:	90 e0       	ldi	r25, 0x00	; 0
    3f18:	fc 01       	movw	r30, r24
    3f1a:	ee 0f       	add	r30, r30
    3f1c:	ff 1f       	adc	r31, r31
    3f1e:	e9 5c       	subi	r30, 0xC9	; 201
    3f20:	f8 4e       	sbci	r31, 0xE8	; 232
    3f22:	11 83       	std	Z+1, r17	; 0x01
    3f24:	00 83       	st	Z, r16
    3f26:	01 15       	cp	r16, r1
    3f28:	11 05       	cpc	r17, r1
    3f2a:	09 f4       	brne	.+2      	; 0x3f2e <serial_create+0x4e>
    3f2c:	69 c0       	rjmp	.+210    	; 0x4000 <serial_create+0x120>
    3f2e:	88 0f       	add	r24, r24
    3f30:	99 1f       	adc	r25, r25
    3f32:	fc 01       	movw	r30, r24
    3f34:	e5 5f       	subi	r30, 0xF5	; 245
    3f36:	fd 4f       	sbci	r31, 0xFD	; 253
    3f38:	80 81       	ld	r24, Z
    3f3a:	91 81       	ldd	r25, Z+1	; 0x01
    3f3c:	d8 01       	movw	r26, r16
    3f3e:	8d 93       	st	X+, r24
    3f40:	9c 93       	st	X, r25
    3f42:	8c 2d       	mov	r24, r12
    3f44:	90 e0       	ldi	r25, 0x00	; 0
    3f46:	88 0f       	add	r24, r24
    3f48:	99 1f       	adc	r25, r25
    3f4a:	88 0f       	add	r24, r24
    3f4c:	99 1f       	adc	r25, r25
    3f4e:	0e 94 d7 28 	call	0x51ae	; 0x51ae <malloc>
    3f52:	1c 01       	movw	r2, r24
    3f54:	86 e0       	ldi	r24, 0x06	; 6
    3f56:	90 e0       	ldi	r25, 0x00	; 0
    3f58:	0e 94 d7 28 	call	0x51ae	; 0x51ae <malloc>
    3f5c:	7c 01       	movw	r14, r24
    3f5e:	4c 2d       	mov	r20, r12
    3f60:	b1 01       	movw	r22, r2
    3f62:	f0 d6       	rcall	.+3552   	; 0x4d44 <fifo_init>
    3f64:	f8 01       	movw	r30, r16
    3f66:	f5 82       	std	Z+5, r15	; 0x05
    3f68:	e4 82       	std	Z+4, r14	; 0x04
    3f6a:	8a 2d       	mov	r24, r10
    3f6c:	90 e0       	ldi	r25, 0x00	; 0
    3f6e:	88 0f       	add	r24, r24
    3f70:	99 1f       	adc	r25, r25
    3f72:	88 0f       	add	r24, r24
    3f74:	99 1f       	adc	r25, r25
    3f76:	0e 94 d7 28 	call	0x51ae	; 0x51ae <malloc>
    3f7a:	1c 01       	movw	r2, r24
    3f7c:	86 e0       	ldi	r24, 0x06	; 6
    3f7e:	90 e0       	ldi	r25, 0x00	; 0
    3f80:	0e 94 d7 28 	call	0x51ae	; 0x51ae <malloc>
    3f84:	7c 01       	movw	r14, r24
    3f86:	4a 2d       	mov	r20, r10
    3f88:	b1 01       	movw	r22, r2
    3f8a:	dc d6       	rcall	.+3512   	; 0x4d44 <fifo_init>
    3f8c:	d8 01       	movw	r26, r16
    3f8e:	13 96       	adiw	r26, 0x03	; 3
    3f90:	fc 92       	st	X, r15
    3f92:	ee 92       	st	-X, r14
    3f94:	12 97       	sbiw	r26, 0x02	; 2
    3f96:	17 96       	adiw	r26, 0x07	; 7
    3f98:	9c 92       	st	X, r9
    3f9a:	8e 92       	st	-X, r8
    3f9c:	16 97       	sbiw	r26, 0x06	; 6
    3f9e:	ff b6       	in	r15, 0x3f	; 63
    3fa0:	f8 94       	cli
    3fa2:	ed 91       	ld	r30, X+
    3fa4:	fc 91       	ld	r31, X
    3fa6:	11 97       	sbiw	r26, 0x01	; 1
    3fa8:	36 97       	sbiw	r30, 0x06	; 6
    3faa:	80 81       	ld	r24, Z
    3fac:	82 60       	ori	r24, 0x02	; 2
    3fae:	80 83       	st	Z, r24
    3fb0:	8d 90       	ld	r8, X+
    3fb2:	9c 90       	ld	r9, X
    3fb4:	c3 01       	movw	r24, r6
    3fb6:	b2 01       	movw	r22, r4
    3fb8:	df d7       	rcall	.+4030   	; 0x4f78 <__floatunsisf>
    3fba:	20 e0       	ldi	r18, 0x00	; 0
    3fbc:	30 e0       	ldi	r19, 0x00	; 0
    3fbe:	40 e0       	ldi	r20, 0x00	; 0
    3fc0:	51 e4       	ldi	r21, 0x41	; 65
    3fc2:	0e 94 4a 28 	call	0x5094	; 0x5094 <__mulsf3>
    3fc6:	9b 01       	movw	r18, r22
    3fc8:	ac 01       	movw	r20, r24
    3fca:	60 e0       	ldi	r22, 0x00	; 0
    3fcc:	74 e2       	ldi	r23, 0x24	; 36
    3fce:	84 e7       	ldi	r24, 0x74	; 116
    3fd0:	9b e4       	ldi	r25, 0x4B	; 75
    3fd2:	39 d7       	rcall	.+3698   	; 0x4e46 <__divsf3>
    3fd4:	20 e0       	ldi	r18, 0x00	; 0
    3fd6:	30 e0       	ldi	r19, 0x00	; 0
    3fd8:	40 e8       	ldi	r20, 0x80	; 128
    3fda:	5f e3       	ldi	r21, 0x3F	; 63
    3fdc:	cf d6       	rcall	.+3486   	; 0x4d7c <__subsf3>
    3fde:	a0 d7       	rcall	.+3904   	; 0x4f20 <__fixunssfsi>
    3fe0:	f4 01       	movw	r30, r8
    3fe2:	32 97       	sbiw	r30, 0x02	; 2
    3fe4:	60 83       	st	Z, r22
    3fe6:	d8 01       	movw	r26, r16
    3fe8:	ed 91       	ld	r30, X+
    3fea:	fc 91       	ld	r31, X
    3fec:	11 97       	sbiw	r26, 0x01	; 1
    3fee:	35 97       	sbiw	r30, 0x05	; 5
    3ff0:	88 e9       	ldi	r24, 0x98	; 152
    3ff2:	80 83       	st	Z, r24
    3ff4:	ed 91       	ld	r30, X+
    3ff6:	fc 91       	ld	r31, X
    3ff8:	34 97       	sbiw	r30, 0x04	; 4
    3ffa:	86 e0       	ldi	r24, 0x06	; 6
    3ffc:	80 83       	st	Z, r24
    3ffe:	ff be       	out	0x3f, r15	; 63
    4000:	c8 01       	movw	r24, r16
    4002:	df 91       	pop	r29
    4004:	cf 91       	pop	r28
    4006:	1f 91       	pop	r17
    4008:	0f 91       	pop	r16
    400a:	ff 90       	pop	r15
    400c:	ef 90       	pop	r14
    400e:	cf 90       	pop	r12
    4010:	af 90       	pop	r10
    4012:	9f 90       	pop	r9
    4014:	8f 90       	pop	r8
    4016:	7f 90       	pop	r7
    4018:	6f 90       	pop	r6
    401a:	5f 90       	pop	r5
    401c:	4f 90       	pop	r4
    401e:	3f 90       	pop	r3
    4020:	2f 90       	pop	r2
    4022:	08 95       	ret

00004024 <serial_sendByte>:
    4024:	cf 93       	push	r28
    4026:	df 93       	push	r29
    4028:	dc 01       	movw	r26, r24
    402a:	89 2b       	or	r24, r25
    402c:	01 f1       	breq	.+64     	; 0x406e <serial_sendByte+0x4a>
    402e:	12 96       	adiw	r26, 0x02	; 2
    4030:	ed 91       	ld	r30, X+
    4032:	fc 91       	ld	r31, X
    4034:	13 97       	sbiw	r26, 0x03	; 3
    4036:	93 81       	ldd	r25, Z+3	; 0x03
    4038:	82 81       	ldd	r24, Z+2	; 0x02
    403a:	25 81       	ldd	r18, Z+5	; 0x05
    403c:	98 1b       	sub	r25, r24
    403e:	92 23       	and	r25, r18
    4040:	84 81       	ldd	r24, Z+4	; 0x04
    4042:	98 17       	cp	r25, r24
    4044:	b1 f0       	breq	.+44     	; 0x4072 <serial_sendByte+0x4e>
    4046:	83 81       	ldd	r24, Z+3	; 0x03
    4048:	26 95       	lsr	r18
    404a:	28 23       	and	r18, r24
    404c:	c0 81       	ld	r28, Z
    404e:	d1 81       	ldd	r29, Z+1	; 0x01
    4050:	c2 0f       	add	r28, r18
    4052:	d1 1d       	adc	r29, r1
    4054:	68 83       	st	Y, r22
    4056:	8f 5f       	subi	r24, 0xFF	; 255
    4058:	95 81       	ldd	r25, Z+5	; 0x05
    405a:	89 23       	and	r24, r25
    405c:	83 83       	std	Z+3, r24	; 0x03
    405e:	ed 91       	ld	r30, X+
    4060:	fc 91       	ld	r31, X
    4062:	35 97       	sbiw	r30, 0x05	; 5
    4064:	80 81       	ld	r24, Z
    4066:	80 62       	ori	r24, 0x20	; 32
    4068:	80 83       	st	Z, r24
    406a:	80 e0       	ldi	r24, 0x00	; 0
    406c:	03 c0       	rjmp	.+6      	; 0x4074 <serial_sendByte+0x50>
    406e:	81 e0       	ldi	r24, 0x01	; 1
    4070:	01 c0       	rjmp	.+2      	; 0x4074 <serial_sendByte+0x50>
    4072:	82 e0       	ldi	r24, 0x02	; 2
    4074:	df 91       	pop	r29
    4076:	cf 91       	pop	r28
    4078:	08 95       	ret

0000407a <serial_sendBytes>:
    407a:	ef 92       	push	r14
    407c:	ff 92       	push	r15
    407e:	0f 93       	push	r16
    4080:	1f 93       	push	r17
    4082:	cf 93       	push	r28
    4084:	df 93       	push	r29
    4086:	7c 01       	movw	r14, r24
    4088:	00 97       	sbiw	r24, 0x00	; 0
    408a:	09 f4       	brne	.+2      	; 0x408e <serial_sendBytes+0x14>
    408c:	41 c0       	rjmp	.+130    	; 0x4110 <serial_sendBytes+0x96>
    408e:	dc 01       	movw	r26, r24
    4090:	12 96       	adiw	r26, 0x02	; 2
    4092:	ed 91       	ld	r30, X+
    4094:	fc 91       	ld	r31, X
    4096:	13 97       	sbiw	r26, 0x03	; 3
    4098:	93 81       	ldd	r25, Z+3	; 0x03
    409a:	82 81       	ldd	r24, Z+2	; 0x02
    409c:	98 1b       	sub	r25, r24
    409e:	85 81       	ldd	r24, Z+5	; 0x05
    40a0:	98 23       	and	r25, r24
    40a2:	84 81       	ldd	r24, Z+4	; 0x04
    40a4:	89 1b       	sub	r24, r25
    40a6:	86 17       	cp	r24, r22
    40a8:	a8 f1       	brcs	.+106    	; 0x4114 <serial_sendBytes+0x9a>
    40aa:	66 23       	and	r22, r22
    40ac:	41 f1       	breq	.+80     	; 0x40fe <serial_sendBytes+0x84>
    40ae:	84 2f       	mov	r24, r20
    40b0:	95 2f       	mov	r25, r21
    40b2:	dc 01       	movw	r26, r24
    40b4:	61 50       	subi	r22, 0x01	; 1
    40b6:	46 2f       	mov	r20, r22
    40b8:	50 e0       	ldi	r21, 0x00	; 0
    40ba:	4f 5f       	subi	r20, 0xFF	; 255
    40bc:	5f 4f       	sbci	r21, 0xFF	; 255
    40be:	48 0f       	add	r20, r24
    40c0:	59 1f       	adc	r21, r25
    40c2:	e7 01       	movw	r28, r14
    40c4:	ea 81       	ldd	r30, Y+2	; 0x02
    40c6:	fb 81       	ldd	r31, Y+3	; 0x03
    40c8:	93 81       	ldd	r25, Z+3	; 0x03
    40ca:	82 81       	ldd	r24, Z+2	; 0x02
    40cc:	25 81       	ldd	r18, Z+5	; 0x05
    40ce:	98 1b       	sub	r25, r24
    40d0:	92 23       	and	r25, r18
    40d2:	84 81       	ldd	r24, Z+4	; 0x04
    40d4:	98 17       	cp	r25, r24
    40d6:	79 f0       	breq	.+30     	; 0x40f6 <serial_sendBytes+0x7c>
    40d8:	8c 91       	ld	r24, X
    40da:	93 81       	ldd	r25, Z+3	; 0x03
    40dc:	26 95       	lsr	r18
    40de:	29 23       	and	r18, r25
    40e0:	60 81       	ld	r22, Z
    40e2:	71 81       	ldd	r23, Z+1	; 0x01
    40e4:	8b 01       	movw	r16, r22
    40e6:	02 0f       	add	r16, r18
    40e8:	11 1d       	adc	r17, r1
    40ea:	e8 01       	movw	r28, r16
    40ec:	88 83       	st	Y, r24
    40ee:	9f 5f       	subi	r25, 0xFF	; 255
    40f0:	85 81       	ldd	r24, Z+5	; 0x05
    40f2:	98 23       	and	r25, r24
    40f4:	93 83       	std	Z+3, r25	; 0x03
    40f6:	11 96       	adiw	r26, 0x01	; 1
    40f8:	a4 17       	cp	r26, r20
    40fa:	b5 07       	cpc	r27, r21
    40fc:	11 f7       	brne	.-60     	; 0x40c2 <serial_sendBytes+0x48>
    40fe:	d7 01       	movw	r26, r14
    4100:	ed 91       	ld	r30, X+
    4102:	fc 91       	ld	r31, X
    4104:	35 97       	sbiw	r30, 0x05	; 5
    4106:	80 81       	ld	r24, Z
    4108:	80 62       	ori	r24, 0x20	; 32
    410a:	80 83       	st	Z, r24
    410c:	80 e0       	ldi	r24, 0x00	; 0
    410e:	03 c0       	rjmp	.+6      	; 0x4116 <serial_sendBytes+0x9c>
    4110:	81 e0       	ldi	r24, 0x01	; 1
    4112:	01 c0       	rjmp	.+2      	; 0x4116 <serial_sendBytes+0x9c>
    4114:	82 e0       	ldi	r24, 0x02	; 2
    4116:	df 91       	pop	r29
    4118:	cf 91       	pop	r28
    411a:	1f 91       	pop	r17
    411c:	0f 91       	pop	r16
    411e:	ff 90       	pop	r15
    4120:	ef 90       	pop	r14
    4122:	08 95       	ret

00004124 <serial_getByte>:
    4124:	00 97       	sbiw	r24, 0x00	; 0
    4126:	d1 f0       	breq	.+52     	; 0x415c <serial_getByte+0x38>
    4128:	dc 01       	movw	r26, r24
    412a:	14 96       	adiw	r26, 0x04	; 4
    412c:	ed 91       	ld	r30, X+
    412e:	fc 91       	ld	r31, X
    4130:	15 97       	sbiw	r26, 0x05	; 5
    4132:	93 81       	ldd	r25, Z+3	; 0x03
    4134:	82 81       	ldd	r24, Z+2	; 0x02
    4136:	98 17       	cp	r25, r24
    4138:	99 f0       	breq	.+38     	; 0x4160 <serial_getByte+0x3c>
    413a:	92 81       	ldd	r25, Z+2	; 0x02
    413c:	85 81       	ldd	r24, Z+5	; 0x05
    413e:	86 95       	lsr	r24
    4140:	89 23       	and	r24, r25
    4142:	a0 81       	ld	r26, Z
    4144:	b1 81       	ldd	r27, Z+1	; 0x01
    4146:	a8 0f       	add	r26, r24
    4148:	b1 1d       	adc	r27, r1
    414a:	8c 91       	ld	r24, X
    414c:	db 01       	movw	r26, r22
    414e:	8c 93       	st	X, r24
    4150:	9f 5f       	subi	r25, 0xFF	; 255
    4152:	85 81       	ldd	r24, Z+5	; 0x05
    4154:	98 23       	and	r25, r24
    4156:	92 83       	std	Z+2, r25	; 0x02
    4158:	80 e0       	ldi	r24, 0x00	; 0
    415a:	08 95       	ret
    415c:	81 e0       	ldi	r24, 0x01	; 1
    415e:	08 95       	ret
    4160:	83 e0       	ldi	r24, 0x03	; 3
    4162:	08 95       	ret

00004164 <__vector_25>:
    4164:	1f 92       	push	r1
    4166:	0f 92       	push	r0
    4168:	0f b6       	in	r0, 0x3f	; 63
    416a:	0f 92       	push	r0
    416c:	11 24       	eor	r1, r1
    416e:	0b b6       	in	r0, 0x3b	; 59
    4170:	0f 92       	push	r0
    4172:	2f 93       	push	r18
    4174:	3f 93       	push	r19
    4176:	4f 93       	push	r20
    4178:	5f 93       	push	r21
    417a:	6f 93       	push	r22
    417c:	7f 93       	push	r23
    417e:	8f 93       	push	r24
    4180:	9f 93       	push	r25
    4182:	af 93       	push	r26
    4184:	bf 93       	push	r27
    4186:	cf 93       	push	r28
    4188:	df 93       	push	r29
    418a:	ef 93       	push	r30
    418c:	ff 93       	push	r31
    418e:	a0 91 37 17 	lds	r26, 0x1737	; 0x801737 <_ser_handle>
    4192:	b0 91 38 17 	lds	r27, 0x1738	; 0x801738 <_ser_handle+0x1>
    4196:	10 97       	sbiw	r26, 0x00	; 0
    4198:	11 f1       	breq	.+68     	; 0x41de <__vector_25+0x7a>
    419a:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    419e:	14 96       	adiw	r26, 0x04	; 4
    41a0:	ed 91       	ld	r30, X+
    41a2:	fc 91       	ld	r31, X
    41a4:	15 97       	sbiw	r26, 0x05	; 5
    41a6:	93 81       	ldd	r25, Z+3	; 0x03
    41a8:	82 81       	ldd	r24, Z+2	; 0x02
    41aa:	25 81       	ldd	r18, Z+5	; 0x05
    41ac:	98 1b       	sub	r25, r24
    41ae:	92 23       	and	r25, r18
    41b0:	84 81       	ldd	r24, Z+4	; 0x04
    41b2:	98 17       	cp	r25, r24
    41b4:	61 f0       	breq	.+24     	; 0x41ce <__vector_25+0x6a>
    41b6:	83 81       	ldd	r24, Z+3	; 0x03
    41b8:	26 95       	lsr	r18
    41ba:	28 23       	and	r18, r24
    41bc:	c0 81       	ld	r28, Z
    41be:	d1 81       	ldd	r29, Z+1	; 0x01
    41c0:	c2 0f       	add	r28, r18
    41c2:	d1 1d       	adc	r29, r1
    41c4:	68 83       	st	Y, r22
    41c6:	8f 5f       	subi	r24, 0xFF	; 255
    41c8:	95 81       	ldd	r25, Z+5	; 0x05
    41ca:	89 23       	and	r24, r25
    41cc:	83 83       	std	Z+3, r24	; 0x03
    41ce:	16 96       	adiw	r26, 0x06	; 6
    41d0:	ed 91       	ld	r30, X+
    41d2:	fc 91       	ld	r31, X
    41d4:	17 97       	sbiw	r26, 0x07	; 7
    41d6:	30 97       	sbiw	r30, 0x00	; 0
    41d8:	11 f0       	breq	.+4      	; 0x41de <__vector_25+0x7a>
    41da:	cd 01       	movw	r24, r26
    41dc:	19 95       	eicall
    41de:	ff 91       	pop	r31
    41e0:	ef 91       	pop	r30
    41e2:	df 91       	pop	r29
    41e4:	cf 91       	pop	r28
    41e6:	bf 91       	pop	r27
    41e8:	af 91       	pop	r26
    41ea:	9f 91       	pop	r25
    41ec:	8f 91       	pop	r24
    41ee:	7f 91       	pop	r23
    41f0:	6f 91       	pop	r22
    41f2:	5f 91       	pop	r21
    41f4:	4f 91       	pop	r20
    41f6:	3f 91       	pop	r19
    41f8:	2f 91       	pop	r18
    41fa:	0f 90       	pop	r0
    41fc:	0b be       	out	0x3b, r0	; 59
    41fe:	0f 90       	pop	r0
    4200:	0f be       	out	0x3f, r0	; 63
    4202:	0f 90       	pop	r0
    4204:	1f 90       	pop	r1
    4206:	18 95       	reti

00004208 <__vector_26>:
    4208:	1f 92       	push	r1
    420a:	0f 92       	push	r0
    420c:	0f b6       	in	r0, 0x3f	; 63
    420e:	0f 92       	push	r0
    4210:	11 24       	eor	r1, r1
    4212:	0b b6       	in	r0, 0x3b	; 59
    4214:	0f 92       	push	r0
    4216:	2f 93       	push	r18
    4218:	8f 93       	push	r24
    421a:	9f 93       	push	r25
    421c:	af 93       	push	r26
    421e:	bf 93       	push	r27
    4220:	ef 93       	push	r30
    4222:	ff 93       	push	r31
    4224:	e0 91 37 17 	lds	r30, 0x1737	; 0x801737 <_ser_handle>
    4228:	f0 91 38 17 	lds	r31, 0x1738	; 0x801738 <_ser_handle+0x1>
    422c:	30 97       	sbiw	r30, 0x00	; 0
    422e:	b9 f0       	breq	.+46     	; 0x425e <__vector_26+0x56>
    4230:	02 80       	ldd	r0, Z+2	; 0x02
    4232:	f3 81       	ldd	r31, Z+3	; 0x03
    4234:	e0 2d       	mov	r30, r0
    4236:	93 81       	ldd	r25, Z+3	; 0x03
    4238:	82 81       	ldd	r24, Z+2	; 0x02
    423a:	98 17       	cp	r25, r24
    423c:	b1 f0       	breq	.+44     	; 0x426a <__vector_26+0x62>
    423e:	92 81       	ldd	r25, Z+2	; 0x02
    4240:	85 81       	ldd	r24, Z+5	; 0x05
    4242:	28 2f       	mov	r18, r24
    4244:	26 95       	lsr	r18
    4246:	29 23       	and	r18, r25
    4248:	a0 81       	ld	r26, Z
    424a:	b1 81       	ldd	r27, Z+1	; 0x01
    424c:	a2 0f       	add	r26, r18
    424e:	b1 1d       	adc	r27, r1
    4250:	2c 91       	ld	r18, X
    4252:	9f 5f       	subi	r25, 0xFF	; 255
    4254:	89 23       	and	r24, r25
    4256:	82 83       	std	Z+2, r24	; 0x02
    4258:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    425c:	0b c0       	rjmp	.+22     	; 0x4274 <__vector_26+0x6c>
    425e:	e1 ec       	ldi	r30, 0xC1	; 193
    4260:	f0 e0       	ldi	r31, 0x00	; 0
    4262:	80 81       	ld	r24, Z
    4264:	8f 7d       	andi	r24, 0xDF	; 223
    4266:	80 83       	st	Z, r24
    4268:	05 c0       	rjmp	.+10     	; 0x4274 <__vector_26+0x6c>
    426a:	e1 ec       	ldi	r30, 0xC1	; 193
    426c:	f0 e0       	ldi	r31, 0x00	; 0
    426e:	80 81       	ld	r24, Z
    4270:	8f 7d       	andi	r24, 0xDF	; 223
    4272:	80 83       	st	Z, r24
    4274:	ff 91       	pop	r31
    4276:	ef 91       	pop	r30
    4278:	bf 91       	pop	r27
    427a:	af 91       	pop	r26
    427c:	9f 91       	pop	r25
    427e:	8f 91       	pop	r24
    4280:	2f 91       	pop	r18
    4282:	0f 90       	pop	r0
    4284:	0b be       	out	0x3b, r0	; 59
    4286:	0f 90       	pop	r0
    4288:	0f be       	out	0x3f, r0	; 63
    428a:	0f 90       	pop	r0
    428c:	1f 90       	pop	r1
    428e:	18 95       	reti

00004290 <__vector_36>:
    4290:	1f 92       	push	r1
    4292:	0f 92       	push	r0
    4294:	0f b6       	in	r0, 0x3f	; 63
    4296:	0f 92       	push	r0
    4298:	11 24       	eor	r1, r1
    429a:	0b b6       	in	r0, 0x3b	; 59
    429c:	0f 92       	push	r0
    429e:	2f 93       	push	r18
    42a0:	3f 93       	push	r19
    42a2:	4f 93       	push	r20
    42a4:	5f 93       	push	r21
    42a6:	6f 93       	push	r22
    42a8:	7f 93       	push	r23
    42aa:	8f 93       	push	r24
    42ac:	9f 93       	push	r25
    42ae:	af 93       	push	r26
    42b0:	bf 93       	push	r27
    42b2:	cf 93       	push	r28
    42b4:	df 93       	push	r29
    42b6:	ef 93       	push	r30
    42b8:	ff 93       	push	r31
    42ba:	a0 91 39 17 	lds	r26, 0x1739	; 0x801739 <_ser_handle+0x2>
    42be:	b0 91 3a 17 	lds	r27, 0x173A	; 0x80173a <_ser_handle+0x3>
    42c2:	10 97       	sbiw	r26, 0x00	; 0
    42c4:	11 f1       	breq	.+68     	; 0x430a <__vector_36+0x7a>
    42c6:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    42ca:	14 96       	adiw	r26, 0x04	; 4
    42cc:	ed 91       	ld	r30, X+
    42ce:	fc 91       	ld	r31, X
    42d0:	15 97       	sbiw	r26, 0x05	; 5
    42d2:	93 81       	ldd	r25, Z+3	; 0x03
    42d4:	82 81       	ldd	r24, Z+2	; 0x02
    42d6:	25 81       	ldd	r18, Z+5	; 0x05
    42d8:	98 1b       	sub	r25, r24
    42da:	92 23       	and	r25, r18
    42dc:	84 81       	ldd	r24, Z+4	; 0x04
    42de:	98 17       	cp	r25, r24
    42e0:	61 f0       	breq	.+24     	; 0x42fa <__vector_36+0x6a>
    42e2:	83 81       	ldd	r24, Z+3	; 0x03
    42e4:	26 95       	lsr	r18
    42e6:	28 23       	and	r18, r24
    42e8:	c0 81       	ld	r28, Z
    42ea:	d1 81       	ldd	r29, Z+1	; 0x01
    42ec:	c2 0f       	add	r28, r18
    42ee:	d1 1d       	adc	r29, r1
    42f0:	68 83       	st	Y, r22
    42f2:	8f 5f       	subi	r24, 0xFF	; 255
    42f4:	95 81       	ldd	r25, Z+5	; 0x05
    42f6:	89 23       	and	r24, r25
    42f8:	83 83       	std	Z+3, r24	; 0x03
    42fa:	16 96       	adiw	r26, 0x06	; 6
    42fc:	ed 91       	ld	r30, X+
    42fe:	fc 91       	ld	r31, X
    4300:	17 97       	sbiw	r26, 0x07	; 7
    4302:	30 97       	sbiw	r30, 0x00	; 0
    4304:	11 f0       	breq	.+4      	; 0x430a <__vector_36+0x7a>
    4306:	cd 01       	movw	r24, r26
    4308:	19 95       	eicall
    430a:	ff 91       	pop	r31
    430c:	ef 91       	pop	r30
    430e:	df 91       	pop	r29
    4310:	cf 91       	pop	r28
    4312:	bf 91       	pop	r27
    4314:	af 91       	pop	r26
    4316:	9f 91       	pop	r25
    4318:	8f 91       	pop	r24
    431a:	7f 91       	pop	r23
    431c:	6f 91       	pop	r22
    431e:	5f 91       	pop	r21
    4320:	4f 91       	pop	r20
    4322:	3f 91       	pop	r19
    4324:	2f 91       	pop	r18
    4326:	0f 90       	pop	r0
    4328:	0b be       	out	0x3b, r0	; 59
    432a:	0f 90       	pop	r0
    432c:	0f be       	out	0x3f, r0	; 63
    432e:	0f 90       	pop	r0
    4330:	1f 90       	pop	r1
    4332:	18 95       	reti

00004334 <__vector_37>:
    4334:	1f 92       	push	r1
    4336:	0f 92       	push	r0
    4338:	0f b6       	in	r0, 0x3f	; 63
    433a:	0f 92       	push	r0
    433c:	11 24       	eor	r1, r1
    433e:	0b b6       	in	r0, 0x3b	; 59
    4340:	0f 92       	push	r0
    4342:	2f 93       	push	r18
    4344:	8f 93       	push	r24
    4346:	9f 93       	push	r25
    4348:	af 93       	push	r26
    434a:	bf 93       	push	r27
    434c:	ef 93       	push	r30
    434e:	ff 93       	push	r31
    4350:	e0 91 39 17 	lds	r30, 0x1739	; 0x801739 <_ser_handle+0x2>
    4354:	f0 91 3a 17 	lds	r31, 0x173A	; 0x80173a <_ser_handle+0x3>
    4358:	30 97       	sbiw	r30, 0x00	; 0
    435a:	b9 f0       	breq	.+46     	; 0x438a <__vector_37+0x56>
    435c:	02 80       	ldd	r0, Z+2	; 0x02
    435e:	f3 81       	ldd	r31, Z+3	; 0x03
    4360:	e0 2d       	mov	r30, r0
    4362:	93 81       	ldd	r25, Z+3	; 0x03
    4364:	82 81       	ldd	r24, Z+2	; 0x02
    4366:	98 17       	cp	r25, r24
    4368:	b1 f0       	breq	.+44     	; 0x4396 <__vector_37+0x62>
    436a:	92 81       	ldd	r25, Z+2	; 0x02
    436c:	85 81       	ldd	r24, Z+5	; 0x05
    436e:	28 2f       	mov	r18, r24
    4370:	26 95       	lsr	r18
    4372:	29 23       	and	r18, r25
    4374:	a0 81       	ld	r26, Z
    4376:	b1 81       	ldd	r27, Z+1	; 0x01
    4378:	a2 0f       	add	r26, r18
    437a:	b1 1d       	adc	r27, r1
    437c:	2c 91       	ld	r18, X
    437e:	9f 5f       	subi	r25, 0xFF	; 255
    4380:	89 23       	and	r24, r25
    4382:	82 83       	std	Z+2, r24	; 0x02
    4384:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    4388:	0b c0       	rjmp	.+22     	; 0x43a0 <__vector_37+0x6c>
    438a:	e9 ec       	ldi	r30, 0xC9	; 201
    438c:	f0 e0       	ldi	r31, 0x00	; 0
    438e:	80 81       	ld	r24, Z
    4390:	8f 7d       	andi	r24, 0xDF	; 223
    4392:	80 83       	st	Z, r24
    4394:	05 c0       	rjmp	.+10     	; 0x43a0 <__vector_37+0x6c>
    4396:	e9 ec       	ldi	r30, 0xC9	; 201
    4398:	f0 e0       	ldi	r31, 0x00	; 0
    439a:	80 81       	ld	r24, Z
    439c:	8f 7d       	andi	r24, 0xDF	; 223
    439e:	80 83       	st	Z, r24
    43a0:	ff 91       	pop	r31
    43a2:	ef 91       	pop	r30
    43a4:	bf 91       	pop	r27
    43a6:	af 91       	pop	r26
    43a8:	9f 91       	pop	r25
    43aa:	8f 91       	pop	r24
    43ac:	2f 91       	pop	r18
    43ae:	0f 90       	pop	r0
    43b0:	0b be       	out	0x3b, r0	; 59
    43b2:	0f 90       	pop	r0
    43b4:	0f be       	out	0x3f, r0	; 63
    43b6:	0f 90       	pop	r0
    43b8:	1f 90       	pop	r1
    43ba:	18 95       	reti

000043bc <__vector_51>:
    43bc:	1f 92       	push	r1
    43be:	0f 92       	push	r0
    43c0:	0f b6       	in	r0, 0x3f	; 63
    43c2:	0f 92       	push	r0
    43c4:	11 24       	eor	r1, r1
    43c6:	0b b6       	in	r0, 0x3b	; 59
    43c8:	0f 92       	push	r0
    43ca:	2f 93       	push	r18
    43cc:	3f 93       	push	r19
    43ce:	4f 93       	push	r20
    43d0:	5f 93       	push	r21
    43d2:	6f 93       	push	r22
    43d4:	7f 93       	push	r23
    43d6:	8f 93       	push	r24
    43d8:	9f 93       	push	r25
    43da:	af 93       	push	r26
    43dc:	bf 93       	push	r27
    43de:	cf 93       	push	r28
    43e0:	df 93       	push	r29
    43e2:	ef 93       	push	r30
    43e4:	ff 93       	push	r31
    43e6:	a0 91 3b 17 	lds	r26, 0x173B	; 0x80173b <_ser_handle+0x4>
    43ea:	b0 91 3c 17 	lds	r27, 0x173C	; 0x80173c <_ser_handle+0x5>
    43ee:	10 97       	sbiw	r26, 0x00	; 0
    43f0:	11 f1       	breq	.+68     	; 0x4436 <__vector_51+0x7a>
    43f2:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    43f6:	14 96       	adiw	r26, 0x04	; 4
    43f8:	ed 91       	ld	r30, X+
    43fa:	fc 91       	ld	r31, X
    43fc:	15 97       	sbiw	r26, 0x05	; 5
    43fe:	93 81       	ldd	r25, Z+3	; 0x03
    4400:	82 81       	ldd	r24, Z+2	; 0x02
    4402:	25 81       	ldd	r18, Z+5	; 0x05
    4404:	98 1b       	sub	r25, r24
    4406:	92 23       	and	r25, r18
    4408:	84 81       	ldd	r24, Z+4	; 0x04
    440a:	98 17       	cp	r25, r24
    440c:	61 f0       	breq	.+24     	; 0x4426 <__vector_51+0x6a>
    440e:	83 81       	ldd	r24, Z+3	; 0x03
    4410:	26 95       	lsr	r18
    4412:	28 23       	and	r18, r24
    4414:	c0 81       	ld	r28, Z
    4416:	d1 81       	ldd	r29, Z+1	; 0x01
    4418:	c2 0f       	add	r28, r18
    441a:	d1 1d       	adc	r29, r1
    441c:	68 83       	st	Y, r22
    441e:	8f 5f       	subi	r24, 0xFF	; 255
    4420:	95 81       	ldd	r25, Z+5	; 0x05
    4422:	89 23       	and	r24, r25
    4424:	83 83       	std	Z+3, r24	; 0x03
    4426:	16 96       	adiw	r26, 0x06	; 6
    4428:	ed 91       	ld	r30, X+
    442a:	fc 91       	ld	r31, X
    442c:	17 97       	sbiw	r26, 0x07	; 7
    442e:	30 97       	sbiw	r30, 0x00	; 0
    4430:	11 f0       	breq	.+4      	; 0x4436 <__vector_51+0x7a>
    4432:	cd 01       	movw	r24, r26
    4434:	19 95       	eicall
    4436:	ff 91       	pop	r31
    4438:	ef 91       	pop	r30
    443a:	df 91       	pop	r29
    443c:	cf 91       	pop	r28
    443e:	bf 91       	pop	r27
    4440:	af 91       	pop	r26
    4442:	9f 91       	pop	r25
    4444:	8f 91       	pop	r24
    4446:	7f 91       	pop	r23
    4448:	6f 91       	pop	r22
    444a:	5f 91       	pop	r21
    444c:	4f 91       	pop	r20
    444e:	3f 91       	pop	r19
    4450:	2f 91       	pop	r18
    4452:	0f 90       	pop	r0
    4454:	0b be       	out	0x3b, r0	; 59
    4456:	0f 90       	pop	r0
    4458:	0f be       	out	0x3f, r0	; 63
    445a:	0f 90       	pop	r0
    445c:	1f 90       	pop	r1
    445e:	18 95       	reti

00004460 <__vector_52>:
    4460:	1f 92       	push	r1
    4462:	0f 92       	push	r0
    4464:	0f b6       	in	r0, 0x3f	; 63
    4466:	0f 92       	push	r0
    4468:	11 24       	eor	r1, r1
    446a:	0b b6       	in	r0, 0x3b	; 59
    446c:	0f 92       	push	r0
    446e:	2f 93       	push	r18
    4470:	8f 93       	push	r24
    4472:	9f 93       	push	r25
    4474:	af 93       	push	r26
    4476:	bf 93       	push	r27
    4478:	ef 93       	push	r30
    447a:	ff 93       	push	r31
    447c:	e0 91 3b 17 	lds	r30, 0x173B	; 0x80173b <_ser_handle+0x4>
    4480:	f0 91 3c 17 	lds	r31, 0x173C	; 0x80173c <_ser_handle+0x5>
    4484:	30 97       	sbiw	r30, 0x00	; 0
    4486:	b9 f0       	breq	.+46     	; 0x44b6 <__vector_52+0x56>
    4488:	02 80       	ldd	r0, Z+2	; 0x02
    448a:	f3 81       	ldd	r31, Z+3	; 0x03
    448c:	e0 2d       	mov	r30, r0
    448e:	93 81       	ldd	r25, Z+3	; 0x03
    4490:	82 81       	ldd	r24, Z+2	; 0x02
    4492:	98 17       	cp	r25, r24
    4494:	b1 f0       	breq	.+44     	; 0x44c2 <__vector_52+0x62>
    4496:	92 81       	ldd	r25, Z+2	; 0x02
    4498:	85 81       	ldd	r24, Z+5	; 0x05
    449a:	28 2f       	mov	r18, r24
    449c:	26 95       	lsr	r18
    449e:	29 23       	and	r18, r25
    44a0:	a0 81       	ld	r26, Z
    44a2:	b1 81       	ldd	r27, Z+1	; 0x01
    44a4:	a2 0f       	add	r26, r18
    44a6:	b1 1d       	adc	r27, r1
    44a8:	2c 91       	ld	r18, X
    44aa:	9f 5f       	subi	r25, 0xFF	; 255
    44ac:	89 23       	and	r24, r25
    44ae:	82 83       	std	Z+2, r24	; 0x02
    44b0:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    44b4:	0b c0       	rjmp	.+22     	; 0x44cc <__vector_52+0x6c>
    44b6:	e1 ed       	ldi	r30, 0xD1	; 209
    44b8:	f0 e0       	ldi	r31, 0x00	; 0
    44ba:	80 81       	ld	r24, Z
    44bc:	8f 7d       	andi	r24, 0xDF	; 223
    44be:	80 83       	st	Z, r24
    44c0:	05 c0       	rjmp	.+10     	; 0x44cc <__vector_52+0x6c>
    44c2:	e1 ed       	ldi	r30, 0xD1	; 209
    44c4:	f0 e0       	ldi	r31, 0x00	; 0
    44c6:	80 81       	ld	r24, Z
    44c8:	8f 7d       	andi	r24, 0xDF	; 223
    44ca:	80 83       	st	Z, r24
    44cc:	ff 91       	pop	r31
    44ce:	ef 91       	pop	r30
    44d0:	bf 91       	pop	r27
    44d2:	af 91       	pop	r26
    44d4:	9f 91       	pop	r25
    44d6:	8f 91       	pop	r24
    44d8:	2f 91       	pop	r18
    44da:	0f 90       	pop	r0
    44dc:	0b be       	out	0x3b, r0	; 59
    44de:	0f 90       	pop	r0
    44e0:	0f be       	out	0x3f, r0	; 63
    44e2:	0f 90       	pop	r0
    44e4:	1f 90       	pop	r1
    44e6:	18 95       	reti

000044e8 <__vector_54>:
    44e8:	1f 92       	push	r1
    44ea:	0f 92       	push	r0
    44ec:	0f b6       	in	r0, 0x3f	; 63
    44ee:	0f 92       	push	r0
    44f0:	11 24       	eor	r1, r1
    44f2:	0b b6       	in	r0, 0x3b	; 59
    44f4:	0f 92       	push	r0
    44f6:	2f 93       	push	r18
    44f8:	3f 93       	push	r19
    44fa:	4f 93       	push	r20
    44fc:	5f 93       	push	r21
    44fe:	6f 93       	push	r22
    4500:	7f 93       	push	r23
    4502:	8f 93       	push	r24
    4504:	9f 93       	push	r25
    4506:	af 93       	push	r26
    4508:	bf 93       	push	r27
    450a:	cf 93       	push	r28
    450c:	df 93       	push	r29
    450e:	ef 93       	push	r30
    4510:	ff 93       	push	r31
    4512:	a0 91 3d 17 	lds	r26, 0x173D	; 0x80173d <_ser_handle+0x6>
    4516:	b0 91 3e 17 	lds	r27, 0x173E	; 0x80173e <_ser_handle+0x7>
    451a:	10 97       	sbiw	r26, 0x00	; 0
    451c:	11 f1       	breq	.+68     	; 0x4562 <__vector_54+0x7a>
    451e:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    4522:	14 96       	adiw	r26, 0x04	; 4
    4524:	ed 91       	ld	r30, X+
    4526:	fc 91       	ld	r31, X
    4528:	15 97       	sbiw	r26, 0x05	; 5
    452a:	93 81       	ldd	r25, Z+3	; 0x03
    452c:	82 81       	ldd	r24, Z+2	; 0x02
    452e:	25 81       	ldd	r18, Z+5	; 0x05
    4530:	98 1b       	sub	r25, r24
    4532:	92 23       	and	r25, r18
    4534:	84 81       	ldd	r24, Z+4	; 0x04
    4536:	98 17       	cp	r25, r24
    4538:	61 f0       	breq	.+24     	; 0x4552 <__vector_54+0x6a>
    453a:	83 81       	ldd	r24, Z+3	; 0x03
    453c:	26 95       	lsr	r18
    453e:	28 23       	and	r18, r24
    4540:	c0 81       	ld	r28, Z
    4542:	d1 81       	ldd	r29, Z+1	; 0x01
    4544:	c2 0f       	add	r28, r18
    4546:	d1 1d       	adc	r29, r1
    4548:	68 83       	st	Y, r22
    454a:	8f 5f       	subi	r24, 0xFF	; 255
    454c:	95 81       	ldd	r25, Z+5	; 0x05
    454e:	89 23       	and	r24, r25
    4550:	83 83       	std	Z+3, r24	; 0x03
    4552:	16 96       	adiw	r26, 0x06	; 6
    4554:	ed 91       	ld	r30, X+
    4556:	fc 91       	ld	r31, X
    4558:	17 97       	sbiw	r26, 0x07	; 7
    455a:	30 97       	sbiw	r30, 0x00	; 0
    455c:	11 f0       	breq	.+4      	; 0x4562 <__vector_54+0x7a>
    455e:	cd 01       	movw	r24, r26
    4560:	19 95       	eicall
    4562:	ff 91       	pop	r31
    4564:	ef 91       	pop	r30
    4566:	df 91       	pop	r29
    4568:	cf 91       	pop	r28
    456a:	bf 91       	pop	r27
    456c:	af 91       	pop	r26
    456e:	9f 91       	pop	r25
    4570:	8f 91       	pop	r24
    4572:	7f 91       	pop	r23
    4574:	6f 91       	pop	r22
    4576:	5f 91       	pop	r21
    4578:	4f 91       	pop	r20
    457a:	3f 91       	pop	r19
    457c:	2f 91       	pop	r18
    457e:	0f 90       	pop	r0
    4580:	0b be       	out	0x3b, r0	; 59
    4582:	0f 90       	pop	r0
    4584:	0f be       	out	0x3f, r0	; 63
    4586:	0f 90       	pop	r0
    4588:	1f 90       	pop	r1
    458a:	18 95       	reti

0000458c <__vector_55>:
    458c:	1f 92       	push	r1
    458e:	0f 92       	push	r0
    4590:	0f b6       	in	r0, 0x3f	; 63
    4592:	0f 92       	push	r0
    4594:	11 24       	eor	r1, r1
    4596:	0b b6       	in	r0, 0x3b	; 59
    4598:	0f 92       	push	r0
    459a:	2f 93       	push	r18
    459c:	8f 93       	push	r24
    459e:	9f 93       	push	r25
    45a0:	af 93       	push	r26
    45a2:	bf 93       	push	r27
    45a4:	ef 93       	push	r30
    45a6:	ff 93       	push	r31
    45a8:	e0 91 3d 17 	lds	r30, 0x173D	; 0x80173d <_ser_handle+0x6>
    45ac:	f0 91 3e 17 	lds	r31, 0x173E	; 0x80173e <_ser_handle+0x7>
    45b0:	30 97       	sbiw	r30, 0x00	; 0
    45b2:	b9 f0       	breq	.+46     	; 0x45e2 <__vector_55+0x56>
    45b4:	02 80       	ldd	r0, Z+2	; 0x02
    45b6:	f3 81       	ldd	r31, Z+3	; 0x03
    45b8:	e0 2d       	mov	r30, r0
    45ba:	93 81       	ldd	r25, Z+3	; 0x03
    45bc:	82 81       	ldd	r24, Z+2	; 0x02
    45be:	98 17       	cp	r25, r24
    45c0:	b1 f0       	breq	.+44     	; 0x45ee <__vector_55+0x62>
    45c2:	92 81       	ldd	r25, Z+2	; 0x02
    45c4:	85 81       	ldd	r24, Z+5	; 0x05
    45c6:	28 2f       	mov	r18, r24
    45c8:	26 95       	lsr	r18
    45ca:	29 23       	and	r18, r25
    45cc:	a0 81       	ld	r26, Z
    45ce:	b1 81       	ldd	r27, Z+1	; 0x01
    45d0:	a2 0f       	add	r26, r18
    45d2:	b1 1d       	adc	r27, r1
    45d4:	2c 91       	ld	r18, X
    45d6:	9f 5f       	subi	r25, 0xFF	; 255
    45d8:	89 23       	and	r24, r25
    45da:	82 83       	std	Z+2, r24	; 0x02
    45dc:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    45e0:	0b c0       	rjmp	.+22     	; 0x45f8 <__vector_55+0x6c>
    45e2:	e1 e3       	ldi	r30, 0x31	; 49
    45e4:	f1 e0       	ldi	r31, 0x01	; 1
    45e6:	80 81       	ld	r24, Z
    45e8:	8f 7d       	andi	r24, 0xDF	; 223
    45ea:	80 83       	st	Z, r24
    45ec:	05 c0       	rjmp	.+10     	; 0x45f8 <__vector_55+0x6c>
    45ee:	e1 e3       	ldi	r30, 0x31	; 49
    45f0:	f1 e0       	ldi	r31, 0x01	; 1
    45f2:	80 81       	ld	r24, Z
    45f4:	8f 7d       	andi	r24, 0xDF	; 223
    45f6:	80 83       	st	Z, r24
    45f8:	ff 91       	pop	r31
    45fa:	ef 91       	pop	r30
    45fc:	bf 91       	pop	r27
    45fe:	af 91       	pop	r26
    4600:	9f 91       	pop	r25
    4602:	8f 91       	pop	r24
    4604:	2f 91       	pop	r18
    4606:	0f 90       	pop	r0
    4608:	0b be       	out	0x3b, r0	; 59
    460a:	0f 90       	pop	r0
    460c:	0f be       	out	0x3f, r0	; 63
    460e:	0f 90       	pop	r0
    4610:	1f 90       	pop	r1
    4612:	18 95       	reti

00004614 <usart_getchar>:
    4614:	cf 93       	push	r28
    4616:	df 93       	push	r29
    4618:	1f 92       	push	r1
    461a:	cd b7       	in	r28, 0x3d	; 61
    461c:	de b7       	in	r29, 0x3e	; 62
    461e:	be 01       	movw	r22, r28
    4620:	6f 5f       	subi	r22, 0xFF	; 255
    4622:	7f 4f       	sbci	r23, 0xFF	; 255
    4624:	80 91 3f 17 	lds	r24, 0x173F	; 0x80173f <_com_serial_instance>
    4628:	90 91 40 17 	lds	r25, 0x1740	; 0x801740 <_com_serial_instance+0x1>
    462c:	7b dd       	rcall	.-1290   	; 0x4124 <serial_getByte>
    462e:	81 11       	cpse	r24, r1
    4630:	f6 cf       	rjmp	.-20     	; 0x461e <usart_getchar+0xa>
    4632:	89 81       	ldd	r24, Y+1	; 0x01
    4634:	90 e0       	ldi	r25, 0x00	; 0
    4636:	0f 90       	pop	r0
    4638:	df 91       	pop	r29
    463a:	cf 91       	pop	r28
    463c:	08 95       	ret

0000463e <usart_putchar>:
    463e:	68 2f       	mov	r22, r24
    4640:	80 91 3f 17 	lds	r24, 0x173F	; 0x80173f <_com_serial_instance>
    4644:	90 91 40 17 	lds	r25, 0x1740	; 0x801740 <_com_serial_instance+0x1>
    4648:	ed dc       	rcall	.-1574   	; 0x4024 <serial_sendByte>
    464a:	80 e0       	ldi	r24, 0x00	; 0
    464c:	90 e0       	ldi	r25, 0x00	; 0
    464e:	08 95       	ret

00004650 <stdio_initialise>:
    4650:	8f 92       	push	r8
    4652:	9f 92       	push	r9
    4654:	af 92       	push	r10
    4656:	cf 92       	push	r12
    4658:	ef 92       	push	r14
    465a:	0f 93       	push	r16
    465c:	81 2c       	mov	r8, r1
    465e:	91 2c       	mov	r9, r1
    4660:	68 94       	set
    4662:	aa 24       	eor	r10, r10
    4664:	a7 f8       	bld	r10, 7
    4666:	68 94       	set
    4668:	cc 24       	eor	r12, r12
    466a:	c7 f8       	bld	r12, 7
    466c:	e1 2c       	mov	r14, r1
    466e:	00 e0       	ldi	r16, 0x00	; 0
    4670:	23 e0       	ldi	r18, 0x03	; 3
    4672:	40 e0       	ldi	r20, 0x00	; 0
    4674:	51 ee       	ldi	r21, 0xE1	; 225
    4676:	60 e0       	ldi	r22, 0x00	; 0
    4678:	70 e0       	ldi	r23, 0x00	; 0
    467a:	32 dc       	rcall	.-1948   	; 0x3ee0 <serial_create>
    467c:	90 93 40 17 	sts	0x1740, r25	; 0x801740 <_com_serial_instance+0x1>
    4680:	80 93 3f 17 	sts	0x173F, r24	; 0x80173f <_com_serial_instance>
    4684:	ea e8       	ldi	r30, 0x8A	; 138
    4686:	f7 e1       	ldi	r31, 0x17	; 23
    4688:	83 e1       	ldi	r24, 0x13	; 19
    468a:	92 e0       	ldi	r25, 0x02	; 2
    468c:	91 83       	std	Z+1, r25	; 0x01
    468e:	80 83       	st	Z, r24
    4690:	93 83       	std	Z+3, r25	; 0x03
    4692:	82 83       	std	Z+2, r24	; 0x02
    4694:	0f 91       	pop	r16
    4696:	ef 90       	pop	r14
    4698:	cf 90       	pop	r12
    469a:	af 90       	pop	r10
    469c:	9f 90       	pop	r9
    469e:	8f 90       	pop	r8
    46a0:	08 95       	ret

000046a2 <_turn_off>:
    46a2:	90 e0       	ldi	r25, 0x00	; 0
    46a4:	fc 01       	movw	r30, r24
    46a6:	ee 0f       	add	r30, r30
    46a8:	ff 1f       	adc	r31, r31
    46aa:	e8 0f       	add	r30, r24
    46ac:	f9 1f       	adc	r31, r25
    46ae:	ee 0f       	add	r30, r30
    46b0:	ff 1f       	adc	r31, r31
    46b2:	ef 5b       	subi	r30, 0xBF	; 191
    46b4:	f8 4e       	sbci	r31, 0xE8	; 232
    46b6:	23 81       	ldd	r18, Z+3	; 0x03
    46b8:	21 11       	cpse	r18, r1
    46ba:	1f c0       	rjmp	.+62     	; 0x46fa <_turn_off+0x58>
    46bc:	9c 01       	movw	r18, r24
    46be:	22 0f       	add	r18, r18
    46c0:	33 1f       	adc	r19, r19
    46c2:	f9 01       	movw	r30, r18
    46c4:	e8 0f       	add	r30, r24
    46c6:	f9 1f       	adc	r31, r25
    46c8:	ee 0f       	add	r30, r30
    46ca:	ff 1f       	adc	r31, r31
    46cc:	ef 5b       	subi	r30, 0xBF	; 191
    46ce:	f8 4e       	sbci	r31, 0xE8	; 232
    46d0:	a0 81       	ld	r26, Z
    46d2:	b1 81       	ldd	r27, Z+1	; 0x01
    46d4:	4c 91       	ld	r20, X
    46d6:	f9 01       	movw	r30, r18
    46d8:	e8 0f       	add	r30, r24
    46da:	f9 1f       	adc	r31, r25
    46dc:	ee 0f       	add	r30, r30
    46de:	ff 1f       	adc	r31, r31
    46e0:	ef 5b       	subi	r30, 0xBF	; 191
    46e2:	f8 4e       	sbci	r31, 0xE8	; 232
    46e4:	81 e0       	ldi	r24, 0x01	; 1
    46e6:	90 e0       	ldi	r25, 0x00	; 0
    46e8:	02 80       	ldd	r0, Z+2	; 0x02
    46ea:	02 c0       	rjmp	.+4      	; 0x46f0 <_turn_off+0x4e>
    46ec:	88 0f       	add	r24, r24
    46ee:	99 1f       	adc	r25, r25
    46f0:	0a 94       	dec	r0
    46f2:	e2 f7       	brpl	.-8      	; 0x46ec <_turn_off+0x4a>
    46f4:	84 2b       	or	r24, r20
    46f6:	8c 93       	st	X, r24
    46f8:	08 95       	ret
    46fa:	fc 01       	movw	r30, r24
    46fc:	ee 0f       	add	r30, r30
    46fe:	ff 1f       	adc	r31, r31
    4700:	df 01       	movw	r26, r30
    4702:	a8 0f       	add	r26, r24
    4704:	b9 1f       	adc	r27, r25
    4706:	aa 0f       	add	r26, r26
    4708:	bb 1f       	adc	r27, r27
    470a:	af 5b       	subi	r26, 0xBF	; 191
    470c:	b8 4e       	sbci	r27, 0xE8	; 232
    470e:	0d 90       	ld	r0, X+
    4710:	bc 91       	ld	r27, X
    4712:	a0 2d       	mov	r26, r0
    4714:	2c 91       	ld	r18, X
    4716:	e8 0f       	add	r30, r24
    4718:	f9 1f       	adc	r31, r25
    471a:	ee 0f       	add	r30, r30
    471c:	ff 1f       	adc	r31, r31
    471e:	ef 5b       	subi	r30, 0xBF	; 191
    4720:	f8 4e       	sbci	r31, 0xE8	; 232
    4722:	81 e0       	ldi	r24, 0x01	; 1
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	02 80       	ldd	r0, Z+2	; 0x02
    4728:	02 c0       	rjmp	.+4      	; 0x472e <_turn_off+0x8c>
    472a:	88 0f       	add	r24, r24
    472c:	99 1f       	adc	r25, r25
    472e:	0a 94       	dec	r0
    4730:	e2 f7       	brpl	.-8      	; 0x472a <_turn_off+0x88>
    4732:	80 95       	com	r24
    4734:	82 23       	and	r24, r18
    4736:	8c 93       	st	X, r24
    4738:	08 95       	ret

0000473a <_turn_on>:
    473a:	90 e0       	ldi	r25, 0x00	; 0
    473c:	fc 01       	movw	r30, r24
    473e:	ee 0f       	add	r30, r30
    4740:	ff 1f       	adc	r31, r31
    4742:	e8 0f       	add	r30, r24
    4744:	f9 1f       	adc	r31, r25
    4746:	ee 0f       	add	r30, r30
    4748:	ff 1f       	adc	r31, r31
    474a:	ef 5b       	subi	r30, 0xBF	; 191
    474c:	f8 4e       	sbci	r31, 0xE8	; 232
    474e:	23 81       	ldd	r18, Z+3	; 0x03
    4750:	21 11       	cpse	r18, r1
    4752:	20 c0       	rjmp	.+64     	; 0x4794 <_turn_on+0x5a>
    4754:	9c 01       	movw	r18, r24
    4756:	22 0f       	add	r18, r18
    4758:	33 1f       	adc	r19, r19
    475a:	f9 01       	movw	r30, r18
    475c:	e8 0f       	add	r30, r24
    475e:	f9 1f       	adc	r31, r25
    4760:	ee 0f       	add	r30, r30
    4762:	ff 1f       	adc	r31, r31
    4764:	ef 5b       	subi	r30, 0xBF	; 191
    4766:	f8 4e       	sbci	r31, 0xE8	; 232
    4768:	a0 81       	ld	r26, Z
    476a:	b1 81       	ldd	r27, Z+1	; 0x01
    476c:	4c 91       	ld	r20, X
    476e:	f9 01       	movw	r30, r18
    4770:	e8 0f       	add	r30, r24
    4772:	f9 1f       	adc	r31, r25
    4774:	ee 0f       	add	r30, r30
    4776:	ff 1f       	adc	r31, r31
    4778:	ef 5b       	subi	r30, 0xBF	; 191
    477a:	f8 4e       	sbci	r31, 0xE8	; 232
    477c:	81 e0       	ldi	r24, 0x01	; 1
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	02 80       	ldd	r0, Z+2	; 0x02
    4782:	02 c0       	rjmp	.+4      	; 0x4788 <_turn_on+0x4e>
    4784:	88 0f       	add	r24, r24
    4786:	99 1f       	adc	r25, r25
    4788:	0a 94       	dec	r0
    478a:	e2 f7       	brpl	.-8      	; 0x4784 <_turn_on+0x4a>
    478c:	80 95       	com	r24
    478e:	84 23       	and	r24, r20
    4790:	8c 93       	st	X, r24
    4792:	08 95       	ret
    4794:	fc 01       	movw	r30, r24
    4796:	ee 0f       	add	r30, r30
    4798:	ff 1f       	adc	r31, r31
    479a:	df 01       	movw	r26, r30
    479c:	a8 0f       	add	r26, r24
    479e:	b9 1f       	adc	r27, r25
    47a0:	aa 0f       	add	r26, r26
    47a2:	bb 1f       	adc	r27, r27
    47a4:	af 5b       	subi	r26, 0xBF	; 191
    47a6:	b8 4e       	sbci	r27, 0xE8	; 232
    47a8:	0d 90       	ld	r0, X+
    47aa:	bc 91       	ld	r27, X
    47ac:	a0 2d       	mov	r26, r0
    47ae:	2c 91       	ld	r18, X
    47b0:	e8 0f       	add	r30, r24
    47b2:	f9 1f       	adc	r31, r25
    47b4:	ee 0f       	add	r30, r30
    47b6:	ff 1f       	adc	r31, r31
    47b8:	ef 5b       	subi	r30, 0xBF	; 191
    47ba:	f8 4e       	sbci	r31, 0xE8	; 232
    47bc:	81 e0       	ldi	r24, 0x01	; 1
    47be:	90 e0       	ldi	r25, 0x00	; 0
    47c0:	02 80       	ldd	r0, Z+2	; 0x02
    47c2:	02 c0       	rjmp	.+4      	; 0x47c8 <_turn_on+0x8e>
    47c4:	88 0f       	add	r24, r24
    47c6:	99 1f       	adc	r25, r25
    47c8:	0a 94       	dec	r0
    47ca:	e2 f7       	brpl	.-8      	; 0x47c4 <_turn_on+0x8a>
    47cc:	82 2b       	or	r24, r18
    47ce:	8c 93       	st	X, r24
    47d0:	08 95       	ret

000047d2 <_hal_led_task>:
    47d2:	cc 24       	eor	r12, r12
    47d4:	c3 94       	inc	r12
    47d6:	d1 2c       	mov	r13, r1
    47d8:	68 94       	set
    47da:	bb 24       	eor	r11, r11
    47dc:	b2 f8       	bld	r11, 2
    47de:	c1 e4       	ldi	r28, 0x41	; 65
    47e0:	d7 e1       	ldi	r29, 0x17	; 23
    47e2:	10 e0       	ldi	r17, 0x00	; 0
    47e4:	8c 81       	ldd	r24, Y+4	; 0x04
    47e6:	81 30       	cpi	r24, 0x01	; 1
    47e8:	81 f0       	breq	.+32     	; 0x480a <_hal_led_task+0x38>
    47ea:	18 f1       	brcs	.+70     	; 0x4832 <_hal_led_task+0x60>
    47ec:	82 30       	cpi	r24, 0x02	; 2
    47ee:	61 f5       	brne	.+88     	; 0x4848 <_hal_led_task+0x76>
    47f0:	e8 81       	ld	r30, Y
    47f2:	f9 81       	ldd	r31, Y+1	; 0x01
    47f4:	20 81       	ld	r18, Z
    47f6:	c6 01       	movw	r24, r12
    47f8:	0a 80       	ldd	r0, Y+2	; 0x02
    47fa:	02 c0       	rjmp	.+4      	; 0x4800 <_hal_led_task+0x2e>
    47fc:	88 0f       	add	r24, r24
    47fe:	99 1f       	adc	r25, r25
    4800:	0a 94       	dec	r0
    4802:	e2 f7       	brpl	.-8      	; 0x47fc <_hal_led_task+0x2a>
    4804:	82 27       	eor	r24, r18
    4806:	80 83       	st	Z, r24
    4808:	1f c0       	rjmp	.+62     	; 0x4848 <_hal_led_task+0x76>
    480a:	8d 81       	ldd	r24, Y+5	; 0x05
    480c:	8f 5f       	subi	r24, 0xFF	; 255
    480e:	86 30       	cpi	r24, 0x06	; 6
    4810:	10 f4       	brcc	.+4      	; 0x4816 <_hal_led_task+0x44>
    4812:	8d 83       	std	Y+5, r24	; 0x05
    4814:	19 c0       	rjmp	.+50     	; 0x4848 <_hal_led_task+0x76>
    4816:	1d 82       	std	Y+5, r1	; 0x05
    4818:	e8 81       	ld	r30, Y
    481a:	f9 81       	ldd	r31, Y+1	; 0x01
    481c:	20 81       	ld	r18, Z
    481e:	c6 01       	movw	r24, r12
    4820:	0a 80       	ldd	r0, Y+2	; 0x02
    4822:	02 c0       	rjmp	.+4      	; 0x4828 <_hal_led_task+0x56>
    4824:	88 0f       	add	r24, r24
    4826:	99 1f       	adc	r25, r25
    4828:	0a 94       	dec	r0
    482a:	e2 f7       	brpl	.-8      	; 0x4824 <_hal_led_task+0x52>
    482c:	82 27       	eor	r24, r18
    482e:	80 83       	st	Z, r24
    4830:	0b c0       	rjmp	.+22     	; 0x4848 <_hal_led_task+0x76>
    4832:	0d 81       	ldd	r16, Y+5	; 0x05
    4834:	00 23       	and	r16, r16
    4836:	29 f0       	breq	.+10     	; 0x4842 <_hal_led_task+0x70>
    4838:	81 2f       	mov	r24, r17
    483a:	7f df       	rcall	.-258    	; 0x473a <_turn_on>
    483c:	01 50       	subi	r16, 0x01	; 1
    483e:	0d 83       	std	Y+5, r16	; 0x05
    4840:	03 c0       	rjmp	.+6      	; 0x4848 <_hal_led_task+0x76>
    4842:	bc 82       	std	Y+4, r11	; 0x04
    4844:	81 2f       	mov	r24, r17
    4846:	2d df       	rcall	.-422    	; 0x46a2 <_turn_off>
    4848:	1f 5f       	subi	r17, 0xFF	; 255
    484a:	26 96       	adiw	r28, 0x06	; 6
    484c:	14 30       	cpi	r17, 0x04	; 4
    484e:	51 f6       	brne	.-108    	; 0x47e4 <_hal_led_task+0x12>
    4850:	6c e0       	ldi	r22, 0x0C	; 12
    4852:	70 e0       	ldi	r23, 0x00	; 0
    4854:	80 e0       	ldi	r24, 0x00	; 0
    4856:	90 e0       	ldi	r25, 0x00	; 0
    4858:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vTaskDelay>
    485c:	c0 cf       	rjmp	.-128    	; 0x47de <_hal_led_task+0xc>

0000485e <status_leds_initialise>:
    485e:	ef 92       	push	r14
    4860:	ff 92       	push	r15
    4862:	0f 93       	push	r16
    4864:	1f 93       	push	r17
    4866:	cf 93       	push	r28
    4868:	df 93       	push	r29
    486a:	08 2f       	mov	r16, r24
    486c:	80 e4       	ldi	r24, 0x40	; 64
    486e:	87 b9       	out	0x07, r24	; 7
    4870:	c1 e4       	ldi	r28, 0x41	; 65
    4872:	d7 e1       	ldi	r29, 0x17	; 23
    4874:	0f 2e       	mov	r0, r31
    4876:	f8 e2       	ldi	r31, 0x28	; 40
    4878:	ef 2e       	mov	r14, r31
    487a:	f1 2c       	mov	r15, r1
    487c:	f0 2d       	mov	r31, r0
    487e:	f9 82       	std	Y+1, r15	; 0x01
    4880:	e8 82       	st	Y, r14
    4882:	86 e0       	ldi	r24, 0x06	; 6
    4884:	8a 83       	std	Y+2, r24	; 0x02
    4886:	1b 82       	std	Y+3, r1	; 0x03
    4888:	14 e0       	ldi	r17, 0x04	; 4
    488a:	1c 83       	std	Y+4, r17	; 0x04
    488c:	80 e0       	ldi	r24, 0x00	; 0
    488e:	09 df       	rcall	.-494    	; 0x46a2 <_turn_off>
    4890:	80 e8       	ldi	r24, 0x80	; 128
    4892:	87 b9       	out	0x07, r24	; 7
    4894:	ff 82       	std	Y+7, r15	; 0x07
    4896:	ee 82       	std	Y+6, r14	; 0x06
    4898:	87 e0       	ldi	r24, 0x07	; 7
    489a:	88 87       	std	Y+8, r24	; 0x08
    489c:	19 86       	std	Y+9, r1	; 0x09
    489e:	1a 87       	std	Y+10, r17	; 0x0a
    48a0:	81 e0       	ldi	r24, 0x01	; 1
    48a2:	ff de       	rcall	.-514    	; 0x46a2 <_turn_off>
    48a4:	80 e2       	ldi	r24, 0x20	; 32
    48a6:	83 bb       	out	0x13, r24	; 19
    48a8:	84 e3       	ldi	r24, 0x34	; 52
    48aa:	90 e0       	ldi	r25, 0x00	; 0
    48ac:	9d 87       	std	Y+13, r25	; 0x0d
    48ae:	8c 87       	std	Y+12, r24	; 0x0c
    48b0:	85 e0       	ldi	r24, 0x05	; 5
    48b2:	8e 87       	std	Y+14, r24	; 0x0e
    48b4:	1f 86       	std	Y+15, r1	; 0x0f
    48b6:	18 8b       	std	Y+16, r17	; 0x10
    48b8:	82 e0       	ldi	r24, 0x02	; 2
    48ba:	f3 de       	rcall	.-538    	; 0x46a2 <_turn_off>
    48bc:	80 e1       	ldi	r24, 0x10	; 16
    48be:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
    48c2:	82 e0       	ldi	r24, 0x02	; 2
    48c4:	91 e0       	ldi	r25, 0x01	; 1
    48c6:	9b 8b       	std	Y+19, r25	; 0x13
    48c8:	8a 8b       	std	Y+18, r24	; 0x12
    48ca:	1c 8b       	std	Y+20, r17	; 0x14
    48cc:	1d 8a       	std	Y+21, r1	; 0x15
    48ce:	1e 8b       	std	Y+22, r17	; 0x16
    48d0:	83 e0       	ldi	r24, 0x03	; 3
    48d2:	e7 de       	rcall	.-562    	; 0x46a2 <_turn_off>
    48d4:	e1 2c       	mov	r14, r1
    48d6:	f1 2c       	mov	r15, r1
    48d8:	20 e0       	ldi	r18, 0x00	; 0
    48da:	30 e0       	ldi	r19, 0x00	; 0
    48dc:	40 ec       	ldi	r20, 0xC0	; 192
    48de:	50 e0       	ldi	r21, 0x00	; 0
    48e0:	61 ed       	ldi	r22, 0xD1	; 209
    48e2:	77 e0       	ldi	r23, 0x07	; 7
    48e4:	89 ee       	ldi	r24, 0xE9	; 233
    48e6:	93 e2       	ldi	r25, 0x23	; 35
    48e8:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <xTaskCreate>
    48ec:	df 91       	pop	r29
    48ee:	cf 91       	pop	r28
    48f0:	1f 91       	pop	r17
    48f2:	0f 91       	pop	r16
    48f4:	ff 90       	pop	r15
    48f6:	ef 90       	pop	r14
    48f8:	08 95       	ret

000048fa <status_leds_slowBlink>:
    48fa:	cf 93       	push	r28
    48fc:	df 93       	push	r29
    48fe:	90 e0       	ldi	r25, 0x00	; 0
    4900:	fc 01       	movw	r30, r24
    4902:	ee 0f       	add	r30, r30
    4904:	ff 1f       	adc	r31, r31
    4906:	df 01       	movw	r26, r30
    4908:	a8 0f       	add	r26, r24
    490a:	b9 1f       	adc	r27, r25
    490c:	aa 0f       	add	r26, r26
    490e:	bb 1f       	adc	r27, r27
    4910:	af 5b       	subi	r26, 0xBF	; 191
    4912:	b8 4e       	sbci	r27, 0xE8	; 232
    4914:	cd 91       	ld	r28, X+
    4916:	dc 91       	ld	r29, X
    4918:	11 97       	sbiw	r26, 0x01	; 1
    491a:	48 81       	ld	r20, Y
    491c:	21 e0       	ldi	r18, 0x01	; 1
    491e:	30 e0       	ldi	r19, 0x00	; 0
    4920:	12 96       	adiw	r26, 0x02	; 2
    4922:	0c 90       	ld	r0, X
    4924:	12 97       	sbiw	r26, 0x02	; 2
    4926:	02 c0       	rjmp	.+4      	; 0x492c <status_leds_slowBlink+0x32>
    4928:	22 0f       	add	r18, r18
    492a:	33 1f       	adc	r19, r19
    492c:	0a 94       	dec	r0
    492e:	e2 f7       	brpl	.-8      	; 0x4928 <status_leds_slowBlink+0x2e>
    4930:	24 27       	eor	r18, r20
    4932:	28 83       	st	Y, r18
    4934:	fd 01       	movw	r30, r26
    4936:	81 e0       	ldi	r24, 0x01	; 1
    4938:	84 83       	std	Z+4, r24	; 0x04
    493a:	df 91       	pop	r29
    493c:	cf 91       	pop	r28
    493e:	08 95       	ret

00004940 <status_leds_fastBlink>:
    4940:	cf 93       	push	r28
    4942:	df 93       	push	r29
    4944:	90 e0       	ldi	r25, 0x00	; 0
    4946:	fc 01       	movw	r30, r24
    4948:	ee 0f       	add	r30, r30
    494a:	ff 1f       	adc	r31, r31
    494c:	df 01       	movw	r26, r30
    494e:	a8 0f       	add	r26, r24
    4950:	b9 1f       	adc	r27, r25
    4952:	aa 0f       	add	r26, r26
    4954:	bb 1f       	adc	r27, r27
    4956:	af 5b       	subi	r26, 0xBF	; 191
    4958:	b8 4e       	sbci	r27, 0xE8	; 232
    495a:	cd 91       	ld	r28, X+
    495c:	dc 91       	ld	r29, X
    495e:	11 97       	sbiw	r26, 0x01	; 1
    4960:	48 81       	ld	r20, Y
    4962:	21 e0       	ldi	r18, 0x01	; 1
    4964:	30 e0       	ldi	r19, 0x00	; 0
    4966:	12 96       	adiw	r26, 0x02	; 2
    4968:	0c 90       	ld	r0, X
    496a:	12 97       	sbiw	r26, 0x02	; 2
    496c:	02 c0       	rjmp	.+4      	; 0x4972 <status_leds_fastBlink+0x32>
    496e:	22 0f       	add	r18, r18
    4970:	33 1f       	adc	r19, r19
    4972:	0a 94       	dec	r0
    4974:	e2 f7       	brpl	.-8      	; 0x496e <status_leds_fastBlink+0x2e>
    4976:	24 27       	eor	r18, r20
    4978:	28 83       	st	Y, r18
    497a:	fd 01       	movw	r30, r26
    497c:	82 e0       	ldi	r24, 0x02	; 2
    497e:	84 83       	std	Z+4, r24	; 0x04
    4980:	df 91       	pop	r29
    4982:	cf 91       	pop	r28
    4984:	08 95       	ret

00004986 <status_leds_ledOn>:
    4986:	28 2f       	mov	r18, r24
    4988:	30 e0       	ldi	r19, 0x00	; 0
    498a:	f9 01       	movw	r30, r18
    498c:	ee 0f       	add	r30, r30
    498e:	ff 1f       	adc	r31, r31
    4990:	e2 0f       	add	r30, r18
    4992:	f3 1f       	adc	r31, r19
    4994:	ee 0f       	add	r30, r30
    4996:	ff 1f       	adc	r31, r31
    4998:	ef 5b       	subi	r30, 0xBF	; 191
    499a:	f8 4e       	sbci	r31, 0xE8	; 232
    499c:	93 e0       	ldi	r25, 0x03	; 3
    499e:	94 83       	std	Z+4, r25	; 0x04
    49a0:	cc ce       	rjmp	.-616    	; 0x473a <_turn_on>
    49a2:	08 95       	ret

000049a4 <status_leds_ledOff>:
    49a4:	28 2f       	mov	r18, r24
    49a6:	30 e0       	ldi	r19, 0x00	; 0
    49a8:	f9 01       	movw	r30, r18
    49aa:	ee 0f       	add	r30, r30
    49ac:	ff 1f       	adc	r31, r31
    49ae:	e2 0f       	add	r30, r18
    49b0:	f3 1f       	adc	r31, r19
    49b2:	ee 0f       	add	r30, r30
    49b4:	ff 1f       	adc	r31, r31
    49b6:	ef 5b       	subi	r30, 0xBF	; 191
    49b8:	f8 4e       	sbci	r31, 0xE8	; 232
    49ba:	94 e0       	ldi	r25, 0x04	; 4
    49bc:	94 83       	std	Z+4, r25	; 0x04
    49be:	71 ce       	rjmp	.-798    	; 0x46a2 <_turn_off>
    49c0:	08 95       	ret

000049c2 <status_leds_longPuls>:
    49c2:	90 e0       	ldi	r25, 0x00	; 0
    49c4:	fc 01       	movw	r30, r24
    49c6:	ee 0f       	add	r30, r30
    49c8:	ff 1f       	adc	r31, r31
    49ca:	df 01       	movw	r26, r30
    49cc:	a8 0f       	add	r26, r24
    49ce:	b9 1f       	adc	r27, r25
    49d0:	aa 0f       	add	r26, r26
    49d2:	bb 1f       	adc	r27, r27
    49d4:	af 5b       	subi	r26, 0xBF	; 191
    49d6:	b8 4e       	sbci	r27, 0xE8	; 232
    49d8:	26 e0       	ldi	r18, 0x06	; 6
    49da:	15 96       	adiw	r26, 0x05	; 5
    49dc:	2c 93       	st	X, r18
    49de:	15 97       	sbiw	r26, 0x05	; 5
    49e0:	fd 01       	movw	r30, r26
    49e2:	14 82       	std	Z+4, r1	; 0x04
    49e4:	08 95       	ret

000049e6 <status_leds_shortPuls>:
    49e6:	90 e0       	ldi	r25, 0x00	; 0
    49e8:	fc 01       	movw	r30, r24
    49ea:	ee 0f       	add	r30, r30
    49ec:	ff 1f       	adc	r31, r31
    49ee:	df 01       	movw	r26, r30
    49f0:	a8 0f       	add	r26, r24
    49f2:	b9 1f       	adc	r27, r25
    49f4:	aa 0f       	add	r26, r26
    49f6:	bb 1f       	adc	r27, r27
    49f8:	af 5b       	subi	r26, 0xBF	; 191
    49fa:	b8 4e       	sbci	r27, 0xE8	; 232
    49fc:	15 96       	adiw	r26, 0x05	; 5
    49fe:	1c 92       	st	X, r1
    4a00:	15 97       	sbiw	r26, 0x05	; 5
    4a02:	fd 01       	movw	r30, r26
    4a04:	14 82       	std	Z+4, r1	; 0x04
    4a06:	08 95       	ret

00004a08 <_initTwiInterface>:
    4a08:	80 91 67 17 	lds	r24, 0x1767	; 0x801767 <_twiIsInitiated>
    4a0c:	81 11       	cpse	r24, r1
    4a0e:	0c c0       	rjmp	.+24     	; 0x4a28 <_initTwiInterface+0x20>
    4a10:	8c e0       	ldi	r24, 0x0C	; 12
    4a12:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    4a16:	8f ef       	ldi	r24, 0xFF	; 255
    4a18:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    4a1c:	84 e0       	ldi	r24, 0x04	; 4
    4a1e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4a22:	81 e0       	ldi	r24, 0x01	; 1
    4a24:	80 93 67 17 	sts	0x1767, r24	; 0x801767 <_twiIsInitiated>
    4a28:	08 95       	ret

00004a2a <twiCreate>:
    4a2a:	af 92       	push	r10
    4a2c:	bf 92       	push	r11
    4a2e:	cf 92       	push	r12
    4a30:	df 92       	push	r13
    4a32:	ef 92       	push	r14
    4a34:	ff 92       	push	r15
    4a36:	0f 93       	push	r16
    4a38:	1f 93       	push	r17
    4a3a:	cf 93       	push	r28
    4a3c:	df 93       	push	r29
    4a3e:	a8 2e       	mov	r10, r24
    4a40:	b6 2e       	mov	r11, r22
    4a42:	69 01       	movw	r12, r18
    4a44:	7a 01       	movw	r14, r20
    4a46:	84 e0       	ldi	r24, 0x04	; 4
    4a48:	90 e0       	ldi	r25, 0x00	; 0
    4a4a:	b1 d3       	rcall	.+1890   	; 0x51ae <malloc>
    4a4c:	ec 01       	movw	r28, r24
    4a4e:	89 2b       	or	r24, r25
    4a50:	61 f1       	breq	.+88     	; 0x4aaa <twiCreate+0x80>
    4a52:	a8 82       	st	Y, r10
    4a54:	81 e0       	ldi	r24, 0x01	; 1
    4a56:	b8 12       	cpse	r11, r24
    4a58:	12 c0       	rjmp	.+36     	; 0x4a7e <twiCreate+0x54>
    4a5a:	c7 01       	movw	r24, r14
    4a5c:	b6 01       	movw	r22, r12
    4a5e:	20 ea       	ldi	r18, 0xA0	; 160
    4a60:	36 e8       	ldi	r19, 0x86	; 134
    4a62:	41 e0       	ldi	r20, 0x01	; 1
    4a64:	50 e0       	ldi	r21, 0x00	; 0
    4a66:	79 d3       	rcall	.+1778   	; 0x515a <__udivmodsi4>
    4a68:	da 01       	movw	r26, r20
    4a6a:	c9 01       	movw	r24, r18
    4a6c:	40 97       	sbiw	r24, 0x10	; 16
    4a6e:	a1 09       	sbc	r26, r1
    4a70:	b1 09       	sbc	r27, r1
    4a72:	b6 95       	lsr	r27
    4a74:	a7 95       	ror	r26
    4a76:	97 95       	ror	r25
    4a78:	87 95       	ror	r24
    4a7a:	89 83       	std	Y+1, r24	; 0x01
    4a7c:	11 c0       	rjmp	.+34     	; 0x4aa0 <twiCreate+0x76>
    4a7e:	c7 01       	movw	r24, r14
    4a80:	b6 01       	movw	r22, r12
    4a82:	20 e8       	ldi	r18, 0x80	; 128
    4a84:	3a e1       	ldi	r19, 0x1A	; 26
    4a86:	46 e0       	ldi	r20, 0x06	; 6
    4a88:	50 e0       	ldi	r21, 0x00	; 0
    4a8a:	67 d3       	rcall	.+1742   	; 0x515a <__udivmodsi4>
    4a8c:	da 01       	movw	r26, r20
    4a8e:	c9 01       	movw	r24, r18
    4a90:	40 97       	sbiw	r24, 0x10	; 16
    4a92:	a1 09       	sbc	r26, r1
    4a94:	b1 09       	sbc	r27, r1
    4a96:	b6 95       	lsr	r27
    4a98:	a7 95       	ror	r26
    4a9a:	97 95       	ror	r25
    4a9c:	87 95       	ror	r24
    4a9e:	89 83       	std	Y+1, r24	; 0x01
    4aa0:	1b 83       	std	Y+3, r17	; 0x03
    4aa2:	0a 83       	std	Y+2, r16	; 0x02
    4aa4:	8c 2f       	mov	r24, r28
    4aa6:	9d 2f       	mov	r25, r29
    4aa8:	02 c0       	rjmp	.+4      	; 0x4aae <twiCreate+0x84>
    4aaa:	80 e0       	ldi	r24, 0x00	; 0
    4aac:	90 e0       	ldi	r25, 0x00	; 0
    4aae:	df 91       	pop	r29
    4ab0:	cf 91       	pop	r28
    4ab2:	1f 91       	pop	r17
    4ab4:	0f 91       	pop	r16
    4ab6:	ff 90       	pop	r15
    4ab8:	ef 90       	pop	r14
    4aba:	df 90       	pop	r13
    4abc:	cf 90       	pop	r12
    4abe:	bf 90       	pop	r11
    4ac0:	af 90       	pop	r10
    4ac2:	08 95       	ret

00004ac4 <twiIsBusy>:
    4ac4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4ac8:	81 70       	andi	r24, 0x01	; 1
    4aca:	08 95       	ret

00004acc <twiTransmit>:
    4acc:	ff 92       	push	r15
    4ace:	0f 93       	push	r16
    4ad0:	1f 93       	push	r17
    4ad2:	cf 93       	push	r28
    4ad4:	df 93       	push	r29
    4ad6:	00 97       	sbiw	r24, 0x00	; 0
    4ad8:	d1 f1       	breq	.+116    	; 0x4b4e <twiTransmit+0x82>
    4ada:	4a 30       	cpi	r20, 0x0A	; 10
    4adc:	d0 f5       	brcc	.+116    	; 0x4b52 <twiTransmit+0x86>
    4ade:	f4 2e       	mov	r15, r20
    4ae0:	8b 01       	movw	r16, r22
    4ae2:	ec 01       	movw	r28, r24
    4ae4:	ef df       	rcall	.-34     	; 0x4ac4 <twiIsBusy>
    4ae6:	81 11       	cpse	r24, r1
    4ae8:	36 c0       	rjmp	.+108    	; 0x4b56 <twiTransmit+0x8a>
    4aea:	80 91 5a 17 	lds	r24, 0x175A	; 0x80175a <_twiCurrentHandler>
    4aee:	90 91 5b 17 	lds	r25, 0x175B	; 0x80175b <_twiCurrentHandler+0x1>
    4af2:	c8 17       	cp	r28, r24
    4af4:	d9 07       	cpc	r29, r25
    4af6:	41 f0       	breq	.+16     	; 0x4b08 <twiTransmit+0x3c>
    4af8:	87 df       	rcall	.-242    	; 0x4a08 <_initTwiInterface>
    4afa:	89 81       	ldd	r24, Y+1	; 0x01
    4afc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    4b00:	d0 93 5b 17 	sts	0x175B, r29	; 0x80175b <_twiCurrentHandler+0x1>
    4b04:	c0 93 5a 17 	sts	0x175A, r28	; 0x80175a <_twiCurrentHandler>
    4b08:	81 e0       	ldi	r24, 0x01	; 1
    4b0a:	8f 0d       	add	r24, r15
    4b0c:	80 93 5c 17 	sts	0x175C, r24	; 0x80175c <_twiMessageLen>
    4b10:	88 81       	ld	r24, Y
    4b12:	88 0f       	add	r24, r24
    4b14:	80 93 5d 17 	sts	0x175D, r24	; 0x80175d <_twiMessageBuffer>
    4b18:	ff 20       	and	r15, r15
    4b1a:	89 f0       	breq	.+34     	; 0x4b3e <twiTransmit+0x72>
    4b1c:	f8 01       	movw	r30, r16
    4b1e:	ae e5       	ldi	r26, 0x5E	; 94
    4b20:	b7 e1       	ldi	r27, 0x17	; 23
    4b22:	4f ef       	ldi	r20, 0xFF	; 255
    4b24:	4f 0d       	add	r20, r15
    4b26:	64 2f       	mov	r22, r20
    4b28:	70 e0       	ldi	r23, 0x00	; 0
    4b2a:	cb 01       	movw	r24, r22
    4b2c:	01 96       	adiw	r24, 0x01	; 1
    4b2e:	b8 01       	movw	r22, r16
    4b30:	68 0f       	add	r22, r24
    4b32:	79 1f       	adc	r23, r25
    4b34:	81 91       	ld	r24, Z+
    4b36:	8d 93       	st	X+, r24
    4b38:	e6 17       	cp	r30, r22
    4b3a:	f7 07       	cpc	r31, r23
    4b3c:	d9 f7       	brne	.-10     	; 0x4b34 <twiTransmit+0x68>
    4b3e:	88 ef       	ldi	r24, 0xF8	; 248
    4b40:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    4b44:	85 ea       	ldi	r24, 0xA5	; 165
    4b46:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4b4a:	84 e0       	ldi	r24, 0x04	; 4
    4b4c:	05 c0       	rjmp	.+10     	; 0x4b58 <twiTransmit+0x8c>
    4b4e:	86 e0       	ldi	r24, 0x06	; 6
    4b50:	03 c0       	rjmp	.+6      	; 0x4b58 <twiTransmit+0x8c>
    4b52:	87 e0       	ldi	r24, 0x07	; 7
    4b54:	01 c0       	rjmp	.+2      	; 0x4b58 <twiTransmit+0x8c>
    4b56:	82 e0       	ldi	r24, 0x02	; 2
    4b58:	df 91       	pop	r29
    4b5a:	cf 91       	pop	r28
    4b5c:	1f 91       	pop	r17
    4b5e:	0f 91       	pop	r16
    4b60:	ff 90       	pop	r15
    4b62:	08 95       	ret

00004b64 <twiReceive>:
    4b64:	1f 93       	push	r17
    4b66:	cf 93       	push	r28
    4b68:	df 93       	push	r29
    4b6a:	00 97       	sbiw	r24, 0x00	; 0
    4b6c:	29 f1       	breq	.+74     	; 0x4bb8 <twiReceive+0x54>
    4b6e:	6b 30       	cpi	r22, 0x0B	; 11
    4b70:	28 f5       	brcc	.+74     	; 0x4bbc <twiReceive+0x58>
    4b72:	16 2f       	mov	r17, r22
    4b74:	ec 01       	movw	r28, r24
    4b76:	a6 df       	rcall	.-180    	; 0x4ac4 <twiIsBusy>
    4b78:	81 11       	cpse	r24, r1
    4b7a:	22 c0       	rjmp	.+68     	; 0x4bc0 <twiReceive+0x5c>
    4b7c:	80 91 5a 17 	lds	r24, 0x175A	; 0x80175a <_twiCurrentHandler>
    4b80:	90 91 5b 17 	lds	r25, 0x175B	; 0x80175b <_twiCurrentHandler+0x1>
    4b84:	c8 17       	cp	r28, r24
    4b86:	d9 07       	cpc	r29, r25
    4b88:	41 f0       	breq	.+16     	; 0x4b9a <twiReceive+0x36>
    4b8a:	3e df       	rcall	.-388    	; 0x4a08 <_initTwiInterface>
    4b8c:	89 81       	ldd	r24, Y+1	; 0x01
    4b8e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    4b92:	d0 93 5b 17 	sts	0x175B, r29	; 0x80175b <_twiCurrentHandler+0x1>
    4b96:	c0 93 5a 17 	sts	0x175A, r28	; 0x80175a <_twiCurrentHandler>
    4b9a:	10 93 5c 17 	sts	0x175C, r17	; 0x80175c <_twiMessageLen>
    4b9e:	88 81       	ld	r24, Y
    4ba0:	88 0f       	add	r24, r24
    4ba2:	81 60       	ori	r24, 0x01	; 1
    4ba4:	80 93 5d 17 	sts	0x175D, r24	; 0x80175d <_twiMessageBuffer>
    4ba8:	88 ef       	ldi	r24, 0xF8	; 248
    4baa:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    4bae:	85 ea       	ldi	r24, 0xA5	; 165
    4bb0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4bb4:	85 e0       	ldi	r24, 0x05	; 5
    4bb6:	05 c0       	rjmp	.+10     	; 0x4bc2 <twiReceive+0x5e>
    4bb8:	86 e0       	ldi	r24, 0x06	; 6
    4bba:	03 c0       	rjmp	.+6      	; 0x4bc2 <twiReceive+0x5e>
    4bbc:	87 e0       	ldi	r24, 0x07	; 7
    4bbe:	01 c0       	rjmp	.+2      	; 0x4bc2 <twiReceive+0x5e>
    4bc0:	82 e0       	ldi	r24, 0x02	; 2
    4bc2:	df 91       	pop	r29
    4bc4:	cf 91       	pop	r28
    4bc6:	1f 91       	pop	r17
    4bc8:	08 95       	ret

00004bca <__vector_39>:
    4bca:	1f 92       	push	r1
    4bcc:	0f 92       	push	r0
    4bce:	0f b6       	in	r0, 0x3f	; 63
    4bd0:	0f 92       	push	r0
    4bd2:	11 24       	eor	r1, r1
    4bd4:	0b b6       	in	r0, 0x3b	; 59
    4bd6:	0f 92       	push	r0
    4bd8:	2f 93       	push	r18
    4bda:	3f 93       	push	r19
    4bdc:	4f 93       	push	r20
    4bde:	5f 93       	push	r21
    4be0:	6f 93       	push	r22
    4be2:	7f 93       	push	r23
    4be4:	8f 93       	push	r24
    4be6:	9f 93       	push	r25
    4be8:	af 93       	push	r26
    4bea:	bf 93       	push	r27
    4bec:	ef 93       	push	r30
    4bee:	ff 93       	push	r31
    4bf0:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    4bf4:	8e 2f       	mov	r24, r30
    4bf6:	90 e0       	ldi	r25, 0x00	; 0
    4bf8:	fc 01       	movw	r30, r24
    4bfa:	38 97       	sbiw	r30, 0x08	; 8
    4bfc:	e1 35       	cpi	r30, 0x51	; 81
    4bfe:	f1 05       	cpc	r31, r1
    4c00:	08 f0       	brcs	.+2      	; 0x4c04 <__vector_39+0x3a>
    4c02:	75 c0       	rjmp	.+234    	; 0x4cee <__vector_39+0x124>
    4c04:	88 27       	eor	r24, r24
    4c06:	e4 58       	subi	r30, 0x84	; 132
    4c08:	ff 4f       	sbci	r31, 0xFF	; 255
    4c0a:	8f 4f       	sbci	r24, 0xFF	; 255
    4c0c:	c8 c2       	rjmp	.+1424   	; 0x519e <__tablejump2__>
    4c0e:	10 92 59 17 	sts	0x1759, r1	; 0x801759 <_index.1885>
    4c12:	e0 91 59 17 	lds	r30, 0x1759	; 0x801759 <_index.1885>
    4c16:	80 91 5c 17 	lds	r24, 0x175C	; 0x80175c <_twiMessageLen>
    4c1a:	e8 17       	cp	r30, r24
    4c1c:	70 f4       	brcc	.+28     	; 0x4c3a <__vector_39+0x70>
    4c1e:	81 e0       	ldi	r24, 0x01	; 1
    4c20:	8e 0f       	add	r24, r30
    4c22:	80 93 59 17 	sts	0x1759, r24	; 0x801759 <_index.1885>
    4c26:	f0 e0       	ldi	r31, 0x00	; 0
    4c28:	e3 5a       	subi	r30, 0xA3	; 163
    4c2a:	f8 4e       	sbci	r31, 0xE8	; 232
    4c2c:	80 81       	ld	r24, Z
    4c2e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    4c32:	85 e8       	ldi	r24, 0x85	; 133
    4c34:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4c38:	72 c0       	rjmp	.+228    	; 0x4d1e <__vector_39+0x154>
    4c3a:	84 e9       	ldi	r24, 0x94	; 148
    4c3c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4c40:	80 91 5a 17 	lds	r24, 0x175A	; 0x80175a <_twiCurrentHandler>
    4c44:	90 91 5b 17 	lds	r25, 0x175B	; 0x80175b <_twiCurrentHandler+0x1>
    4c48:	dc 01       	movw	r26, r24
    4c4a:	12 96       	adiw	r26, 0x02	; 2
    4c4c:	ed 91       	ld	r30, X+
    4c4e:	fc 91       	ld	r31, X
    4c50:	13 97       	sbiw	r26, 0x03	; 3
    4c52:	30 97       	sbiw	r30, 0x00	; 0
    4c54:	09 f4       	brne	.+2      	; 0x4c58 <__vector_39+0x8e>
    4c56:	63 c0       	rjmp	.+198    	; 0x4d1e <__vector_39+0x154>
    4c58:	20 e0       	ldi	r18, 0x00	; 0
    4c5a:	40 e0       	ldi	r20, 0x00	; 0
    4c5c:	50 e0       	ldi	r21, 0x00	; 0
    4c5e:	64 e0       	ldi	r22, 0x04	; 4
    4c60:	19 95       	eicall
    4c62:	5d c0       	rjmp	.+186    	; 0x4d1e <__vector_39+0x154>
    4c64:	e0 91 59 17 	lds	r30, 0x1759	; 0x801759 <_index.1885>
    4c68:	81 e0       	ldi	r24, 0x01	; 1
    4c6a:	8e 0f       	add	r24, r30
    4c6c:	80 93 59 17 	sts	0x1759, r24	; 0x801759 <_index.1885>
    4c70:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    4c74:	f0 e0       	ldi	r31, 0x00	; 0
    4c76:	e3 5a       	subi	r30, 0xA3	; 163
    4c78:	f8 4e       	sbci	r31, 0xE8	; 232
    4c7a:	80 83       	st	Z, r24
    4c7c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    4c80:	80 34       	cpi	r24, 0x40	; 64
    4c82:	11 f4       	brne	.+4      	; 0x4c88 <__vector_39+0xbe>
    4c84:	10 92 59 17 	sts	0x1759, r1	; 0x801759 <_index.1885>
    4c88:	20 91 59 17 	lds	r18, 0x1759	; 0x801759 <_index.1885>
    4c8c:	30 e0       	ldi	r19, 0x00	; 0
    4c8e:	80 91 5c 17 	lds	r24, 0x175C	; 0x80175c <_twiMessageLen>
    4c92:	90 e0       	ldi	r25, 0x00	; 0
    4c94:	01 97       	sbiw	r24, 0x01	; 1
    4c96:	28 17       	cp	r18, r24
    4c98:	39 07       	cpc	r19, r25
    4c9a:	24 f4       	brge	.+8      	; 0x4ca4 <__vector_39+0xda>
    4c9c:	85 ec       	ldi	r24, 0xC5	; 197
    4c9e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4ca2:	3d c0       	rjmp	.+122    	; 0x4d1e <__vector_39+0x154>
    4ca4:	85 e8       	ldi	r24, 0x85	; 133
    4ca6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4caa:	39 c0       	rjmp	.+114    	; 0x4d1e <__vector_39+0x154>
    4cac:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    4cb0:	e0 91 59 17 	lds	r30, 0x1759	; 0x801759 <_index.1885>
    4cb4:	f0 e0       	ldi	r31, 0x00	; 0
    4cb6:	e3 5a       	subi	r30, 0xA3	; 163
    4cb8:	f8 4e       	sbci	r31, 0xE8	; 232
    4cba:	80 83       	st	Z, r24
    4cbc:	84 e9       	ldi	r24, 0x94	; 148
    4cbe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4cc2:	80 91 5a 17 	lds	r24, 0x175A	; 0x80175a <_twiCurrentHandler>
    4cc6:	90 91 5b 17 	lds	r25, 0x175B	; 0x80175b <_twiCurrentHandler+0x1>
    4cca:	dc 01       	movw	r26, r24
    4ccc:	12 96       	adiw	r26, 0x02	; 2
    4cce:	ed 91       	ld	r30, X+
    4cd0:	fc 91       	ld	r31, X
    4cd2:	13 97       	sbiw	r26, 0x03	; 3
    4cd4:	30 97       	sbiw	r30, 0x00	; 0
    4cd6:	19 f1       	breq	.+70     	; 0x4d1e <__vector_39+0x154>
    4cd8:	20 91 5c 17 	lds	r18, 0x175C	; 0x80175c <_twiMessageLen>
    4cdc:	4d e5       	ldi	r20, 0x5D	; 93
    4cde:	57 e1       	ldi	r21, 0x17	; 23
    4ce0:	65 e0       	ldi	r22, 0x05	; 5
    4ce2:	19 95       	eicall
    4ce4:	1c c0       	rjmp	.+56     	; 0x4d1e <__vector_39+0x154>
    4ce6:	85 ea       	ldi	r24, 0xA5	; 165
    4ce8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4cec:	18 c0       	rjmp	.+48     	; 0x4d1e <__vector_39+0x154>
    4cee:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    4cf2:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    4cf6:	84 e0       	ldi	r24, 0x04	; 4
    4cf8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4cfc:	80 91 5a 17 	lds	r24, 0x175A	; 0x80175a <_twiCurrentHandler>
    4d00:	90 91 5b 17 	lds	r25, 0x175B	; 0x80175b <_twiCurrentHandler+0x1>
    4d04:	dc 01       	movw	r26, r24
    4d06:	12 96       	adiw	r26, 0x02	; 2
    4d08:	ed 91       	ld	r30, X+
    4d0a:	fc 91       	ld	r31, X
    4d0c:	13 97       	sbiw	r26, 0x03	; 3
    4d0e:	30 97       	sbiw	r30, 0x00	; 0
    4d10:	31 f0       	breq	.+12     	; 0x4d1e <__vector_39+0x154>
    4d12:	20 e0       	ldi	r18, 0x00	; 0
    4d14:	40 e0       	ldi	r20, 0x00	; 0
    4d16:	50 e0       	ldi	r21, 0x00	; 0
    4d18:	60 91 21 02 	lds	r22, 0x0221	; 0x800221 <_twiCurrentState>
    4d1c:	19 95       	eicall
    4d1e:	ff 91       	pop	r31
    4d20:	ef 91       	pop	r30
    4d22:	bf 91       	pop	r27
    4d24:	af 91       	pop	r26
    4d26:	9f 91       	pop	r25
    4d28:	8f 91       	pop	r24
    4d2a:	7f 91       	pop	r23
    4d2c:	6f 91       	pop	r22
    4d2e:	5f 91       	pop	r21
    4d30:	4f 91       	pop	r20
    4d32:	3f 91       	pop	r19
    4d34:	2f 91       	pop	r18
    4d36:	0f 90       	pop	r0
    4d38:	0b be       	out	0x3b, r0	; 59
    4d3a:	0f 90       	pop	r0
    4d3c:	0f be       	out	0x3f, r0	; 63
    4d3e:	0f 90       	pop	r0
    4d40:	1f 90       	pop	r1
    4d42:	18 95       	reti

00004d44 <fifo_init>:
    4d44:	fc 01       	movw	r30, r24
    4d46:	41 11       	cpse	r20, r1
    4d48:	01 c0       	rjmp	.+2      	; 0x4d4c <fifo_init+0x8>
    4d4a:	52 d3       	rcall	.+1700   	; 0x53f0 <abort>
    4d4c:	84 2f       	mov	r24, r20
    4d4e:	90 e0       	ldi	r25, 0x00	; 0
    4d50:	9c 01       	movw	r18, r24
    4d52:	21 50       	subi	r18, 0x01	; 1
    4d54:	31 09       	sbc	r19, r1
    4d56:	82 23       	and	r24, r18
    4d58:	93 23       	and	r25, r19
    4d5a:	89 2b       	or	r24, r25
    4d5c:	09 f0       	breq	.+2      	; 0x4d60 <fifo_init+0x1c>
    4d5e:	48 d3       	rcall	.+1680   	; 0x53f0 <abort>
    4d60:	41 38       	cpi	r20, 0x81	; 129
    4d62:	08 f0       	brcs	.+2      	; 0x4d66 <fifo_init+0x22>
    4d64:	45 d3       	rcall	.+1674   	; 0x53f0 <abort>
    4d66:	12 82       	std	Z+2, r1	; 0x02
    4d68:	13 82       	std	Z+3, r1	; 0x03
    4d6a:	44 83       	std	Z+4, r20	; 0x04
    4d6c:	44 0f       	add	r20, r20
    4d6e:	41 50       	subi	r20, 0x01	; 1
    4d70:	45 83       	std	Z+5, r20	; 0x05
    4d72:	71 83       	std	Z+1, r23	; 0x01
    4d74:	60 83       	st	Z, r22
    4d76:	80 e0       	ldi	r24, 0x00	; 0
    4d78:	90 e0       	ldi	r25, 0x00	; 0
    4d7a:	08 95       	ret

00004d7c <__subsf3>:
    4d7c:	50 58       	subi	r21, 0x80	; 128

00004d7e <__addsf3>:
    4d7e:	bb 27       	eor	r27, r27
    4d80:	aa 27       	eor	r26, r26
    4d82:	0e d0       	rcall	.+28     	; 0x4da0 <__addsf3x>
    4d84:	4d c1       	rjmp	.+666    	; 0x5020 <__fp_round>
    4d86:	3e d1       	rcall	.+636    	; 0x5004 <__fp_pscA>
    4d88:	30 f0       	brcs	.+12     	; 0x4d96 <__addsf3+0x18>
    4d8a:	43 d1       	rcall	.+646    	; 0x5012 <__fp_pscB>
    4d8c:	20 f0       	brcs	.+8      	; 0x4d96 <__addsf3+0x18>
    4d8e:	31 f4       	brne	.+12     	; 0x4d9c <__addsf3+0x1e>
    4d90:	9f 3f       	cpi	r25, 0xFF	; 255
    4d92:	11 f4       	brne	.+4      	; 0x4d98 <__addsf3+0x1a>
    4d94:	1e f4       	brtc	.+6      	; 0x4d9c <__addsf3+0x1e>
    4d96:	33 c1       	rjmp	.+614    	; 0x4ffe <__fp_nan>
    4d98:	0e f4       	brtc	.+2      	; 0x4d9c <__addsf3+0x1e>
    4d9a:	e0 95       	com	r30
    4d9c:	e7 fb       	bst	r30, 7
    4d9e:	29 c1       	rjmp	.+594    	; 0x4ff2 <__fp_inf>

00004da0 <__addsf3x>:
    4da0:	e9 2f       	mov	r30, r25
    4da2:	4f d1       	rcall	.+670    	; 0x5042 <__fp_split3>
    4da4:	80 f3       	brcs	.-32     	; 0x4d86 <__addsf3+0x8>
    4da6:	ba 17       	cp	r27, r26
    4da8:	62 07       	cpc	r22, r18
    4daa:	73 07       	cpc	r23, r19
    4dac:	84 07       	cpc	r24, r20
    4dae:	95 07       	cpc	r25, r21
    4db0:	18 f0       	brcs	.+6      	; 0x4db8 <__addsf3x+0x18>
    4db2:	71 f4       	brne	.+28     	; 0x4dd0 <__addsf3x+0x30>
    4db4:	9e f5       	brtc	.+102    	; 0x4e1c <__addsf3x+0x7c>
    4db6:	67 c1       	rjmp	.+718    	; 0x5086 <__fp_zero>
    4db8:	0e f4       	brtc	.+2      	; 0x4dbc <__addsf3x+0x1c>
    4dba:	e0 95       	com	r30
    4dbc:	0b 2e       	mov	r0, r27
    4dbe:	ba 2f       	mov	r27, r26
    4dc0:	a0 2d       	mov	r26, r0
    4dc2:	0b 01       	movw	r0, r22
    4dc4:	b9 01       	movw	r22, r18
    4dc6:	90 01       	movw	r18, r0
    4dc8:	0c 01       	movw	r0, r24
    4dca:	ca 01       	movw	r24, r20
    4dcc:	a0 01       	movw	r20, r0
    4dce:	11 24       	eor	r1, r1
    4dd0:	ff 27       	eor	r31, r31
    4dd2:	59 1b       	sub	r21, r25
    4dd4:	99 f0       	breq	.+38     	; 0x4dfc <__addsf3x+0x5c>
    4dd6:	59 3f       	cpi	r21, 0xF9	; 249
    4dd8:	50 f4       	brcc	.+20     	; 0x4dee <__addsf3x+0x4e>
    4dda:	50 3e       	cpi	r21, 0xE0	; 224
    4ddc:	68 f1       	brcs	.+90     	; 0x4e38 <__addsf3x+0x98>
    4dde:	1a 16       	cp	r1, r26
    4de0:	f0 40       	sbci	r31, 0x00	; 0
    4de2:	a2 2f       	mov	r26, r18
    4de4:	23 2f       	mov	r18, r19
    4de6:	34 2f       	mov	r19, r20
    4de8:	44 27       	eor	r20, r20
    4dea:	58 5f       	subi	r21, 0xF8	; 248
    4dec:	f3 cf       	rjmp	.-26     	; 0x4dd4 <__addsf3x+0x34>
    4dee:	46 95       	lsr	r20
    4df0:	37 95       	ror	r19
    4df2:	27 95       	ror	r18
    4df4:	a7 95       	ror	r26
    4df6:	f0 40       	sbci	r31, 0x00	; 0
    4df8:	53 95       	inc	r21
    4dfa:	c9 f7       	brne	.-14     	; 0x4dee <__addsf3x+0x4e>
    4dfc:	7e f4       	brtc	.+30     	; 0x4e1c <__addsf3x+0x7c>
    4dfe:	1f 16       	cp	r1, r31
    4e00:	ba 0b       	sbc	r27, r26
    4e02:	62 0b       	sbc	r22, r18
    4e04:	73 0b       	sbc	r23, r19
    4e06:	84 0b       	sbc	r24, r20
    4e08:	ba f0       	brmi	.+46     	; 0x4e38 <__addsf3x+0x98>
    4e0a:	91 50       	subi	r25, 0x01	; 1
    4e0c:	a1 f0       	breq	.+40     	; 0x4e36 <__addsf3x+0x96>
    4e0e:	ff 0f       	add	r31, r31
    4e10:	bb 1f       	adc	r27, r27
    4e12:	66 1f       	adc	r22, r22
    4e14:	77 1f       	adc	r23, r23
    4e16:	88 1f       	adc	r24, r24
    4e18:	c2 f7       	brpl	.-16     	; 0x4e0a <__addsf3x+0x6a>
    4e1a:	0e c0       	rjmp	.+28     	; 0x4e38 <__addsf3x+0x98>
    4e1c:	ba 0f       	add	r27, r26
    4e1e:	62 1f       	adc	r22, r18
    4e20:	73 1f       	adc	r23, r19
    4e22:	84 1f       	adc	r24, r20
    4e24:	48 f4       	brcc	.+18     	; 0x4e38 <__addsf3x+0x98>
    4e26:	87 95       	ror	r24
    4e28:	77 95       	ror	r23
    4e2a:	67 95       	ror	r22
    4e2c:	b7 95       	ror	r27
    4e2e:	f7 95       	ror	r31
    4e30:	9e 3f       	cpi	r25, 0xFE	; 254
    4e32:	08 f0       	brcs	.+2      	; 0x4e36 <__addsf3x+0x96>
    4e34:	b3 cf       	rjmp	.-154    	; 0x4d9c <__addsf3+0x1e>
    4e36:	93 95       	inc	r25
    4e38:	88 0f       	add	r24, r24
    4e3a:	08 f0       	brcs	.+2      	; 0x4e3e <__addsf3x+0x9e>
    4e3c:	99 27       	eor	r25, r25
    4e3e:	ee 0f       	add	r30, r30
    4e40:	97 95       	ror	r25
    4e42:	87 95       	ror	r24
    4e44:	08 95       	ret

00004e46 <__divsf3>:
    4e46:	0c d0       	rcall	.+24     	; 0x4e60 <__divsf3x>
    4e48:	eb c0       	rjmp	.+470    	; 0x5020 <__fp_round>
    4e4a:	e3 d0       	rcall	.+454    	; 0x5012 <__fp_pscB>
    4e4c:	40 f0       	brcs	.+16     	; 0x4e5e <__divsf3+0x18>
    4e4e:	da d0       	rcall	.+436    	; 0x5004 <__fp_pscA>
    4e50:	30 f0       	brcs	.+12     	; 0x4e5e <__divsf3+0x18>
    4e52:	21 f4       	brne	.+8      	; 0x4e5c <__divsf3+0x16>
    4e54:	5f 3f       	cpi	r21, 0xFF	; 255
    4e56:	19 f0       	breq	.+6      	; 0x4e5e <__divsf3+0x18>
    4e58:	cc c0       	rjmp	.+408    	; 0x4ff2 <__fp_inf>
    4e5a:	51 11       	cpse	r21, r1
    4e5c:	15 c1       	rjmp	.+554    	; 0x5088 <__fp_szero>
    4e5e:	cf c0       	rjmp	.+414    	; 0x4ffe <__fp_nan>

00004e60 <__divsf3x>:
    4e60:	f0 d0       	rcall	.+480    	; 0x5042 <__fp_split3>
    4e62:	98 f3       	brcs	.-26     	; 0x4e4a <__divsf3+0x4>

00004e64 <__divsf3_pse>:
    4e64:	99 23       	and	r25, r25
    4e66:	c9 f3       	breq	.-14     	; 0x4e5a <__divsf3+0x14>
    4e68:	55 23       	and	r21, r21
    4e6a:	b1 f3       	breq	.-20     	; 0x4e58 <__divsf3+0x12>
    4e6c:	95 1b       	sub	r25, r21
    4e6e:	55 0b       	sbc	r21, r21
    4e70:	bb 27       	eor	r27, r27
    4e72:	aa 27       	eor	r26, r26
    4e74:	62 17       	cp	r22, r18
    4e76:	73 07       	cpc	r23, r19
    4e78:	84 07       	cpc	r24, r20
    4e7a:	38 f0       	brcs	.+14     	; 0x4e8a <__divsf3_pse+0x26>
    4e7c:	9f 5f       	subi	r25, 0xFF	; 255
    4e7e:	5f 4f       	sbci	r21, 0xFF	; 255
    4e80:	22 0f       	add	r18, r18
    4e82:	33 1f       	adc	r19, r19
    4e84:	44 1f       	adc	r20, r20
    4e86:	aa 1f       	adc	r26, r26
    4e88:	a9 f3       	breq	.-22     	; 0x4e74 <__divsf3_pse+0x10>
    4e8a:	33 d0       	rcall	.+102    	; 0x4ef2 <__divsf3_pse+0x8e>
    4e8c:	0e 2e       	mov	r0, r30
    4e8e:	3a f0       	brmi	.+14     	; 0x4e9e <__divsf3_pse+0x3a>
    4e90:	e0 e8       	ldi	r30, 0x80	; 128
    4e92:	30 d0       	rcall	.+96     	; 0x4ef4 <__divsf3_pse+0x90>
    4e94:	91 50       	subi	r25, 0x01	; 1
    4e96:	50 40       	sbci	r21, 0x00	; 0
    4e98:	e6 95       	lsr	r30
    4e9a:	00 1c       	adc	r0, r0
    4e9c:	ca f7       	brpl	.-14     	; 0x4e90 <__divsf3_pse+0x2c>
    4e9e:	29 d0       	rcall	.+82     	; 0x4ef2 <__divsf3_pse+0x8e>
    4ea0:	fe 2f       	mov	r31, r30
    4ea2:	27 d0       	rcall	.+78     	; 0x4ef2 <__divsf3_pse+0x8e>
    4ea4:	66 0f       	add	r22, r22
    4ea6:	77 1f       	adc	r23, r23
    4ea8:	88 1f       	adc	r24, r24
    4eaa:	bb 1f       	adc	r27, r27
    4eac:	26 17       	cp	r18, r22
    4eae:	37 07       	cpc	r19, r23
    4eb0:	48 07       	cpc	r20, r24
    4eb2:	ab 07       	cpc	r26, r27
    4eb4:	b0 e8       	ldi	r27, 0x80	; 128
    4eb6:	09 f0       	breq	.+2      	; 0x4eba <__divsf3_pse+0x56>
    4eb8:	bb 0b       	sbc	r27, r27
    4eba:	80 2d       	mov	r24, r0
    4ebc:	bf 01       	movw	r22, r30
    4ebe:	ff 27       	eor	r31, r31
    4ec0:	93 58       	subi	r25, 0x83	; 131
    4ec2:	5f 4f       	sbci	r21, 0xFF	; 255
    4ec4:	2a f0       	brmi	.+10     	; 0x4ed0 <__divsf3_pse+0x6c>
    4ec6:	9e 3f       	cpi	r25, 0xFE	; 254
    4ec8:	51 05       	cpc	r21, r1
    4eca:	68 f0       	brcs	.+26     	; 0x4ee6 <__divsf3_pse+0x82>
    4ecc:	92 c0       	rjmp	.+292    	; 0x4ff2 <__fp_inf>
    4ece:	dc c0       	rjmp	.+440    	; 0x5088 <__fp_szero>
    4ed0:	5f 3f       	cpi	r21, 0xFF	; 255
    4ed2:	ec f3       	brlt	.-6      	; 0x4ece <__divsf3_pse+0x6a>
    4ed4:	98 3e       	cpi	r25, 0xE8	; 232
    4ed6:	dc f3       	brlt	.-10     	; 0x4ece <__divsf3_pse+0x6a>
    4ed8:	86 95       	lsr	r24
    4eda:	77 95       	ror	r23
    4edc:	67 95       	ror	r22
    4ede:	b7 95       	ror	r27
    4ee0:	f7 95       	ror	r31
    4ee2:	9f 5f       	subi	r25, 0xFF	; 255
    4ee4:	c9 f7       	brne	.-14     	; 0x4ed8 <__divsf3_pse+0x74>
    4ee6:	88 0f       	add	r24, r24
    4ee8:	91 1d       	adc	r25, r1
    4eea:	96 95       	lsr	r25
    4eec:	87 95       	ror	r24
    4eee:	97 f9       	bld	r25, 7
    4ef0:	08 95       	ret
    4ef2:	e1 e0       	ldi	r30, 0x01	; 1
    4ef4:	66 0f       	add	r22, r22
    4ef6:	77 1f       	adc	r23, r23
    4ef8:	88 1f       	adc	r24, r24
    4efa:	bb 1f       	adc	r27, r27
    4efc:	62 17       	cp	r22, r18
    4efe:	73 07       	cpc	r23, r19
    4f00:	84 07       	cpc	r24, r20
    4f02:	ba 07       	cpc	r27, r26
    4f04:	20 f0       	brcs	.+8      	; 0x4f0e <__divsf3_pse+0xaa>
    4f06:	62 1b       	sub	r22, r18
    4f08:	73 0b       	sbc	r23, r19
    4f0a:	84 0b       	sbc	r24, r20
    4f0c:	ba 0b       	sbc	r27, r26
    4f0e:	ee 1f       	adc	r30, r30
    4f10:	88 f7       	brcc	.-30     	; 0x4ef4 <__divsf3_pse+0x90>
    4f12:	e0 95       	com	r30
    4f14:	08 95       	ret

00004f16 <__fixsfsi>:
    4f16:	04 d0       	rcall	.+8      	; 0x4f20 <__fixunssfsi>
    4f18:	68 94       	set
    4f1a:	b1 11       	cpse	r27, r1
    4f1c:	b5 c0       	rjmp	.+362    	; 0x5088 <__fp_szero>
    4f1e:	08 95       	ret

00004f20 <__fixunssfsi>:
    4f20:	98 d0       	rcall	.+304    	; 0x5052 <__fp_splitA>
    4f22:	88 f0       	brcs	.+34     	; 0x4f46 <__fixunssfsi+0x26>
    4f24:	9f 57       	subi	r25, 0x7F	; 127
    4f26:	90 f0       	brcs	.+36     	; 0x4f4c <__fixunssfsi+0x2c>
    4f28:	b9 2f       	mov	r27, r25
    4f2a:	99 27       	eor	r25, r25
    4f2c:	b7 51       	subi	r27, 0x17	; 23
    4f2e:	a0 f0       	brcs	.+40     	; 0x4f58 <__fixunssfsi+0x38>
    4f30:	d1 f0       	breq	.+52     	; 0x4f66 <__fixunssfsi+0x46>
    4f32:	66 0f       	add	r22, r22
    4f34:	77 1f       	adc	r23, r23
    4f36:	88 1f       	adc	r24, r24
    4f38:	99 1f       	adc	r25, r25
    4f3a:	1a f0       	brmi	.+6      	; 0x4f42 <__fixunssfsi+0x22>
    4f3c:	ba 95       	dec	r27
    4f3e:	c9 f7       	brne	.-14     	; 0x4f32 <__fixunssfsi+0x12>
    4f40:	12 c0       	rjmp	.+36     	; 0x4f66 <__fixunssfsi+0x46>
    4f42:	b1 30       	cpi	r27, 0x01	; 1
    4f44:	81 f0       	breq	.+32     	; 0x4f66 <__fixunssfsi+0x46>
    4f46:	9f d0       	rcall	.+318    	; 0x5086 <__fp_zero>
    4f48:	b1 e0       	ldi	r27, 0x01	; 1
    4f4a:	08 95       	ret
    4f4c:	9c c0       	rjmp	.+312    	; 0x5086 <__fp_zero>
    4f4e:	67 2f       	mov	r22, r23
    4f50:	78 2f       	mov	r23, r24
    4f52:	88 27       	eor	r24, r24
    4f54:	b8 5f       	subi	r27, 0xF8	; 248
    4f56:	39 f0       	breq	.+14     	; 0x4f66 <__fixunssfsi+0x46>
    4f58:	b9 3f       	cpi	r27, 0xF9	; 249
    4f5a:	cc f3       	brlt	.-14     	; 0x4f4e <__fixunssfsi+0x2e>
    4f5c:	86 95       	lsr	r24
    4f5e:	77 95       	ror	r23
    4f60:	67 95       	ror	r22
    4f62:	b3 95       	inc	r27
    4f64:	d9 f7       	brne	.-10     	; 0x4f5c <__fixunssfsi+0x3c>
    4f66:	3e f4       	brtc	.+14     	; 0x4f76 <__fixunssfsi+0x56>
    4f68:	90 95       	com	r25
    4f6a:	80 95       	com	r24
    4f6c:	70 95       	com	r23
    4f6e:	61 95       	neg	r22
    4f70:	7f 4f       	sbci	r23, 0xFF	; 255
    4f72:	8f 4f       	sbci	r24, 0xFF	; 255
    4f74:	9f 4f       	sbci	r25, 0xFF	; 255
    4f76:	08 95       	ret

00004f78 <__floatunsisf>:
    4f78:	e8 94       	clt
    4f7a:	09 c0       	rjmp	.+18     	; 0x4f8e <__floatsisf+0x12>

00004f7c <__floatsisf>:
    4f7c:	97 fb       	bst	r25, 7
    4f7e:	3e f4       	brtc	.+14     	; 0x4f8e <__floatsisf+0x12>
    4f80:	90 95       	com	r25
    4f82:	80 95       	com	r24
    4f84:	70 95       	com	r23
    4f86:	61 95       	neg	r22
    4f88:	7f 4f       	sbci	r23, 0xFF	; 255
    4f8a:	8f 4f       	sbci	r24, 0xFF	; 255
    4f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    4f8e:	99 23       	and	r25, r25
    4f90:	a9 f0       	breq	.+42     	; 0x4fbc <__floatsisf+0x40>
    4f92:	f9 2f       	mov	r31, r25
    4f94:	96 e9       	ldi	r25, 0x96	; 150
    4f96:	bb 27       	eor	r27, r27
    4f98:	93 95       	inc	r25
    4f9a:	f6 95       	lsr	r31
    4f9c:	87 95       	ror	r24
    4f9e:	77 95       	ror	r23
    4fa0:	67 95       	ror	r22
    4fa2:	b7 95       	ror	r27
    4fa4:	f1 11       	cpse	r31, r1
    4fa6:	f8 cf       	rjmp	.-16     	; 0x4f98 <__floatsisf+0x1c>
    4fa8:	fa f4       	brpl	.+62     	; 0x4fe8 <__floatsisf+0x6c>
    4faa:	bb 0f       	add	r27, r27
    4fac:	11 f4       	brne	.+4      	; 0x4fb2 <__floatsisf+0x36>
    4fae:	60 ff       	sbrs	r22, 0
    4fb0:	1b c0       	rjmp	.+54     	; 0x4fe8 <__floatsisf+0x6c>
    4fb2:	6f 5f       	subi	r22, 0xFF	; 255
    4fb4:	7f 4f       	sbci	r23, 0xFF	; 255
    4fb6:	8f 4f       	sbci	r24, 0xFF	; 255
    4fb8:	9f 4f       	sbci	r25, 0xFF	; 255
    4fba:	16 c0       	rjmp	.+44     	; 0x4fe8 <__floatsisf+0x6c>
    4fbc:	88 23       	and	r24, r24
    4fbe:	11 f0       	breq	.+4      	; 0x4fc4 <__floatsisf+0x48>
    4fc0:	96 e9       	ldi	r25, 0x96	; 150
    4fc2:	11 c0       	rjmp	.+34     	; 0x4fe6 <__floatsisf+0x6a>
    4fc4:	77 23       	and	r23, r23
    4fc6:	21 f0       	breq	.+8      	; 0x4fd0 <__floatsisf+0x54>
    4fc8:	9e e8       	ldi	r25, 0x8E	; 142
    4fca:	87 2f       	mov	r24, r23
    4fcc:	76 2f       	mov	r23, r22
    4fce:	05 c0       	rjmp	.+10     	; 0x4fda <__floatsisf+0x5e>
    4fd0:	66 23       	and	r22, r22
    4fd2:	71 f0       	breq	.+28     	; 0x4ff0 <__floatsisf+0x74>
    4fd4:	96 e8       	ldi	r25, 0x86	; 134
    4fd6:	86 2f       	mov	r24, r22
    4fd8:	70 e0       	ldi	r23, 0x00	; 0
    4fda:	60 e0       	ldi	r22, 0x00	; 0
    4fdc:	2a f0       	brmi	.+10     	; 0x4fe8 <__floatsisf+0x6c>
    4fde:	9a 95       	dec	r25
    4fe0:	66 0f       	add	r22, r22
    4fe2:	77 1f       	adc	r23, r23
    4fe4:	88 1f       	adc	r24, r24
    4fe6:	da f7       	brpl	.-10     	; 0x4fde <__floatsisf+0x62>
    4fe8:	88 0f       	add	r24, r24
    4fea:	96 95       	lsr	r25
    4fec:	87 95       	ror	r24
    4fee:	97 f9       	bld	r25, 7
    4ff0:	08 95       	ret

00004ff2 <__fp_inf>:
    4ff2:	97 f9       	bld	r25, 7
    4ff4:	9f 67       	ori	r25, 0x7F	; 127
    4ff6:	80 e8       	ldi	r24, 0x80	; 128
    4ff8:	70 e0       	ldi	r23, 0x00	; 0
    4ffa:	60 e0       	ldi	r22, 0x00	; 0
    4ffc:	08 95       	ret

00004ffe <__fp_nan>:
    4ffe:	9f ef       	ldi	r25, 0xFF	; 255
    5000:	80 ec       	ldi	r24, 0xC0	; 192
    5002:	08 95       	ret

00005004 <__fp_pscA>:
    5004:	00 24       	eor	r0, r0
    5006:	0a 94       	dec	r0
    5008:	16 16       	cp	r1, r22
    500a:	17 06       	cpc	r1, r23
    500c:	18 06       	cpc	r1, r24
    500e:	09 06       	cpc	r0, r25
    5010:	08 95       	ret

00005012 <__fp_pscB>:
    5012:	00 24       	eor	r0, r0
    5014:	0a 94       	dec	r0
    5016:	12 16       	cp	r1, r18
    5018:	13 06       	cpc	r1, r19
    501a:	14 06       	cpc	r1, r20
    501c:	05 06       	cpc	r0, r21
    501e:	08 95       	ret

00005020 <__fp_round>:
    5020:	09 2e       	mov	r0, r25
    5022:	03 94       	inc	r0
    5024:	00 0c       	add	r0, r0
    5026:	11 f4       	brne	.+4      	; 0x502c <__fp_round+0xc>
    5028:	88 23       	and	r24, r24
    502a:	52 f0       	brmi	.+20     	; 0x5040 <__fp_round+0x20>
    502c:	bb 0f       	add	r27, r27
    502e:	40 f4       	brcc	.+16     	; 0x5040 <__fp_round+0x20>
    5030:	bf 2b       	or	r27, r31
    5032:	11 f4       	brne	.+4      	; 0x5038 <__fp_round+0x18>
    5034:	60 ff       	sbrs	r22, 0
    5036:	04 c0       	rjmp	.+8      	; 0x5040 <__fp_round+0x20>
    5038:	6f 5f       	subi	r22, 0xFF	; 255
    503a:	7f 4f       	sbci	r23, 0xFF	; 255
    503c:	8f 4f       	sbci	r24, 0xFF	; 255
    503e:	9f 4f       	sbci	r25, 0xFF	; 255
    5040:	08 95       	ret

00005042 <__fp_split3>:
    5042:	57 fd       	sbrc	r21, 7
    5044:	90 58       	subi	r25, 0x80	; 128
    5046:	44 0f       	add	r20, r20
    5048:	55 1f       	adc	r21, r21
    504a:	59 f0       	breq	.+22     	; 0x5062 <__fp_splitA+0x10>
    504c:	5f 3f       	cpi	r21, 0xFF	; 255
    504e:	71 f0       	breq	.+28     	; 0x506c <__fp_splitA+0x1a>
    5050:	47 95       	ror	r20

00005052 <__fp_splitA>:
    5052:	88 0f       	add	r24, r24
    5054:	97 fb       	bst	r25, 7
    5056:	99 1f       	adc	r25, r25
    5058:	61 f0       	breq	.+24     	; 0x5072 <__fp_splitA+0x20>
    505a:	9f 3f       	cpi	r25, 0xFF	; 255
    505c:	79 f0       	breq	.+30     	; 0x507c <__fp_splitA+0x2a>
    505e:	87 95       	ror	r24
    5060:	08 95       	ret
    5062:	12 16       	cp	r1, r18
    5064:	13 06       	cpc	r1, r19
    5066:	14 06       	cpc	r1, r20
    5068:	55 1f       	adc	r21, r21
    506a:	f2 cf       	rjmp	.-28     	; 0x5050 <__fp_split3+0xe>
    506c:	46 95       	lsr	r20
    506e:	f1 df       	rcall	.-30     	; 0x5052 <__fp_splitA>
    5070:	08 c0       	rjmp	.+16     	; 0x5082 <__fp_splitA+0x30>
    5072:	16 16       	cp	r1, r22
    5074:	17 06       	cpc	r1, r23
    5076:	18 06       	cpc	r1, r24
    5078:	99 1f       	adc	r25, r25
    507a:	f1 cf       	rjmp	.-30     	; 0x505e <__fp_splitA+0xc>
    507c:	86 95       	lsr	r24
    507e:	71 05       	cpc	r23, r1
    5080:	61 05       	cpc	r22, r1
    5082:	08 94       	sec
    5084:	08 95       	ret

00005086 <__fp_zero>:
    5086:	e8 94       	clt

00005088 <__fp_szero>:
    5088:	bb 27       	eor	r27, r27
    508a:	66 27       	eor	r22, r22
    508c:	77 27       	eor	r23, r23
    508e:	cb 01       	movw	r24, r22
    5090:	97 f9       	bld	r25, 7
    5092:	08 95       	ret

00005094 <__mulsf3>:
    5094:	0b d0       	rcall	.+22     	; 0x50ac <__mulsf3x>
    5096:	c4 cf       	rjmp	.-120    	; 0x5020 <__fp_round>
    5098:	b5 df       	rcall	.-150    	; 0x5004 <__fp_pscA>
    509a:	28 f0       	brcs	.+10     	; 0x50a6 <__mulsf3+0x12>
    509c:	ba df       	rcall	.-140    	; 0x5012 <__fp_pscB>
    509e:	18 f0       	brcs	.+6      	; 0x50a6 <__mulsf3+0x12>
    50a0:	95 23       	and	r25, r21
    50a2:	09 f0       	breq	.+2      	; 0x50a6 <__mulsf3+0x12>
    50a4:	a6 cf       	rjmp	.-180    	; 0x4ff2 <__fp_inf>
    50a6:	ab cf       	rjmp	.-170    	; 0x4ffe <__fp_nan>
    50a8:	11 24       	eor	r1, r1
    50aa:	ee cf       	rjmp	.-36     	; 0x5088 <__fp_szero>

000050ac <__mulsf3x>:
    50ac:	ca df       	rcall	.-108    	; 0x5042 <__fp_split3>
    50ae:	a0 f3       	brcs	.-24     	; 0x5098 <__mulsf3+0x4>

000050b0 <__mulsf3_pse>:
    50b0:	95 9f       	mul	r25, r21
    50b2:	d1 f3       	breq	.-12     	; 0x50a8 <__mulsf3+0x14>
    50b4:	95 0f       	add	r25, r21
    50b6:	50 e0       	ldi	r21, 0x00	; 0
    50b8:	55 1f       	adc	r21, r21
    50ba:	62 9f       	mul	r22, r18
    50bc:	f0 01       	movw	r30, r0
    50be:	72 9f       	mul	r23, r18
    50c0:	bb 27       	eor	r27, r27
    50c2:	f0 0d       	add	r31, r0
    50c4:	b1 1d       	adc	r27, r1
    50c6:	63 9f       	mul	r22, r19
    50c8:	aa 27       	eor	r26, r26
    50ca:	f0 0d       	add	r31, r0
    50cc:	b1 1d       	adc	r27, r1
    50ce:	aa 1f       	adc	r26, r26
    50d0:	64 9f       	mul	r22, r20
    50d2:	66 27       	eor	r22, r22
    50d4:	b0 0d       	add	r27, r0
    50d6:	a1 1d       	adc	r26, r1
    50d8:	66 1f       	adc	r22, r22
    50da:	82 9f       	mul	r24, r18
    50dc:	22 27       	eor	r18, r18
    50de:	b0 0d       	add	r27, r0
    50e0:	a1 1d       	adc	r26, r1
    50e2:	62 1f       	adc	r22, r18
    50e4:	73 9f       	mul	r23, r19
    50e6:	b0 0d       	add	r27, r0
    50e8:	a1 1d       	adc	r26, r1
    50ea:	62 1f       	adc	r22, r18
    50ec:	83 9f       	mul	r24, r19
    50ee:	a0 0d       	add	r26, r0
    50f0:	61 1d       	adc	r22, r1
    50f2:	22 1f       	adc	r18, r18
    50f4:	74 9f       	mul	r23, r20
    50f6:	33 27       	eor	r19, r19
    50f8:	a0 0d       	add	r26, r0
    50fa:	61 1d       	adc	r22, r1
    50fc:	23 1f       	adc	r18, r19
    50fe:	84 9f       	mul	r24, r20
    5100:	60 0d       	add	r22, r0
    5102:	21 1d       	adc	r18, r1
    5104:	82 2f       	mov	r24, r18
    5106:	76 2f       	mov	r23, r22
    5108:	6a 2f       	mov	r22, r26
    510a:	11 24       	eor	r1, r1
    510c:	9f 57       	subi	r25, 0x7F	; 127
    510e:	50 40       	sbci	r21, 0x00	; 0
    5110:	8a f0       	brmi	.+34     	; 0x5134 <__mulsf3_pse+0x84>
    5112:	e1 f0       	breq	.+56     	; 0x514c <__mulsf3_pse+0x9c>
    5114:	88 23       	and	r24, r24
    5116:	4a f0       	brmi	.+18     	; 0x512a <__mulsf3_pse+0x7a>
    5118:	ee 0f       	add	r30, r30
    511a:	ff 1f       	adc	r31, r31
    511c:	bb 1f       	adc	r27, r27
    511e:	66 1f       	adc	r22, r22
    5120:	77 1f       	adc	r23, r23
    5122:	88 1f       	adc	r24, r24
    5124:	91 50       	subi	r25, 0x01	; 1
    5126:	50 40       	sbci	r21, 0x00	; 0
    5128:	a9 f7       	brne	.-22     	; 0x5114 <__mulsf3_pse+0x64>
    512a:	9e 3f       	cpi	r25, 0xFE	; 254
    512c:	51 05       	cpc	r21, r1
    512e:	70 f0       	brcs	.+28     	; 0x514c <__mulsf3_pse+0x9c>
    5130:	60 cf       	rjmp	.-320    	; 0x4ff2 <__fp_inf>
    5132:	aa cf       	rjmp	.-172    	; 0x5088 <__fp_szero>
    5134:	5f 3f       	cpi	r21, 0xFF	; 255
    5136:	ec f3       	brlt	.-6      	; 0x5132 <__mulsf3_pse+0x82>
    5138:	98 3e       	cpi	r25, 0xE8	; 232
    513a:	dc f3       	brlt	.-10     	; 0x5132 <__mulsf3_pse+0x82>
    513c:	86 95       	lsr	r24
    513e:	77 95       	ror	r23
    5140:	67 95       	ror	r22
    5142:	b7 95       	ror	r27
    5144:	f7 95       	ror	r31
    5146:	e7 95       	ror	r30
    5148:	9f 5f       	subi	r25, 0xFF	; 255
    514a:	c1 f7       	brne	.-16     	; 0x513c <__mulsf3_pse+0x8c>
    514c:	fe 2b       	or	r31, r30
    514e:	88 0f       	add	r24, r24
    5150:	91 1d       	adc	r25, r1
    5152:	96 95       	lsr	r25
    5154:	87 95       	ror	r24
    5156:	97 f9       	bld	r25, 7
    5158:	08 95       	ret

0000515a <__udivmodsi4>:
    515a:	a1 e2       	ldi	r26, 0x21	; 33
    515c:	1a 2e       	mov	r1, r26
    515e:	aa 1b       	sub	r26, r26
    5160:	bb 1b       	sub	r27, r27
    5162:	fd 01       	movw	r30, r26
    5164:	0d c0       	rjmp	.+26     	; 0x5180 <__udivmodsi4_ep>

00005166 <__udivmodsi4_loop>:
    5166:	aa 1f       	adc	r26, r26
    5168:	bb 1f       	adc	r27, r27
    516a:	ee 1f       	adc	r30, r30
    516c:	ff 1f       	adc	r31, r31
    516e:	a2 17       	cp	r26, r18
    5170:	b3 07       	cpc	r27, r19
    5172:	e4 07       	cpc	r30, r20
    5174:	f5 07       	cpc	r31, r21
    5176:	20 f0       	brcs	.+8      	; 0x5180 <__udivmodsi4_ep>
    5178:	a2 1b       	sub	r26, r18
    517a:	b3 0b       	sbc	r27, r19
    517c:	e4 0b       	sbc	r30, r20
    517e:	f5 0b       	sbc	r31, r21

00005180 <__udivmodsi4_ep>:
    5180:	66 1f       	adc	r22, r22
    5182:	77 1f       	adc	r23, r23
    5184:	88 1f       	adc	r24, r24
    5186:	99 1f       	adc	r25, r25
    5188:	1a 94       	dec	r1
    518a:	69 f7       	brne	.-38     	; 0x5166 <__udivmodsi4_loop>
    518c:	60 95       	com	r22
    518e:	70 95       	com	r23
    5190:	80 95       	com	r24
    5192:	90 95       	com	r25
    5194:	9b 01       	movw	r18, r22
    5196:	ac 01       	movw	r20, r24
    5198:	bd 01       	movw	r22, r26
    519a:	cf 01       	movw	r24, r30
    519c:	08 95       	ret

0000519e <__tablejump2__>:
    519e:	ee 0f       	add	r30, r30
    51a0:	ff 1f       	adc	r31, r31
    51a2:	88 1f       	adc	r24, r24
    51a4:	8b bf       	out	0x3b, r24	; 59
    51a6:	07 90       	elpm	r0, Z+
    51a8:	f6 91       	elpm	r31, Z
    51aa:	e0 2d       	mov	r30, r0
    51ac:	19 94       	eijmp

000051ae <malloc>:
    51ae:	0f 93       	push	r16
    51b0:	1f 93       	push	r17
    51b2:	cf 93       	push	r28
    51b4:	df 93       	push	r29
    51b6:	82 30       	cpi	r24, 0x02	; 2
    51b8:	91 05       	cpc	r25, r1
    51ba:	10 f4       	brcc	.+4      	; 0x51c0 <malloc+0x12>
    51bc:	82 e0       	ldi	r24, 0x02	; 2
    51be:	90 e0       	ldi	r25, 0x00	; 0
    51c0:	e0 91 88 17 	lds	r30, 0x1788	; 0x801788 <__flp>
    51c4:	f0 91 89 17 	lds	r31, 0x1789	; 0x801789 <__flp+0x1>
    51c8:	20 e0       	ldi	r18, 0x00	; 0
    51ca:	30 e0       	ldi	r19, 0x00	; 0
    51cc:	a0 e0       	ldi	r26, 0x00	; 0
    51ce:	b0 e0       	ldi	r27, 0x00	; 0
    51d0:	30 97       	sbiw	r30, 0x00	; 0
    51d2:	19 f1       	breq	.+70     	; 0x521a <malloc+0x6c>
    51d4:	40 81       	ld	r20, Z
    51d6:	51 81       	ldd	r21, Z+1	; 0x01
    51d8:	02 81       	ldd	r16, Z+2	; 0x02
    51da:	13 81       	ldd	r17, Z+3	; 0x03
    51dc:	48 17       	cp	r20, r24
    51de:	59 07       	cpc	r21, r25
    51e0:	c8 f0       	brcs	.+50     	; 0x5214 <malloc+0x66>
    51e2:	84 17       	cp	r24, r20
    51e4:	95 07       	cpc	r25, r21
    51e6:	69 f4       	brne	.+26     	; 0x5202 <malloc+0x54>
    51e8:	10 97       	sbiw	r26, 0x00	; 0
    51ea:	31 f0       	breq	.+12     	; 0x51f8 <malloc+0x4a>
    51ec:	12 96       	adiw	r26, 0x02	; 2
    51ee:	0c 93       	st	X, r16
    51f0:	12 97       	sbiw	r26, 0x02	; 2
    51f2:	13 96       	adiw	r26, 0x03	; 3
    51f4:	1c 93       	st	X, r17
    51f6:	27 c0       	rjmp	.+78     	; 0x5246 <malloc+0x98>
    51f8:	00 93 88 17 	sts	0x1788, r16	; 0x801788 <__flp>
    51fc:	10 93 89 17 	sts	0x1789, r17	; 0x801789 <__flp+0x1>
    5200:	22 c0       	rjmp	.+68     	; 0x5246 <malloc+0x98>
    5202:	21 15       	cp	r18, r1
    5204:	31 05       	cpc	r19, r1
    5206:	19 f0       	breq	.+6      	; 0x520e <malloc+0x60>
    5208:	42 17       	cp	r20, r18
    520a:	53 07       	cpc	r21, r19
    520c:	18 f4       	brcc	.+6      	; 0x5214 <malloc+0x66>
    520e:	9a 01       	movw	r18, r20
    5210:	bd 01       	movw	r22, r26
    5212:	ef 01       	movw	r28, r30
    5214:	df 01       	movw	r26, r30
    5216:	f8 01       	movw	r30, r16
    5218:	db cf       	rjmp	.-74     	; 0x51d0 <malloc+0x22>
    521a:	21 15       	cp	r18, r1
    521c:	31 05       	cpc	r19, r1
    521e:	f9 f0       	breq	.+62     	; 0x525e <malloc+0xb0>
    5220:	28 1b       	sub	r18, r24
    5222:	39 0b       	sbc	r19, r25
    5224:	24 30       	cpi	r18, 0x04	; 4
    5226:	31 05       	cpc	r19, r1
    5228:	80 f4       	brcc	.+32     	; 0x524a <malloc+0x9c>
    522a:	8a 81       	ldd	r24, Y+2	; 0x02
    522c:	9b 81       	ldd	r25, Y+3	; 0x03
    522e:	61 15       	cp	r22, r1
    5230:	71 05       	cpc	r23, r1
    5232:	21 f0       	breq	.+8      	; 0x523c <malloc+0x8e>
    5234:	fb 01       	movw	r30, r22
    5236:	93 83       	std	Z+3, r25	; 0x03
    5238:	82 83       	std	Z+2, r24	; 0x02
    523a:	04 c0       	rjmp	.+8      	; 0x5244 <malloc+0x96>
    523c:	90 93 89 17 	sts	0x1789, r25	; 0x801789 <__flp+0x1>
    5240:	80 93 88 17 	sts	0x1788, r24	; 0x801788 <__flp>
    5244:	fe 01       	movw	r30, r28
    5246:	32 96       	adiw	r30, 0x02	; 2
    5248:	44 c0       	rjmp	.+136    	; 0x52d2 <malloc+0x124>
    524a:	fe 01       	movw	r30, r28
    524c:	e2 0f       	add	r30, r18
    524e:	f3 1f       	adc	r31, r19
    5250:	81 93       	st	Z+, r24
    5252:	91 93       	st	Z+, r25
    5254:	22 50       	subi	r18, 0x02	; 2
    5256:	31 09       	sbc	r19, r1
    5258:	39 83       	std	Y+1, r19	; 0x01
    525a:	28 83       	st	Y, r18
    525c:	3a c0       	rjmp	.+116    	; 0x52d2 <malloc+0x124>
    525e:	20 91 86 17 	lds	r18, 0x1786	; 0x801786 <__brkval>
    5262:	30 91 87 17 	lds	r19, 0x1787	; 0x801787 <__brkval+0x1>
    5266:	23 2b       	or	r18, r19
    5268:	41 f4       	brne	.+16     	; 0x527a <malloc+0xcc>
    526a:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    526e:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    5272:	30 93 87 17 	sts	0x1787, r19	; 0x801787 <__brkval+0x1>
    5276:	20 93 86 17 	sts	0x1786, r18	; 0x801786 <__brkval>
    527a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    527e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    5282:	21 15       	cp	r18, r1
    5284:	31 05       	cpc	r19, r1
    5286:	41 f4       	brne	.+16     	; 0x5298 <malloc+0xea>
    5288:	2d b7       	in	r18, 0x3d	; 61
    528a:	3e b7       	in	r19, 0x3e	; 62
    528c:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    5290:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    5294:	24 1b       	sub	r18, r20
    5296:	35 0b       	sbc	r19, r21
    5298:	e0 91 86 17 	lds	r30, 0x1786	; 0x801786 <__brkval>
    529c:	f0 91 87 17 	lds	r31, 0x1787	; 0x801787 <__brkval+0x1>
    52a0:	e2 17       	cp	r30, r18
    52a2:	f3 07       	cpc	r31, r19
    52a4:	a0 f4       	brcc	.+40     	; 0x52ce <malloc+0x120>
    52a6:	2e 1b       	sub	r18, r30
    52a8:	3f 0b       	sbc	r19, r31
    52aa:	28 17       	cp	r18, r24
    52ac:	39 07       	cpc	r19, r25
    52ae:	78 f0       	brcs	.+30     	; 0x52ce <malloc+0x120>
    52b0:	ac 01       	movw	r20, r24
    52b2:	4e 5f       	subi	r20, 0xFE	; 254
    52b4:	5f 4f       	sbci	r21, 0xFF	; 255
    52b6:	24 17       	cp	r18, r20
    52b8:	35 07       	cpc	r19, r21
    52ba:	48 f0       	brcs	.+18     	; 0x52ce <malloc+0x120>
    52bc:	4e 0f       	add	r20, r30
    52be:	5f 1f       	adc	r21, r31
    52c0:	50 93 87 17 	sts	0x1787, r21	; 0x801787 <__brkval+0x1>
    52c4:	40 93 86 17 	sts	0x1786, r20	; 0x801786 <__brkval>
    52c8:	81 93       	st	Z+, r24
    52ca:	91 93       	st	Z+, r25
    52cc:	02 c0       	rjmp	.+4      	; 0x52d2 <malloc+0x124>
    52ce:	e0 e0       	ldi	r30, 0x00	; 0
    52d0:	f0 e0       	ldi	r31, 0x00	; 0
    52d2:	cf 01       	movw	r24, r30
    52d4:	df 91       	pop	r29
    52d6:	cf 91       	pop	r28
    52d8:	1f 91       	pop	r17
    52da:	0f 91       	pop	r16
    52dc:	08 95       	ret

000052de <free>:
    52de:	cf 93       	push	r28
    52e0:	df 93       	push	r29
    52e2:	00 97       	sbiw	r24, 0x00	; 0
    52e4:	09 f4       	brne	.+2      	; 0x52e8 <free+0xa>
    52e6:	81 c0       	rjmp	.+258    	; 0x53ea <free+0x10c>
    52e8:	fc 01       	movw	r30, r24
    52ea:	32 97       	sbiw	r30, 0x02	; 2
    52ec:	13 82       	std	Z+3, r1	; 0x03
    52ee:	12 82       	std	Z+2, r1	; 0x02
    52f0:	a0 91 88 17 	lds	r26, 0x1788	; 0x801788 <__flp>
    52f4:	b0 91 89 17 	lds	r27, 0x1789	; 0x801789 <__flp+0x1>
    52f8:	10 97       	sbiw	r26, 0x00	; 0
    52fa:	81 f4       	brne	.+32     	; 0x531c <free+0x3e>
    52fc:	20 81       	ld	r18, Z
    52fe:	31 81       	ldd	r19, Z+1	; 0x01
    5300:	82 0f       	add	r24, r18
    5302:	93 1f       	adc	r25, r19
    5304:	20 91 86 17 	lds	r18, 0x1786	; 0x801786 <__brkval>
    5308:	30 91 87 17 	lds	r19, 0x1787	; 0x801787 <__brkval+0x1>
    530c:	28 17       	cp	r18, r24
    530e:	39 07       	cpc	r19, r25
    5310:	51 f5       	brne	.+84     	; 0x5366 <free+0x88>
    5312:	f0 93 87 17 	sts	0x1787, r31	; 0x801787 <__brkval+0x1>
    5316:	e0 93 86 17 	sts	0x1786, r30	; 0x801786 <__brkval>
    531a:	67 c0       	rjmp	.+206    	; 0x53ea <free+0x10c>
    531c:	ed 01       	movw	r28, r26
    531e:	20 e0       	ldi	r18, 0x00	; 0
    5320:	30 e0       	ldi	r19, 0x00	; 0
    5322:	ce 17       	cp	r28, r30
    5324:	df 07       	cpc	r29, r31
    5326:	40 f4       	brcc	.+16     	; 0x5338 <free+0x5a>
    5328:	4a 81       	ldd	r20, Y+2	; 0x02
    532a:	5b 81       	ldd	r21, Y+3	; 0x03
    532c:	9e 01       	movw	r18, r28
    532e:	41 15       	cp	r20, r1
    5330:	51 05       	cpc	r21, r1
    5332:	f1 f0       	breq	.+60     	; 0x5370 <free+0x92>
    5334:	ea 01       	movw	r28, r20
    5336:	f5 cf       	rjmp	.-22     	; 0x5322 <free+0x44>
    5338:	d3 83       	std	Z+3, r29	; 0x03
    533a:	c2 83       	std	Z+2, r28	; 0x02
    533c:	40 81       	ld	r20, Z
    533e:	51 81       	ldd	r21, Z+1	; 0x01
    5340:	84 0f       	add	r24, r20
    5342:	95 1f       	adc	r25, r21
    5344:	c8 17       	cp	r28, r24
    5346:	d9 07       	cpc	r29, r25
    5348:	59 f4       	brne	.+22     	; 0x5360 <free+0x82>
    534a:	88 81       	ld	r24, Y
    534c:	99 81       	ldd	r25, Y+1	; 0x01
    534e:	84 0f       	add	r24, r20
    5350:	95 1f       	adc	r25, r21
    5352:	02 96       	adiw	r24, 0x02	; 2
    5354:	91 83       	std	Z+1, r25	; 0x01
    5356:	80 83       	st	Z, r24
    5358:	8a 81       	ldd	r24, Y+2	; 0x02
    535a:	9b 81       	ldd	r25, Y+3	; 0x03
    535c:	93 83       	std	Z+3, r25	; 0x03
    535e:	82 83       	std	Z+2, r24	; 0x02
    5360:	21 15       	cp	r18, r1
    5362:	31 05       	cpc	r19, r1
    5364:	29 f4       	brne	.+10     	; 0x5370 <free+0x92>
    5366:	f0 93 89 17 	sts	0x1789, r31	; 0x801789 <__flp+0x1>
    536a:	e0 93 88 17 	sts	0x1788, r30	; 0x801788 <__flp>
    536e:	3d c0       	rjmp	.+122    	; 0x53ea <free+0x10c>
    5370:	e9 01       	movw	r28, r18
    5372:	fb 83       	std	Y+3, r31	; 0x03
    5374:	ea 83       	std	Y+2, r30	; 0x02
    5376:	49 91       	ld	r20, Y+
    5378:	59 91       	ld	r21, Y+
    537a:	c4 0f       	add	r28, r20
    537c:	d5 1f       	adc	r29, r21
    537e:	ec 17       	cp	r30, r28
    5380:	fd 07       	cpc	r31, r29
    5382:	61 f4       	brne	.+24     	; 0x539c <free+0xbe>
    5384:	80 81       	ld	r24, Z
    5386:	91 81       	ldd	r25, Z+1	; 0x01
    5388:	84 0f       	add	r24, r20
    538a:	95 1f       	adc	r25, r21
    538c:	02 96       	adiw	r24, 0x02	; 2
    538e:	e9 01       	movw	r28, r18
    5390:	99 83       	std	Y+1, r25	; 0x01
    5392:	88 83       	st	Y, r24
    5394:	82 81       	ldd	r24, Z+2	; 0x02
    5396:	93 81       	ldd	r25, Z+3	; 0x03
    5398:	9b 83       	std	Y+3, r25	; 0x03
    539a:	8a 83       	std	Y+2, r24	; 0x02
    539c:	e0 e0       	ldi	r30, 0x00	; 0
    539e:	f0 e0       	ldi	r31, 0x00	; 0
    53a0:	12 96       	adiw	r26, 0x02	; 2
    53a2:	8d 91       	ld	r24, X+
    53a4:	9c 91       	ld	r25, X
    53a6:	13 97       	sbiw	r26, 0x03	; 3
    53a8:	00 97       	sbiw	r24, 0x00	; 0
    53aa:	19 f0       	breq	.+6      	; 0x53b2 <free+0xd4>
    53ac:	fd 01       	movw	r30, r26
    53ae:	dc 01       	movw	r26, r24
    53b0:	f7 cf       	rjmp	.-18     	; 0x53a0 <free+0xc2>
    53b2:	8d 91       	ld	r24, X+
    53b4:	9c 91       	ld	r25, X
    53b6:	11 97       	sbiw	r26, 0x01	; 1
    53b8:	9d 01       	movw	r18, r26
    53ba:	2e 5f       	subi	r18, 0xFE	; 254
    53bc:	3f 4f       	sbci	r19, 0xFF	; 255
    53be:	82 0f       	add	r24, r18
    53c0:	93 1f       	adc	r25, r19
    53c2:	20 91 86 17 	lds	r18, 0x1786	; 0x801786 <__brkval>
    53c6:	30 91 87 17 	lds	r19, 0x1787	; 0x801787 <__brkval+0x1>
    53ca:	28 17       	cp	r18, r24
    53cc:	39 07       	cpc	r19, r25
    53ce:	69 f4       	brne	.+26     	; 0x53ea <free+0x10c>
    53d0:	30 97       	sbiw	r30, 0x00	; 0
    53d2:	29 f4       	brne	.+10     	; 0x53de <free+0x100>
    53d4:	10 92 89 17 	sts	0x1789, r1	; 0x801789 <__flp+0x1>
    53d8:	10 92 88 17 	sts	0x1788, r1	; 0x801788 <__flp>
    53dc:	02 c0       	rjmp	.+4      	; 0x53e2 <free+0x104>
    53de:	13 82       	std	Z+3, r1	; 0x03
    53e0:	12 82       	std	Z+2, r1	; 0x02
    53e2:	b0 93 87 17 	sts	0x1787, r27	; 0x801787 <__brkval+0x1>
    53e6:	a0 93 86 17 	sts	0x1786, r26	; 0x801786 <__brkval>
    53ea:	df 91       	pop	r29
    53ec:	cf 91       	pop	r28
    53ee:	08 95       	ret

000053f0 <abort>:
    53f0:	81 e0       	ldi	r24, 0x01	; 1
    53f2:	90 e0       	ldi	r25, 0x00	; 0
    53f4:	f8 94       	cli
    53f6:	7d c3       	rjmp	.+1786   	; 0x5af2 <_exit>

000053f8 <memcpy>:
    53f8:	fb 01       	movw	r30, r22
    53fa:	dc 01       	movw	r26, r24
    53fc:	02 c0       	rjmp	.+4      	; 0x5402 <memcpy+0xa>
    53fe:	01 90       	ld	r0, Z+
    5400:	0d 92       	st	X+, r0
    5402:	41 50       	subi	r20, 0x01	; 1
    5404:	50 40       	sbci	r21, 0x00	; 0
    5406:	d8 f7       	brcc	.-10     	; 0x53fe <memcpy+0x6>
    5408:	08 95       	ret

0000540a <memset>:
    540a:	dc 01       	movw	r26, r24
    540c:	01 c0       	rjmp	.+2      	; 0x5410 <memset+0x6>
    540e:	6d 93       	st	X+, r22
    5410:	41 50       	subi	r20, 0x01	; 1
    5412:	50 40       	sbci	r21, 0x00	; 0
    5414:	e0 f7       	brcc	.-8      	; 0x540e <memset+0x4>
    5416:	08 95       	ret

00005418 <strcasestr>:
    5418:	fb 01       	movw	r30, r22
    541a:	51 91       	ld	r21, Z+
    541c:	55 23       	and	r21, r21
    541e:	b1 f0       	breq	.+44     	; 0x544c <strcasestr+0x34>
    5420:	bf 01       	movw	r22, r30
    5422:	dc 01       	movw	r26, r24
    5424:	05 2e       	mov	r0, r21
    5426:	4d 91       	ld	r20, X+
    5428:	44 23       	and	r20, r20
    542a:	69 f0       	breq	.+26     	; 0x5446 <strcasestr+0x2e>
    542c:	10 d0       	rcall	.+32     	; 0x544e <strcasestr+0x36>
    542e:	d9 f7       	brne	.-10     	; 0x5426 <strcasestr+0xe>
    5430:	cd 01       	movw	r24, r26
    5432:	01 90       	ld	r0, Z+
    5434:	00 20       	and	r0, r0
    5436:	49 f0       	breq	.+18     	; 0x544a <strcasestr+0x32>
    5438:	4d 91       	ld	r20, X+
    543a:	41 11       	cpse	r20, r1
    543c:	08 d0       	rcall	.+16     	; 0x544e <strcasestr+0x36>
    543e:	c9 f3       	breq	.-14     	; 0x5432 <strcasestr+0x1a>
    5440:	fb 01       	movw	r30, r22
    5442:	41 11       	cpse	r20, r1
    5444:	ee cf       	rjmp	.-36     	; 0x5422 <strcasestr+0xa>
    5446:	81 e0       	ldi	r24, 0x01	; 1
    5448:	90 e0       	ldi	r25, 0x00	; 0
    544a:	01 97       	sbiw	r24, 0x01	; 1
    544c:	08 95       	ret
    544e:	40 25       	eor	r20, r0
    5450:	39 f0       	breq	.+14     	; 0x5460 <strcasestr+0x48>
    5452:	40 32       	cpi	r20, 0x20	; 32
    5454:	29 f4       	brne	.+10     	; 0x5460 <strcasestr+0x48>
    5456:	40 29       	or	r20, r0
    5458:	4b 57       	subi	r20, 0x7B	; 123
    545a:	46 5e       	subi	r20, 0xE6	; 230
    545c:	08 f0       	brcs	.+2      	; 0x5460 <strcasestr+0x48>
    545e:	18 94       	sez
    5460:	08 95       	ret

00005462 <strcat>:
    5462:	fb 01       	movw	r30, r22
    5464:	dc 01       	movw	r26, r24
    5466:	0d 90       	ld	r0, X+
    5468:	00 20       	and	r0, r0
    546a:	e9 f7       	brne	.-6      	; 0x5466 <strcat+0x4>
    546c:	11 97       	sbiw	r26, 0x01	; 1
    546e:	01 90       	ld	r0, Z+
    5470:	0d 92       	st	X+, r0
    5472:	00 20       	and	r0, r0
    5474:	e1 f7       	brne	.-8      	; 0x546e <strcat+0xc>
    5476:	08 95       	ret

00005478 <strcpy>:
    5478:	fb 01       	movw	r30, r22
    547a:	dc 01       	movw	r26, r24
    547c:	01 90       	ld	r0, Z+
    547e:	0d 92       	st	X+, r0
    5480:	00 20       	and	r0, r0
    5482:	e1 f7       	brne	.-8      	; 0x547c <strcpy+0x4>
    5484:	08 95       	ret

00005486 <strncasecmp>:
    5486:	fb 01       	movw	r30, r22
    5488:	dc 01       	movw	r26, r24
    548a:	41 50       	subi	r20, 0x01	; 1
    548c:	50 40       	sbci	r21, 0x00	; 0
    548e:	88 f0       	brcs	.+34     	; 0x54b2 <strncasecmp+0x2c>
    5490:	8d 91       	ld	r24, X+
    5492:	81 34       	cpi	r24, 0x41	; 65
    5494:	1c f0       	brlt	.+6      	; 0x549c <strncasecmp+0x16>
    5496:	8b 35       	cpi	r24, 0x5B	; 91
    5498:	0c f4       	brge	.+2      	; 0x549c <strncasecmp+0x16>
    549a:	80 5e       	subi	r24, 0xE0	; 224
    549c:	61 91       	ld	r22, Z+
    549e:	61 34       	cpi	r22, 0x41	; 65
    54a0:	1c f0       	brlt	.+6      	; 0x54a8 <strncasecmp+0x22>
    54a2:	6b 35       	cpi	r22, 0x5B	; 91
    54a4:	0c f4       	brge	.+2      	; 0x54a8 <strncasecmp+0x22>
    54a6:	60 5e       	subi	r22, 0xE0	; 224
    54a8:	86 1b       	sub	r24, r22
    54aa:	61 11       	cpse	r22, r1
    54ac:	71 f3       	breq	.-36     	; 0x548a <strncasecmp+0x4>
    54ae:	99 0b       	sbc	r25, r25
    54b0:	08 95       	ret
    54b2:	88 1b       	sub	r24, r24
    54b4:	fc cf       	rjmp	.-8      	; 0x54ae <strncasecmp+0x28>

000054b6 <printf>:
    54b6:	cf 93       	push	r28
    54b8:	df 93       	push	r29
    54ba:	cd b7       	in	r28, 0x3d	; 61
    54bc:	de b7       	in	r29, 0x3e	; 62
    54be:	ae 01       	movw	r20, r28
    54c0:	4a 5f       	subi	r20, 0xFA	; 250
    54c2:	5f 4f       	sbci	r21, 0xFF	; 255
    54c4:	fa 01       	movw	r30, r20
    54c6:	61 91       	ld	r22, Z+
    54c8:	71 91       	ld	r23, Z+
    54ca:	af 01       	movw	r20, r30
    54cc:	80 91 8c 17 	lds	r24, 0x178C	; 0x80178c <__iob+0x2>
    54d0:	90 91 8d 17 	lds	r25, 0x178D	; 0x80178d <__iob+0x3>
    54d4:	61 d0       	rcall	.+194    	; 0x5598 <vfprintf>
    54d6:	df 91       	pop	r29
    54d8:	cf 91       	pop	r28
    54da:	08 95       	ret

000054dc <puts>:
    54dc:	0f 93       	push	r16
    54de:	1f 93       	push	r17
    54e0:	cf 93       	push	r28
    54e2:	df 93       	push	r29
    54e4:	e0 91 8c 17 	lds	r30, 0x178C	; 0x80178c <__iob+0x2>
    54e8:	f0 91 8d 17 	lds	r31, 0x178D	; 0x80178d <__iob+0x3>
    54ec:	23 81       	ldd	r18, Z+3	; 0x03
    54ee:	21 ff       	sbrs	r18, 1
    54f0:	1b c0       	rjmp	.+54     	; 0x5528 <puts+0x4c>
    54f2:	8c 01       	movw	r16, r24
    54f4:	d0 e0       	ldi	r29, 0x00	; 0
    54f6:	c0 e0       	ldi	r28, 0x00	; 0
    54f8:	f8 01       	movw	r30, r16
    54fa:	81 91       	ld	r24, Z+
    54fc:	8f 01       	movw	r16, r30
    54fe:	60 91 8c 17 	lds	r22, 0x178C	; 0x80178c <__iob+0x2>
    5502:	70 91 8d 17 	lds	r23, 0x178D	; 0x80178d <__iob+0x3>
    5506:	db 01       	movw	r26, r22
    5508:	18 96       	adiw	r26, 0x08	; 8
    550a:	ed 91       	ld	r30, X+
    550c:	fc 91       	ld	r31, X
    550e:	19 97       	sbiw	r26, 0x09	; 9
    5510:	88 23       	and	r24, r24
    5512:	31 f0       	breq	.+12     	; 0x5520 <puts+0x44>
    5514:	19 95       	eicall
    5516:	89 2b       	or	r24, r25
    5518:	79 f3       	breq	.-34     	; 0x54f8 <puts+0x1c>
    551a:	df ef       	ldi	r29, 0xFF	; 255
    551c:	cf ef       	ldi	r28, 0xFF	; 255
    551e:	ec cf       	rjmp	.-40     	; 0x54f8 <puts+0x1c>
    5520:	8a e0       	ldi	r24, 0x0A	; 10
    5522:	19 95       	eicall
    5524:	89 2b       	or	r24, r25
    5526:	19 f0       	breq	.+6      	; 0x552e <puts+0x52>
    5528:	8f ef       	ldi	r24, 0xFF	; 255
    552a:	9f ef       	ldi	r25, 0xFF	; 255
    552c:	02 c0       	rjmp	.+4      	; 0x5532 <puts+0x56>
    552e:	8d 2f       	mov	r24, r29
    5530:	9c 2f       	mov	r25, r28
    5532:	df 91       	pop	r29
    5534:	cf 91       	pop	r28
    5536:	1f 91       	pop	r17
    5538:	0f 91       	pop	r16
    553a:	08 95       	ret

0000553c <sprintf>:
    553c:	0f 93       	push	r16
    553e:	1f 93       	push	r17
    5540:	cf 93       	push	r28
    5542:	df 93       	push	r29
    5544:	cd b7       	in	r28, 0x3d	; 61
    5546:	de b7       	in	r29, 0x3e	; 62
    5548:	2e 97       	sbiw	r28, 0x0e	; 14
    554a:	0f b6       	in	r0, 0x3f	; 63
    554c:	f8 94       	cli
    554e:	de bf       	out	0x3e, r29	; 62
    5550:	0f be       	out	0x3f, r0	; 63
    5552:	cd bf       	out	0x3d, r28	; 61
    5554:	0e 89       	ldd	r16, Y+22	; 0x16
    5556:	1f 89       	ldd	r17, Y+23	; 0x17
    5558:	86 e0       	ldi	r24, 0x06	; 6
    555a:	8c 83       	std	Y+4, r24	; 0x04
    555c:	1a 83       	std	Y+2, r17	; 0x02
    555e:	09 83       	std	Y+1, r16	; 0x01
    5560:	8f ef       	ldi	r24, 0xFF	; 255
    5562:	9f e7       	ldi	r25, 0x7F	; 127
    5564:	9e 83       	std	Y+6, r25	; 0x06
    5566:	8d 83       	std	Y+5, r24	; 0x05
    5568:	ae 01       	movw	r20, r28
    556a:	46 5e       	subi	r20, 0xE6	; 230
    556c:	5f 4f       	sbci	r21, 0xFF	; 255
    556e:	68 8d       	ldd	r22, Y+24	; 0x18
    5570:	79 8d       	ldd	r23, Y+25	; 0x19
    5572:	ce 01       	movw	r24, r28
    5574:	01 96       	adiw	r24, 0x01	; 1
    5576:	10 d0       	rcall	.+32     	; 0x5598 <vfprintf>
    5578:	ef 81       	ldd	r30, Y+7	; 0x07
    557a:	f8 85       	ldd	r31, Y+8	; 0x08
    557c:	e0 0f       	add	r30, r16
    557e:	f1 1f       	adc	r31, r17
    5580:	10 82       	st	Z, r1
    5582:	2e 96       	adiw	r28, 0x0e	; 14
    5584:	0f b6       	in	r0, 0x3f	; 63
    5586:	f8 94       	cli
    5588:	de bf       	out	0x3e, r29	; 62
    558a:	0f be       	out	0x3f, r0	; 63
    558c:	cd bf       	out	0x3d, r28	; 61
    558e:	df 91       	pop	r29
    5590:	cf 91       	pop	r28
    5592:	1f 91       	pop	r17
    5594:	0f 91       	pop	r16
    5596:	08 95       	ret

00005598 <vfprintf>:
    5598:	2f 92       	push	r2
    559a:	3f 92       	push	r3
    559c:	4f 92       	push	r4
    559e:	5f 92       	push	r5
    55a0:	6f 92       	push	r6
    55a2:	7f 92       	push	r7
    55a4:	8f 92       	push	r8
    55a6:	9f 92       	push	r9
    55a8:	af 92       	push	r10
    55aa:	bf 92       	push	r11
    55ac:	cf 92       	push	r12
    55ae:	df 92       	push	r13
    55b0:	ef 92       	push	r14
    55b2:	ff 92       	push	r15
    55b4:	0f 93       	push	r16
    55b6:	1f 93       	push	r17
    55b8:	cf 93       	push	r28
    55ba:	df 93       	push	r29
    55bc:	cd b7       	in	r28, 0x3d	; 61
    55be:	de b7       	in	r29, 0x3e	; 62
    55c0:	2b 97       	sbiw	r28, 0x0b	; 11
    55c2:	0f b6       	in	r0, 0x3f	; 63
    55c4:	f8 94       	cli
    55c6:	de bf       	out	0x3e, r29	; 62
    55c8:	0f be       	out	0x3f, r0	; 63
    55ca:	cd bf       	out	0x3d, r28	; 61
    55cc:	6c 01       	movw	r12, r24
    55ce:	7b 01       	movw	r14, r22
    55d0:	8a 01       	movw	r16, r20
    55d2:	fc 01       	movw	r30, r24
    55d4:	17 82       	std	Z+7, r1	; 0x07
    55d6:	16 82       	std	Z+6, r1	; 0x06
    55d8:	83 81       	ldd	r24, Z+3	; 0x03
    55da:	81 ff       	sbrs	r24, 1
    55dc:	bf c1       	rjmp	.+894    	; 0x595c <vfprintf+0x3c4>
    55de:	ce 01       	movw	r24, r28
    55e0:	01 96       	adiw	r24, 0x01	; 1
    55e2:	3c 01       	movw	r6, r24
    55e4:	f6 01       	movw	r30, r12
    55e6:	93 81       	ldd	r25, Z+3	; 0x03
    55e8:	f7 01       	movw	r30, r14
    55ea:	93 fd       	sbrc	r25, 3
    55ec:	85 91       	lpm	r24, Z+
    55ee:	93 ff       	sbrs	r25, 3
    55f0:	81 91       	ld	r24, Z+
    55f2:	7f 01       	movw	r14, r30
    55f4:	88 23       	and	r24, r24
    55f6:	09 f4       	brne	.+2      	; 0x55fa <vfprintf+0x62>
    55f8:	ad c1       	rjmp	.+858    	; 0x5954 <vfprintf+0x3bc>
    55fa:	85 32       	cpi	r24, 0x25	; 37
    55fc:	39 f4       	brne	.+14     	; 0x560c <vfprintf+0x74>
    55fe:	93 fd       	sbrc	r25, 3
    5600:	85 91       	lpm	r24, Z+
    5602:	93 ff       	sbrs	r25, 3
    5604:	81 91       	ld	r24, Z+
    5606:	7f 01       	movw	r14, r30
    5608:	85 32       	cpi	r24, 0x25	; 37
    560a:	21 f4       	brne	.+8      	; 0x5614 <vfprintf+0x7c>
    560c:	b6 01       	movw	r22, r12
    560e:	90 e0       	ldi	r25, 0x00	; 0
    5610:	d6 d1       	rcall	.+940    	; 0x59be <fputc>
    5612:	e8 cf       	rjmp	.-48     	; 0x55e4 <vfprintf+0x4c>
    5614:	91 2c       	mov	r9, r1
    5616:	21 2c       	mov	r2, r1
    5618:	31 2c       	mov	r3, r1
    561a:	ff e1       	ldi	r31, 0x1F	; 31
    561c:	f3 15       	cp	r31, r3
    561e:	d8 f0       	brcs	.+54     	; 0x5656 <vfprintf+0xbe>
    5620:	8b 32       	cpi	r24, 0x2B	; 43
    5622:	79 f0       	breq	.+30     	; 0x5642 <vfprintf+0xaa>
    5624:	38 f4       	brcc	.+14     	; 0x5634 <vfprintf+0x9c>
    5626:	80 32       	cpi	r24, 0x20	; 32
    5628:	79 f0       	breq	.+30     	; 0x5648 <vfprintf+0xb0>
    562a:	83 32       	cpi	r24, 0x23	; 35
    562c:	a1 f4       	brne	.+40     	; 0x5656 <vfprintf+0xbe>
    562e:	23 2d       	mov	r18, r3
    5630:	20 61       	ori	r18, 0x10	; 16
    5632:	1d c0       	rjmp	.+58     	; 0x566e <vfprintf+0xd6>
    5634:	8d 32       	cpi	r24, 0x2D	; 45
    5636:	61 f0       	breq	.+24     	; 0x5650 <vfprintf+0xb8>
    5638:	80 33       	cpi	r24, 0x30	; 48
    563a:	69 f4       	brne	.+26     	; 0x5656 <vfprintf+0xbe>
    563c:	23 2d       	mov	r18, r3
    563e:	21 60       	ori	r18, 0x01	; 1
    5640:	16 c0       	rjmp	.+44     	; 0x566e <vfprintf+0xd6>
    5642:	83 2d       	mov	r24, r3
    5644:	82 60       	ori	r24, 0x02	; 2
    5646:	38 2e       	mov	r3, r24
    5648:	e3 2d       	mov	r30, r3
    564a:	e4 60       	ori	r30, 0x04	; 4
    564c:	3e 2e       	mov	r3, r30
    564e:	2a c0       	rjmp	.+84     	; 0x56a4 <vfprintf+0x10c>
    5650:	f3 2d       	mov	r31, r3
    5652:	f8 60       	ori	r31, 0x08	; 8
    5654:	1d c0       	rjmp	.+58     	; 0x5690 <vfprintf+0xf8>
    5656:	37 fc       	sbrc	r3, 7
    5658:	2d c0       	rjmp	.+90     	; 0x56b4 <vfprintf+0x11c>
    565a:	20 ed       	ldi	r18, 0xD0	; 208
    565c:	28 0f       	add	r18, r24
    565e:	2a 30       	cpi	r18, 0x0A	; 10
    5660:	40 f0       	brcs	.+16     	; 0x5672 <vfprintf+0xda>
    5662:	8e 32       	cpi	r24, 0x2E	; 46
    5664:	b9 f4       	brne	.+46     	; 0x5694 <vfprintf+0xfc>
    5666:	36 fc       	sbrc	r3, 6
    5668:	75 c1       	rjmp	.+746    	; 0x5954 <vfprintf+0x3bc>
    566a:	23 2d       	mov	r18, r3
    566c:	20 64       	ori	r18, 0x40	; 64
    566e:	32 2e       	mov	r3, r18
    5670:	19 c0       	rjmp	.+50     	; 0x56a4 <vfprintf+0x10c>
    5672:	36 fe       	sbrs	r3, 6
    5674:	06 c0       	rjmp	.+12     	; 0x5682 <vfprintf+0xea>
    5676:	8a e0       	ldi	r24, 0x0A	; 10
    5678:	98 9e       	mul	r9, r24
    567a:	20 0d       	add	r18, r0
    567c:	11 24       	eor	r1, r1
    567e:	92 2e       	mov	r9, r18
    5680:	11 c0       	rjmp	.+34     	; 0x56a4 <vfprintf+0x10c>
    5682:	ea e0       	ldi	r30, 0x0A	; 10
    5684:	2e 9e       	mul	r2, r30
    5686:	20 0d       	add	r18, r0
    5688:	11 24       	eor	r1, r1
    568a:	22 2e       	mov	r2, r18
    568c:	f3 2d       	mov	r31, r3
    568e:	f0 62       	ori	r31, 0x20	; 32
    5690:	3f 2e       	mov	r3, r31
    5692:	08 c0       	rjmp	.+16     	; 0x56a4 <vfprintf+0x10c>
    5694:	8c 36       	cpi	r24, 0x6C	; 108
    5696:	21 f4       	brne	.+8      	; 0x56a0 <vfprintf+0x108>
    5698:	83 2d       	mov	r24, r3
    569a:	80 68       	ori	r24, 0x80	; 128
    569c:	38 2e       	mov	r3, r24
    569e:	02 c0       	rjmp	.+4      	; 0x56a4 <vfprintf+0x10c>
    56a0:	88 36       	cpi	r24, 0x68	; 104
    56a2:	41 f4       	brne	.+16     	; 0x56b4 <vfprintf+0x11c>
    56a4:	f7 01       	movw	r30, r14
    56a6:	93 fd       	sbrc	r25, 3
    56a8:	85 91       	lpm	r24, Z+
    56aa:	93 ff       	sbrs	r25, 3
    56ac:	81 91       	ld	r24, Z+
    56ae:	7f 01       	movw	r14, r30
    56b0:	81 11       	cpse	r24, r1
    56b2:	b3 cf       	rjmp	.-154    	; 0x561a <vfprintf+0x82>
    56b4:	98 2f       	mov	r25, r24
    56b6:	9f 7d       	andi	r25, 0xDF	; 223
    56b8:	95 54       	subi	r25, 0x45	; 69
    56ba:	93 30       	cpi	r25, 0x03	; 3
    56bc:	28 f4       	brcc	.+10     	; 0x56c8 <vfprintf+0x130>
    56be:	0c 5f       	subi	r16, 0xFC	; 252
    56c0:	1f 4f       	sbci	r17, 0xFF	; 255
    56c2:	9f e3       	ldi	r25, 0x3F	; 63
    56c4:	99 83       	std	Y+1, r25	; 0x01
    56c6:	0d c0       	rjmp	.+26     	; 0x56e2 <vfprintf+0x14a>
    56c8:	83 36       	cpi	r24, 0x63	; 99
    56ca:	31 f0       	breq	.+12     	; 0x56d8 <vfprintf+0x140>
    56cc:	83 37       	cpi	r24, 0x73	; 115
    56ce:	71 f0       	breq	.+28     	; 0x56ec <vfprintf+0x154>
    56d0:	83 35       	cpi	r24, 0x53	; 83
    56d2:	09 f0       	breq	.+2      	; 0x56d6 <vfprintf+0x13e>
    56d4:	55 c0       	rjmp	.+170    	; 0x5780 <vfprintf+0x1e8>
    56d6:	20 c0       	rjmp	.+64     	; 0x5718 <vfprintf+0x180>
    56d8:	f8 01       	movw	r30, r16
    56da:	80 81       	ld	r24, Z
    56dc:	89 83       	std	Y+1, r24	; 0x01
    56de:	0e 5f       	subi	r16, 0xFE	; 254
    56e0:	1f 4f       	sbci	r17, 0xFF	; 255
    56e2:	88 24       	eor	r8, r8
    56e4:	83 94       	inc	r8
    56e6:	91 2c       	mov	r9, r1
    56e8:	53 01       	movw	r10, r6
    56ea:	12 c0       	rjmp	.+36     	; 0x5710 <vfprintf+0x178>
    56ec:	28 01       	movw	r4, r16
    56ee:	f2 e0       	ldi	r31, 0x02	; 2
    56f0:	4f 0e       	add	r4, r31
    56f2:	51 1c       	adc	r5, r1
    56f4:	f8 01       	movw	r30, r16
    56f6:	a0 80       	ld	r10, Z
    56f8:	b1 80       	ldd	r11, Z+1	; 0x01
    56fa:	36 fe       	sbrs	r3, 6
    56fc:	03 c0       	rjmp	.+6      	; 0x5704 <vfprintf+0x16c>
    56fe:	69 2d       	mov	r22, r9
    5700:	70 e0       	ldi	r23, 0x00	; 0
    5702:	02 c0       	rjmp	.+4      	; 0x5708 <vfprintf+0x170>
    5704:	6f ef       	ldi	r22, 0xFF	; 255
    5706:	7f ef       	ldi	r23, 0xFF	; 255
    5708:	c5 01       	movw	r24, r10
    570a:	4e d1       	rcall	.+668    	; 0x59a8 <strnlen>
    570c:	4c 01       	movw	r8, r24
    570e:	82 01       	movw	r16, r4
    5710:	f3 2d       	mov	r31, r3
    5712:	ff 77       	andi	r31, 0x7F	; 127
    5714:	3f 2e       	mov	r3, r31
    5716:	15 c0       	rjmp	.+42     	; 0x5742 <vfprintf+0x1aa>
    5718:	28 01       	movw	r4, r16
    571a:	22 e0       	ldi	r18, 0x02	; 2
    571c:	42 0e       	add	r4, r18
    571e:	51 1c       	adc	r5, r1
    5720:	f8 01       	movw	r30, r16
    5722:	a0 80       	ld	r10, Z
    5724:	b1 80       	ldd	r11, Z+1	; 0x01
    5726:	36 fe       	sbrs	r3, 6
    5728:	03 c0       	rjmp	.+6      	; 0x5730 <vfprintf+0x198>
    572a:	69 2d       	mov	r22, r9
    572c:	70 e0       	ldi	r23, 0x00	; 0
    572e:	02 c0       	rjmp	.+4      	; 0x5734 <vfprintf+0x19c>
    5730:	6f ef       	ldi	r22, 0xFF	; 255
    5732:	7f ef       	ldi	r23, 0xFF	; 255
    5734:	c5 01       	movw	r24, r10
    5736:	2d d1       	rcall	.+602    	; 0x5992 <strnlen_P>
    5738:	4c 01       	movw	r8, r24
    573a:	f3 2d       	mov	r31, r3
    573c:	f0 68       	ori	r31, 0x80	; 128
    573e:	3f 2e       	mov	r3, r31
    5740:	82 01       	movw	r16, r4
    5742:	33 fc       	sbrc	r3, 3
    5744:	19 c0       	rjmp	.+50     	; 0x5778 <vfprintf+0x1e0>
    5746:	82 2d       	mov	r24, r2
    5748:	90 e0       	ldi	r25, 0x00	; 0
    574a:	88 16       	cp	r8, r24
    574c:	99 06       	cpc	r9, r25
    574e:	a0 f4       	brcc	.+40     	; 0x5778 <vfprintf+0x1e0>
    5750:	b6 01       	movw	r22, r12
    5752:	80 e2       	ldi	r24, 0x20	; 32
    5754:	90 e0       	ldi	r25, 0x00	; 0
    5756:	33 d1       	rcall	.+614    	; 0x59be <fputc>
    5758:	2a 94       	dec	r2
    575a:	f5 cf       	rjmp	.-22     	; 0x5746 <vfprintf+0x1ae>
    575c:	f5 01       	movw	r30, r10
    575e:	37 fc       	sbrc	r3, 7
    5760:	85 91       	lpm	r24, Z+
    5762:	37 fe       	sbrs	r3, 7
    5764:	81 91       	ld	r24, Z+
    5766:	5f 01       	movw	r10, r30
    5768:	b6 01       	movw	r22, r12
    576a:	90 e0       	ldi	r25, 0x00	; 0
    576c:	28 d1       	rcall	.+592    	; 0x59be <fputc>
    576e:	21 10       	cpse	r2, r1
    5770:	2a 94       	dec	r2
    5772:	21 e0       	ldi	r18, 0x01	; 1
    5774:	82 1a       	sub	r8, r18
    5776:	91 08       	sbc	r9, r1
    5778:	81 14       	cp	r8, r1
    577a:	91 04       	cpc	r9, r1
    577c:	79 f7       	brne	.-34     	; 0x575c <vfprintf+0x1c4>
    577e:	e1 c0       	rjmp	.+450    	; 0x5942 <vfprintf+0x3aa>
    5780:	84 36       	cpi	r24, 0x64	; 100
    5782:	11 f0       	breq	.+4      	; 0x5788 <vfprintf+0x1f0>
    5784:	89 36       	cpi	r24, 0x69	; 105
    5786:	39 f5       	brne	.+78     	; 0x57d6 <vfprintf+0x23e>
    5788:	f8 01       	movw	r30, r16
    578a:	37 fe       	sbrs	r3, 7
    578c:	07 c0       	rjmp	.+14     	; 0x579c <vfprintf+0x204>
    578e:	60 81       	ld	r22, Z
    5790:	71 81       	ldd	r23, Z+1	; 0x01
    5792:	82 81       	ldd	r24, Z+2	; 0x02
    5794:	93 81       	ldd	r25, Z+3	; 0x03
    5796:	0c 5f       	subi	r16, 0xFC	; 252
    5798:	1f 4f       	sbci	r17, 0xFF	; 255
    579a:	08 c0       	rjmp	.+16     	; 0x57ac <vfprintf+0x214>
    579c:	60 81       	ld	r22, Z
    579e:	71 81       	ldd	r23, Z+1	; 0x01
    57a0:	07 2e       	mov	r0, r23
    57a2:	00 0c       	add	r0, r0
    57a4:	88 0b       	sbc	r24, r24
    57a6:	99 0b       	sbc	r25, r25
    57a8:	0e 5f       	subi	r16, 0xFE	; 254
    57aa:	1f 4f       	sbci	r17, 0xFF	; 255
    57ac:	f3 2d       	mov	r31, r3
    57ae:	ff 76       	andi	r31, 0x6F	; 111
    57b0:	3f 2e       	mov	r3, r31
    57b2:	97 ff       	sbrs	r25, 7
    57b4:	09 c0       	rjmp	.+18     	; 0x57c8 <vfprintf+0x230>
    57b6:	90 95       	com	r25
    57b8:	80 95       	com	r24
    57ba:	70 95       	com	r23
    57bc:	61 95       	neg	r22
    57be:	7f 4f       	sbci	r23, 0xFF	; 255
    57c0:	8f 4f       	sbci	r24, 0xFF	; 255
    57c2:	9f 4f       	sbci	r25, 0xFF	; 255
    57c4:	f0 68       	ori	r31, 0x80	; 128
    57c6:	3f 2e       	mov	r3, r31
    57c8:	2a e0       	ldi	r18, 0x0A	; 10
    57ca:	30 e0       	ldi	r19, 0x00	; 0
    57cc:	a3 01       	movw	r20, r6
    57ce:	33 d1       	rcall	.+614    	; 0x5a36 <__ultoa_invert>
    57d0:	88 2e       	mov	r8, r24
    57d2:	86 18       	sub	r8, r6
    57d4:	44 c0       	rjmp	.+136    	; 0x585e <vfprintf+0x2c6>
    57d6:	85 37       	cpi	r24, 0x75	; 117
    57d8:	31 f4       	brne	.+12     	; 0x57e6 <vfprintf+0x24e>
    57da:	23 2d       	mov	r18, r3
    57dc:	2f 7e       	andi	r18, 0xEF	; 239
    57de:	b2 2e       	mov	r11, r18
    57e0:	2a e0       	ldi	r18, 0x0A	; 10
    57e2:	30 e0       	ldi	r19, 0x00	; 0
    57e4:	25 c0       	rjmp	.+74     	; 0x5830 <vfprintf+0x298>
    57e6:	93 2d       	mov	r25, r3
    57e8:	99 7f       	andi	r25, 0xF9	; 249
    57ea:	b9 2e       	mov	r11, r25
    57ec:	8f 36       	cpi	r24, 0x6F	; 111
    57ee:	c1 f0       	breq	.+48     	; 0x5820 <vfprintf+0x288>
    57f0:	18 f4       	brcc	.+6      	; 0x57f8 <vfprintf+0x260>
    57f2:	88 35       	cpi	r24, 0x58	; 88
    57f4:	79 f0       	breq	.+30     	; 0x5814 <vfprintf+0x27c>
    57f6:	ae c0       	rjmp	.+348    	; 0x5954 <vfprintf+0x3bc>
    57f8:	80 37       	cpi	r24, 0x70	; 112
    57fa:	19 f0       	breq	.+6      	; 0x5802 <vfprintf+0x26a>
    57fc:	88 37       	cpi	r24, 0x78	; 120
    57fe:	21 f0       	breq	.+8      	; 0x5808 <vfprintf+0x270>
    5800:	a9 c0       	rjmp	.+338    	; 0x5954 <vfprintf+0x3bc>
    5802:	e9 2f       	mov	r30, r25
    5804:	e0 61       	ori	r30, 0x10	; 16
    5806:	be 2e       	mov	r11, r30
    5808:	b4 fe       	sbrs	r11, 4
    580a:	0d c0       	rjmp	.+26     	; 0x5826 <vfprintf+0x28e>
    580c:	fb 2d       	mov	r31, r11
    580e:	f4 60       	ori	r31, 0x04	; 4
    5810:	bf 2e       	mov	r11, r31
    5812:	09 c0       	rjmp	.+18     	; 0x5826 <vfprintf+0x28e>
    5814:	34 fe       	sbrs	r3, 4
    5816:	0a c0       	rjmp	.+20     	; 0x582c <vfprintf+0x294>
    5818:	29 2f       	mov	r18, r25
    581a:	26 60       	ori	r18, 0x06	; 6
    581c:	b2 2e       	mov	r11, r18
    581e:	06 c0       	rjmp	.+12     	; 0x582c <vfprintf+0x294>
    5820:	28 e0       	ldi	r18, 0x08	; 8
    5822:	30 e0       	ldi	r19, 0x00	; 0
    5824:	05 c0       	rjmp	.+10     	; 0x5830 <vfprintf+0x298>
    5826:	20 e1       	ldi	r18, 0x10	; 16
    5828:	30 e0       	ldi	r19, 0x00	; 0
    582a:	02 c0       	rjmp	.+4      	; 0x5830 <vfprintf+0x298>
    582c:	20 e1       	ldi	r18, 0x10	; 16
    582e:	32 e0       	ldi	r19, 0x02	; 2
    5830:	f8 01       	movw	r30, r16
    5832:	b7 fe       	sbrs	r11, 7
    5834:	07 c0       	rjmp	.+14     	; 0x5844 <vfprintf+0x2ac>
    5836:	60 81       	ld	r22, Z
    5838:	71 81       	ldd	r23, Z+1	; 0x01
    583a:	82 81       	ldd	r24, Z+2	; 0x02
    583c:	93 81       	ldd	r25, Z+3	; 0x03
    583e:	0c 5f       	subi	r16, 0xFC	; 252
    5840:	1f 4f       	sbci	r17, 0xFF	; 255
    5842:	06 c0       	rjmp	.+12     	; 0x5850 <vfprintf+0x2b8>
    5844:	60 81       	ld	r22, Z
    5846:	71 81       	ldd	r23, Z+1	; 0x01
    5848:	80 e0       	ldi	r24, 0x00	; 0
    584a:	90 e0       	ldi	r25, 0x00	; 0
    584c:	0e 5f       	subi	r16, 0xFE	; 254
    584e:	1f 4f       	sbci	r17, 0xFF	; 255
    5850:	a3 01       	movw	r20, r6
    5852:	f1 d0       	rcall	.+482    	; 0x5a36 <__ultoa_invert>
    5854:	88 2e       	mov	r8, r24
    5856:	86 18       	sub	r8, r6
    5858:	fb 2d       	mov	r31, r11
    585a:	ff 77       	andi	r31, 0x7F	; 127
    585c:	3f 2e       	mov	r3, r31
    585e:	36 fe       	sbrs	r3, 6
    5860:	0d c0       	rjmp	.+26     	; 0x587c <vfprintf+0x2e4>
    5862:	23 2d       	mov	r18, r3
    5864:	2e 7f       	andi	r18, 0xFE	; 254
    5866:	a2 2e       	mov	r10, r18
    5868:	89 14       	cp	r8, r9
    586a:	58 f4       	brcc	.+22     	; 0x5882 <vfprintf+0x2ea>
    586c:	34 fe       	sbrs	r3, 4
    586e:	0b c0       	rjmp	.+22     	; 0x5886 <vfprintf+0x2ee>
    5870:	32 fc       	sbrc	r3, 2
    5872:	09 c0       	rjmp	.+18     	; 0x5886 <vfprintf+0x2ee>
    5874:	83 2d       	mov	r24, r3
    5876:	8e 7e       	andi	r24, 0xEE	; 238
    5878:	a8 2e       	mov	r10, r24
    587a:	05 c0       	rjmp	.+10     	; 0x5886 <vfprintf+0x2ee>
    587c:	b8 2c       	mov	r11, r8
    587e:	a3 2c       	mov	r10, r3
    5880:	03 c0       	rjmp	.+6      	; 0x5888 <vfprintf+0x2f0>
    5882:	b8 2c       	mov	r11, r8
    5884:	01 c0       	rjmp	.+2      	; 0x5888 <vfprintf+0x2f0>
    5886:	b9 2c       	mov	r11, r9
    5888:	a4 fe       	sbrs	r10, 4
    588a:	0f c0       	rjmp	.+30     	; 0x58aa <vfprintf+0x312>
    588c:	fe 01       	movw	r30, r28
    588e:	e8 0d       	add	r30, r8
    5890:	f1 1d       	adc	r31, r1
    5892:	80 81       	ld	r24, Z
    5894:	80 33       	cpi	r24, 0x30	; 48
    5896:	21 f4       	brne	.+8      	; 0x58a0 <vfprintf+0x308>
    5898:	9a 2d       	mov	r25, r10
    589a:	99 7e       	andi	r25, 0xE9	; 233
    589c:	a9 2e       	mov	r10, r25
    589e:	09 c0       	rjmp	.+18     	; 0x58b2 <vfprintf+0x31a>
    58a0:	a2 fe       	sbrs	r10, 2
    58a2:	06 c0       	rjmp	.+12     	; 0x58b0 <vfprintf+0x318>
    58a4:	b3 94       	inc	r11
    58a6:	b3 94       	inc	r11
    58a8:	04 c0       	rjmp	.+8      	; 0x58b2 <vfprintf+0x31a>
    58aa:	8a 2d       	mov	r24, r10
    58ac:	86 78       	andi	r24, 0x86	; 134
    58ae:	09 f0       	breq	.+2      	; 0x58b2 <vfprintf+0x31a>
    58b0:	b3 94       	inc	r11
    58b2:	a3 fc       	sbrc	r10, 3
    58b4:	10 c0       	rjmp	.+32     	; 0x58d6 <vfprintf+0x33e>
    58b6:	a0 fe       	sbrs	r10, 0
    58b8:	06 c0       	rjmp	.+12     	; 0x58c6 <vfprintf+0x32e>
    58ba:	b2 14       	cp	r11, r2
    58bc:	80 f4       	brcc	.+32     	; 0x58de <vfprintf+0x346>
    58be:	28 0c       	add	r2, r8
    58c0:	92 2c       	mov	r9, r2
    58c2:	9b 18       	sub	r9, r11
    58c4:	0d c0       	rjmp	.+26     	; 0x58e0 <vfprintf+0x348>
    58c6:	b2 14       	cp	r11, r2
    58c8:	58 f4       	brcc	.+22     	; 0x58e0 <vfprintf+0x348>
    58ca:	b6 01       	movw	r22, r12
    58cc:	80 e2       	ldi	r24, 0x20	; 32
    58ce:	90 e0       	ldi	r25, 0x00	; 0
    58d0:	76 d0       	rcall	.+236    	; 0x59be <fputc>
    58d2:	b3 94       	inc	r11
    58d4:	f8 cf       	rjmp	.-16     	; 0x58c6 <vfprintf+0x32e>
    58d6:	b2 14       	cp	r11, r2
    58d8:	18 f4       	brcc	.+6      	; 0x58e0 <vfprintf+0x348>
    58da:	2b 18       	sub	r2, r11
    58dc:	02 c0       	rjmp	.+4      	; 0x58e2 <vfprintf+0x34a>
    58de:	98 2c       	mov	r9, r8
    58e0:	21 2c       	mov	r2, r1
    58e2:	a4 fe       	sbrs	r10, 4
    58e4:	0f c0       	rjmp	.+30     	; 0x5904 <vfprintf+0x36c>
    58e6:	b6 01       	movw	r22, r12
    58e8:	80 e3       	ldi	r24, 0x30	; 48
    58ea:	90 e0       	ldi	r25, 0x00	; 0
    58ec:	68 d0       	rcall	.+208    	; 0x59be <fputc>
    58ee:	a2 fe       	sbrs	r10, 2
    58f0:	16 c0       	rjmp	.+44     	; 0x591e <vfprintf+0x386>
    58f2:	a1 fc       	sbrc	r10, 1
    58f4:	03 c0       	rjmp	.+6      	; 0x58fc <vfprintf+0x364>
    58f6:	88 e7       	ldi	r24, 0x78	; 120
    58f8:	90 e0       	ldi	r25, 0x00	; 0
    58fa:	02 c0       	rjmp	.+4      	; 0x5900 <vfprintf+0x368>
    58fc:	88 e5       	ldi	r24, 0x58	; 88
    58fe:	90 e0       	ldi	r25, 0x00	; 0
    5900:	b6 01       	movw	r22, r12
    5902:	0c c0       	rjmp	.+24     	; 0x591c <vfprintf+0x384>
    5904:	8a 2d       	mov	r24, r10
    5906:	86 78       	andi	r24, 0x86	; 134
    5908:	51 f0       	breq	.+20     	; 0x591e <vfprintf+0x386>
    590a:	a1 fe       	sbrs	r10, 1
    590c:	02 c0       	rjmp	.+4      	; 0x5912 <vfprintf+0x37a>
    590e:	8b e2       	ldi	r24, 0x2B	; 43
    5910:	01 c0       	rjmp	.+2      	; 0x5914 <vfprintf+0x37c>
    5912:	80 e2       	ldi	r24, 0x20	; 32
    5914:	a7 fc       	sbrc	r10, 7
    5916:	8d e2       	ldi	r24, 0x2D	; 45
    5918:	b6 01       	movw	r22, r12
    591a:	90 e0       	ldi	r25, 0x00	; 0
    591c:	50 d0       	rcall	.+160    	; 0x59be <fputc>
    591e:	89 14       	cp	r8, r9
    5920:	30 f4       	brcc	.+12     	; 0x592e <vfprintf+0x396>
    5922:	b6 01       	movw	r22, r12
    5924:	80 e3       	ldi	r24, 0x30	; 48
    5926:	90 e0       	ldi	r25, 0x00	; 0
    5928:	4a d0       	rcall	.+148    	; 0x59be <fputc>
    592a:	9a 94       	dec	r9
    592c:	f8 cf       	rjmp	.-16     	; 0x591e <vfprintf+0x386>
    592e:	8a 94       	dec	r8
    5930:	f3 01       	movw	r30, r6
    5932:	e8 0d       	add	r30, r8
    5934:	f1 1d       	adc	r31, r1
    5936:	80 81       	ld	r24, Z
    5938:	b6 01       	movw	r22, r12
    593a:	90 e0       	ldi	r25, 0x00	; 0
    593c:	40 d0       	rcall	.+128    	; 0x59be <fputc>
    593e:	81 10       	cpse	r8, r1
    5940:	f6 cf       	rjmp	.-20     	; 0x592e <vfprintf+0x396>
    5942:	22 20       	and	r2, r2
    5944:	09 f4       	brne	.+2      	; 0x5948 <vfprintf+0x3b0>
    5946:	4e ce       	rjmp	.-868    	; 0x55e4 <vfprintf+0x4c>
    5948:	b6 01       	movw	r22, r12
    594a:	80 e2       	ldi	r24, 0x20	; 32
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	37 d0       	rcall	.+110    	; 0x59be <fputc>
    5950:	2a 94       	dec	r2
    5952:	f7 cf       	rjmp	.-18     	; 0x5942 <vfprintf+0x3aa>
    5954:	f6 01       	movw	r30, r12
    5956:	86 81       	ldd	r24, Z+6	; 0x06
    5958:	97 81       	ldd	r25, Z+7	; 0x07
    595a:	02 c0       	rjmp	.+4      	; 0x5960 <vfprintf+0x3c8>
    595c:	8f ef       	ldi	r24, 0xFF	; 255
    595e:	9f ef       	ldi	r25, 0xFF	; 255
    5960:	2b 96       	adiw	r28, 0x0b	; 11
    5962:	0f b6       	in	r0, 0x3f	; 63
    5964:	f8 94       	cli
    5966:	de bf       	out	0x3e, r29	; 62
    5968:	0f be       	out	0x3f, r0	; 63
    596a:	cd bf       	out	0x3d, r28	; 61
    596c:	df 91       	pop	r29
    596e:	cf 91       	pop	r28
    5970:	1f 91       	pop	r17
    5972:	0f 91       	pop	r16
    5974:	ff 90       	pop	r15
    5976:	ef 90       	pop	r14
    5978:	df 90       	pop	r13
    597a:	cf 90       	pop	r12
    597c:	bf 90       	pop	r11
    597e:	af 90       	pop	r10
    5980:	9f 90       	pop	r9
    5982:	8f 90       	pop	r8
    5984:	7f 90       	pop	r7
    5986:	6f 90       	pop	r6
    5988:	5f 90       	pop	r5
    598a:	4f 90       	pop	r4
    598c:	3f 90       	pop	r3
    598e:	2f 90       	pop	r2
    5990:	08 95       	ret

00005992 <strnlen_P>:
    5992:	fc 01       	movw	r30, r24
    5994:	05 90       	lpm	r0, Z+
    5996:	61 50       	subi	r22, 0x01	; 1
    5998:	70 40       	sbci	r23, 0x00	; 0
    599a:	01 10       	cpse	r0, r1
    599c:	d8 f7       	brcc	.-10     	; 0x5994 <strnlen_P+0x2>
    599e:	80 95       	com	r24
    59a0:	90 95       	com	r25
    59a2:	8e 0f       	add	r24, r30
    59a4:	9f 1f       	adc	r25, r31
    59a6:	08 95       	ret

000059a8 <strnlen>:
    59a8:	fc 01       	movw	r30, r24
    59aa:	61 50       	subi	r22, 0x01	; 1
    59ac:	70 40       	sbci	r23, 0x00	; 0
    59ae:	01 90       	ld	r0, Z+
    59b0:	01 10       	cpse	r0, r1
    59b2:	d8 f7       	brcc	.-10     	; 0x59aa <strnlen+0x2>
    59b4:	80 95       	com	r24
    59b6:	90 95       	com	r25
    59b8:	8e 0f       	add	r24, r30
    59ba:	9f 1f       	adc	r25, r31
    59bc:	08 95       	ret

000059be <fputc>:
    59be:	0f 93       	push	r16
    59c0:	1f 93       	push	r17
    59c2:	cf 93       	push	r28
    59c4:	df 93       	push	r29
    59c6:	fb 01       	movw	r30, r22
    59c8:	23 81       	ldd	r18, Z+3	; 0x03
    59ca:	21 fd       	sbrc	r18, 1
    59cc:	03 c0       	rjmp	.+6      	; 0x59d4 <fputc+0x16>
    59ce:	8f ef       	ldi	r24, 0xFF	; 255
    59d0:	9f ef       	ldi	r25, 0xFF	; 255
    59d2:	2c c0       	rjmp	.+88     	; 0x5a2c <fputc+0x6e>
    59d4:	22 ff       	sbrs	r18, 2
    59d6:	16 c0       	rjmp	.+44     	; 0x5a04 <fputc+0x46>
    59d8:	46 81       	ldd	r20, Z+6	; 0x06
    59da:	57 81       	ldd	r21, Z+7	; 0x07
    59dc:	24 81       	ldd	r18, Z+4	; 0x04
    59de:	35 81       	ldd	r19, Z+5	; 0x05
    59e0:	42 17       	cp	r20, r18
    59e2:	53 07       	cpc	r21, r19
    59e4:	44 f4       	brge	.+16     	; 0x59f6 <fputc+0x38>
    59e6:	a0 81       	ld	r26, Z
    59e8:	b1 81       	ldd	r27, Z+1	; 0x01
    59ea:	9d 01       	movw	r18, r26
    59ec:	2f 5f       	subi	r18, 0xFF	; 255
    59ee:	3f 4f       	sbci	r19, 0xFF	; 255
    59f0:	31 83       	std	Z+1, r19	; 0x01
    59f2:	20 83       	st	Z, r18
    59f4:	8c 93       	st	X, r24
    59f6:	26 81       	ldd	r18, Z+6	; 0x06
    59f8:	37 81       	ldd	r19, Z+7	; 0x07
    59fa:	2f 5f       	subi	r18, 0xFF	; 255
    59fc:	3f 4f       	sbci	r19, 0xFF	; 255
    59fe:	37 83       	std	Z+7, r19	; 0x07
    5a00:	26 83       	std	Z+6, r18	; 0x06
    5a02:	14 c0       	rjmp	.+40     	; 0x5a2c <fputc+0x6e>
    5a04:	8b 01       	movw	r16, r22
    5a06:	ec 01       	movw	r28, r24
    5a08:	fb 01       	movw	r30, r22
    5a0a:	00 84       	ldd	r0, Z+8	; 0x08
    5a0c:	f1 85       	ldd	r31, Z+9	; 0x09
    5a0e:	e0 2d       	mov	r30, r0
    5a10:	19 95       	eicall
    5a12:	89 2b       	or	r24, r25
    5a14:	e1 f6       	brne	.-72     	; 0x59ce <fputc+0x10>
    5a16:	d8 01       	movw	r26, r16
    5a18:	16 96       	adiw	r26, 0x06	; 6
    5a1a:	8d 91       	ld	r24, X+
    5a1c:	9c 91       	ld	r25, X
    5a1e:	17 97       	sbiw	r26, 0x07	; 7
    5a20:	01 96       	adiw	r24, 0x01	; 1
    5a22:	17 96       	adiw	r26, 0x07	; 7
    5a24:	9c 93       	st	X, r25
    5a26:	8e 93       	st	-X, r24
    5a28:	16 97       	sbiw	r26, 0x06	; 6
    5a2a:	ce 01       	movw	r24, r28
    5a2c:	df 91       	pop	r29
    5a2e:	cf 91       	pop	r28
    5a30:	1f 91       	pop	r17
    5a32:	0f 91       	pop	r16
    5a34:	08 95       	ret

00005a36 <__ultoa_invert>:
    5a36:	fa 01       	movw	r30, r20
    5a38:	aa 27       	eor	r26, r26
    5a3a:	28 30       	cpi	r18, 0x08	; 8
    5a3c:	51 f1       	breq	.+84     	; 0x5a92 <__ultoa_invert+0x5c>
    5a3e:	20 31       	cpi	r18, 0x10	; 16
    5a40:	81 f1       	breq	.+96     	; 0x5aa2 <__ultoa_invert+0x6c>
    5a42:	e8 94       	clt
    5a44:	6f 93       	push	r22
    5a46:	6e 7f       	andi	r22, 0xFE	; 254
    5a48:	6e 5f       	subi	r22, 0xFE	; 254
    5a4a:	7f 4f       	sbci	r23, 0xFF	; 255
    5a4c:	8f 4f       	sbci	r24, 0xFF	; 255
    5a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    5a50:	af 4f       	sbci	r26, 0xFF	; 255
    5a52:	b1 e0       	ldi	r27, 0x01	; 1
    5a54:	3e d0       	rcall	.+124    	; 0x5ad2 <__ultoa_invert+0x9c>
    5a56:	b4 e0       	ldi	r27, 0x04	; 4
    5a58:	3c d0       	rcall	.+120    	; 0x5ad2 <__ultoa_invert+0x9c>
    5a5a:	67 0f       	add	r22, r23
    5a5c:	78 1f       	adc	r23, r24
    5a5e:	89 1f       	adc	r24, r25
    5a60:	9a 1f       	adc	r25, r26
    5a62:	a1 1d       	adc	r26, r1
    5a64:	68 0f       	add	r22, r24
    5a66:	79 1f       	adc	r23, r25
    5a68:	8a 1f       	adc	r24, r26
    5a6a:	91 1d       	adc	r25, r1
    5a6c:	a1 1d       	adc	r26, r1
    5a6e:	6a 0f       	add	r22, r26
    5a70:	71 1d       	adc	r23, r1
    5a72:	81 1d       	adc	r24, r1
    5a74:	91 1d       	adc	r25, r1
    5a76:	a1 1d       	adc	r26, r1
    5a78:	20 d0       	rcall	.+64     	; 0x5aba <__ultoa_invert+0x84>
    5a7a:	09 f4       	brne	.+2      	; 0x5a7e <__ultoa_invert+0x48>
    5a7c:	68 94       	set
    5a7e:	3f 91       	pop	r19
    5a80:	2a e0       	ldi	r18, 0x0A	; 10
    5a82:	26 9f       	mul	r18, r22
    5a84:	11 24       	eor	r1, r1
    5a86:	30 19       	sub	r19, r0
    5a88:	30 5d       	subi	r19, 0xD0	; 208
    5a8a:	31 93       	st	Z+, r19
    5a8c:	de f6       	brtc	.-74     	; 0x5a44 <__ultoa_invert+0xe>
    5a8e:	cf 01       	movw	r24, r30
    5a90:	08 95       	ret
    5a92:	46 2f       	mov	r20, r22
    5a94:	47 70       	andi	r20, 0x07	; 7
    5a96:	40 5d       	subi	r20, 0xD0	; 208
    5a98:	41 93       	st	Z+, r20
    5a9a:	b3 e0       	ldi	r27, 0x03	; 3
    5a9c:	0f d0       	rcall	.+30     	; 0x5abc <__ultoa_invert+0x86>
    5a9e:	c9 f7       	brne	.-14     	; 0x5a92 <__ultoa_invert+0x5c>
    5aa0:	f6 cf       	rjmp	.-20     	; 0x5a8e <__ultoa_invert+0x58>
    5aa2:	46 2f       	mov	r20, r22
    5aa4:	4f 70       	andi	r20, 0x0F	; 15
    5aa6:	40 5d       	subi	r20, 0xD0	; 208
    5aa8:	4a 33       	cpi	r20, 0x3A	; 58
    5aaa:	18 f0       	brcs	.+6      	; 0x5ab2 <__ultoa_invert+0x7c>
    5aac:	49 5d       	subi	r20, 0xD9	; 217
    5aae:	31 fd       	sbrc	r19, 1
    5ab0:	40 52       	subi	r20, 0x20	; 32
    5ab2:	41 93       	st	Z+, r20
    5ab4:	02 d0       	rcall	.+4      	; 0x5aba <__ultoa_invert+0x84>
    5ab6:	a9 f7       	brne	.-22     	; 0x5aa2 <__ultoa_invert+0x6c>
    5ab8:	ea cf       	rjmp	.-44     	; 0x5a8e <__ultoa_invert+0x58>
    5aba:	b4 e0       	ldi	r27, 0x04	; 4
    5abc:	a6 95       	lsr	r26
    5abe:	97 95       	ror	r25
    5ac0:	87 95       	ror	r24
    5ac2:	77 95       	ror	r23
    5ac4:	67 95       	ror	r22
    5ac6:	ba 95       	dec	r27
    5ac8:	c9 f7       	brne	.-14     	; 0x5abc <__ultoa_invert+0x86>
    5aca:	00 97       	sbiw	r24, 0x00	; 0
    5acc:	61 05       	cpc	r22, r1
    5ace:	71 05       	cpc	r23, r1
    5ad0:	08 95       	ret
    5ad2:	9b 01       	movw	r18, r22
    5ad4:	ac 01       	movw	r20, r24
    5ad6:	0a 2e       	mov	r0, r26
    5ad8:	06 94       	lsr	r0
    5ada:	57 95       	ror	r21
    5adc:	47 95       	ror	r20
    5ade:	37 95       	ror	r19
    5ae0:	27 95       	ror	r18
    5ae2:	ba 95       	dec	r27
    5ae4:	c9 f7       	brne	.-14     	; 0x5ad8 <__ultoa_invert+0xa2>
    5ae6:	62 0f       	add	r22, r18
    5ae8:	73 1f       	adc	r23, r19
    5aea:	84 1f       	adc	r24, r20
    5aec:	95 1f       	adc	r25, r21
    5aee:	a0 1d       	adc	r26, r0
    5af0:	08 95       	ret

00005af2 <_exit>:
    5af2:	f8 94       	cli

00005af4 <__stop_program>:
    5af4:	ff cf       	rjmp	.-2      	; 0x5af4 <__stop_program>
